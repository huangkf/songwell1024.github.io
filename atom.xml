<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>记路心晴</title>
  
  <subtitle>心晴路放</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-19T09:48:05.730Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>WilsonSong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jQuery</title>
    <link href="http://yoursite.com/2018/08/19/jQuery/"/>
    <id>http://yoursite.com/2018/08/19/jQuery/</id>
    <published>2018-08-19T09:45:58.000Z</published>
    <updated>2018-08-19T09:48:05.730Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jQuery基础知识学习总结"><a href="#jQuery基础知识学习总结" class="headerlink" title="jQuery基础知识学习总结"></a>jQuery基础知识学习总结</h1><p>什么JQuery:</p><p>jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（<em>或JavaScript框架</em>）。jQuery设计的宗旨是“write Less，Do More”，即倡导写更少的代码，做更多的事情。它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。</p><a id="more"></a><p>jQuery的核心特性可以总结为：具有独特的链式语法和短小清晰的多功能接口；具有高效灵活的css选择器，并且可对CSS选择器进行扩展；拥有便捷的插件扩展机制和丰富的插件。jQuery兼容各种主流浏览器，如IE 6.0+、FF 1.5+、Safari 2.0+、Opera 9.0+等</p><h4 id="使用jQuery完成页面定时弹出广告"><a href="#使用jQuery完成页面定时弹出广告" class="headerlink" title="使用jQuery完成页面定时弹出广告"></a>使用jQuery完成页面定时弹出广告</h4><p>定时器: </p><pre><code>setInterval     clearIntervalsetTimeout    clearTimeout</code></pre><p>显示:  img.style.display  = “block”</p><p>隐藏:  img.style.display  = “none”</p><p>img 对象</p><pre><code>style属性:  style对象</code></pre><h4 id="使用jQuery完成表格的隔行换色"><a href="#使用jQuery完成表格的隔行换色" class="headerlink" title="使用jQuery完成表格的隔行换色"></a>使用jQuery完成表格的隔行换色</h4><p>获得所有的行</p><pre><code>table.rows[]</code></pre><p>修改行的颜色</p><pre><code>row.bgColor =&quot;red&quot;row.style.backgroundColor = &quot;black&quot;row.style.background = &quot;red&quot;&quot;background-color:red&quot;&quot;background:red&quot;</code></pre><h4 id="使用jQuery完成复选框的全选效果"><a href="#使用jQuery完成复选框的全选效果" class="headerlink" title="使用jQuery完成复选框的全选效果"></a>使用jQuery完成复选框的全选效果</h4><p>checked属性</p><p>如何获取所有复选框:</p><pre><code>document.getElementsByName   get Elements  By Name  数据库里面</code></pre><h4 id="使用jQuery完成省市联动效果"><a href="#使用jQuery完成省市联动效果" class="headerlink" title="使用jQuery完成省市联动效果"></a>使用jQuery完成省市联动效果</h4><pre><code>JS中的数组:  [&quot;城市&quot;]new Array()DOM树操作:    创建节点:  document.createElement    创建文本节点: document.createTextNode    添加节点:  appendChild</code></pre><h4 id="使用jQuery完成下列列表左右选择"><a href="#使用jQuery完成下列列表左右选择" class="headerlink" title="使用jQuery完成下列列表左右选择"></a>使用jQuery完成下列列表左右选择</h4><pre><code>select下拉列表multiple 允许多选ondblclick : 双击事件for循环遍历,一边遍历一边移除出现的问题</code></pre><h4 id="使用jQuery完成表单的校验-扩展"><a href="#使用jQuery完成表单的校验-扩展" class="headerlink" title="使用jQuery完成表单的校验(扩展)"></a>使用jQuery完成表单的校验(扩展)</h4><pre><code>事件:获得焦点事件: onfocus失去焦点事件: onblur按键抬起事件: onkeyup鼠标移入:  onmouseenter鼠标移出: onmouseoutJS引入外部文件 : script </code></pre><h3 id="使用jQuery完成页面定时弹出广告-1"><a href="#使用jQuery完成页面定时弹出广告-1" class="headerlink" title="使用jQuery完成页面定时弹出广告"></a>使用jQuery完成页面定时弹出广告</h3><p>JQ的入门</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//js文档加载完成的事件</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">alert(<span class="string">"window.onload   111"</span>);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">alert(<span class="string">"window.onload   222"</span>);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">/*文档加载完成的事件*/</span></span></span><br><span class="line"><span class="javascript">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"> alert(<span class="string">"jQuery(document).ready(function()"</span>);</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined">/*</span></span><br><span class="line"><span class="undefined"> jQuery  简写成 $</span></span><br><span class="line"><span class="undefined"> */</span></span><br><span class="line"><span class="javascript">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"> alert(<span class="string">"$(document).ready(function()"</span>);</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">/*</span></span><br><span class="line"><span class="undefined">最简单的写法 </span></span><br><span class="line"><span class="undefined">*/</span></span><br><span class="line"><span class="javascript">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">alert(<span class="string">"$(function()&#123;"</span>);</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>【JQ中根据ID查找元素】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">全都是根据选择器去找的</span><br><span class="line">#ID&#123;&#125;</span><br><span class="line">.类名&#123;&#125;</span><br><span class="line">$("#ID的名称")</span><br></pre></td></tr></table></figure><p>【JQ和JS之间的转换】</p><ul><li>JQ对象,只能调用JQ的属性和方法</li><li>JS对象 只能调用JS的属性和方法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">function changeJS()&#123;</span><br><span class="line">var div = document.getElementById("div1");</span><br><span class="line">//div.innerHTML = "JS成功修改了内容"</span><br><span class="line">//将JS对象转成JQ对象</span><br><span class="line">$(div).html("转成JQ对象来修改内容")</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(function()&#123;</span><br><span class="line">//给按钮绑定事件</span><br><span class="line">$("#btn2").click(function()&#123;</span><br><span class="line">//找到div1</span><br><span class="line">//$("#div1").html("JQ方式成功修改了内容");</span><br><span class="line">//将JQ对象转成JS对象来调用</span><br><span class="line">var $div = $("#div1");</span><br><span class="line">//var jsDiv = $div.get(0);</span><br><span class="line">var jsDiv = $div[0];</span><br><span class="line">jsDiv.innerHTML="jq转成JS对象成功";</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>JQ的开发步骤: (将我们页面的JS代码和HTML页面代码进行分离)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 导入JQ相关的文件</span><br><span class="line">2.  文档加载完成事件: $(function)  : 页面初始化的操作: 绑定事件, 启动页面定时器</span><br><span class="line">3. 确定相关操作的事件</span><br><span class="line">4. 事件触发函数</span><br><span class="line">5. 函数里面再去操作相关的元素</span><br></pre></td></tr></table></figure><p>显示和隐藏  img.style.display</p><p>【JQ中的动画效果】</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">show()</span><br><span class="line">hide()</span><br><span class="line">slideUp</span><br><span class="line">slideDown</span><br><span class="line">fadeIn</span><br><span class="line">fadeOut</span><br><span class="line">animate : 自定义动画</span><br></pre></td></tr></table></figure><h4 id="步骤分析："><a href="#步骤分析：" class="headerlink" title="步骤分析："></a>步骤分析：</h4><ol><li>导入JQ的文件</li><li>编写JQ的文档加载事件</li><li>启动定时器 setTimeout(“”,3000);</li><li>编写显示广告的函数</li><li>在显示广告里面再启动一个定时器</li><li>编写隐藏广告的函数</li></ol><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//显示广告</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">showAd</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#img1"</span>).slideDown(<span class="number">2000</span>);</span></span><br><span class="line"><span class="javascript">        setTimeout(<span class="string">"hideAd()"</span>,<span class="number">3000</span>);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//隐藏广告</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">hideAd</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#img1"</span>).slideUp(<span class="number">2000</span>);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;        <span class="comment">//文档加载完成才这么做</span></span></span><br><span class="line"><span class="javascript">        setTimeout(<span class="string">"showAd()"</span>,<span class="number">3000</span>);</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="jQuery中的选择器"><a href="#jQuery中的选择器" class="headerlink" title="jQuery中的选择器"></a>jQuery中的选择器</h3><p>让我们能够更加精确找到我们要操作的元素    </p><h5 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h5><ul><li>ID选择器 :     #ID的名称</li><li>类选择器:     以 . 开头  .类名</li><li>元素选择器:    标签的名称</li><li>通配符选择器:   * </li><li>选择器,选择器:  选择器1,选择器2</li></ul><h5 id="基本选择器的案例"><a href="#基本选择器的案例" class="headerlink" title="基本选择器的案例"></a>基本选择器的案例</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">- ID选择器 :     #ID的名称</span><br><span class="line">- 类选择器:     以 . 开头  .类名</span><br><span class="line">- 元素选择器:    标签的名称</span><br><span class="line">- 通配符选择器:   * </span><br><span class="line">- 选择器,选择器:  选择器<span class="number">1</span>,选择器<span class="number">2</span></span><br><span class="line">--&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="comment">//文档加载事件,页面初始化的操作</span></span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//初始化操作: 给按钮绑定事件</span></span><br><span class="line">$(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">"#two"</span>).css(<span class="string">"background-color"</span>,<span class="string">"palegreen"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//找出mini类的所有元素</span></span><br><span class="line">$(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">".mini"</span>).css(<span class="string">"background-color"</span>,<span class="string">"palegreen"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">"#btn3"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">"div"</span>).css(<span class="string">"background-color"</span>,<span class="string">"palegreen"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">"#btn4"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">"*"</span>).css(<span class="string">"background-color"</span>,<span class="string">"palegreen"</span>);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">/*选择器分组*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//找出mini类 和 span元素</span></span><br><span class="line">$(<span class="string">"#btn5"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">".mini,span"</span>).css(<span class="string">"background-color"</span>,<span class="string">"palegreen"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h5 id="JQ中的层级选择器"><a href="#JQ中的层级选择器" class="headerlink" title="JQ中的层级选择器"></a>JQ中的层级选择器</h5><ul><li>子元素选择器:   选择器1 &gt; 选择器2</li><li>后代选择器:  选择器1 儿孙</li><li>相邻兄弟选择器 :  选择器1 + 选择器2 : 找出紧挨着的一个弟弟</li><li>找出所有弟弟:  选择器1~ 选择器2   : 找出所有的弟弟</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//文档加载事件,页面初始化的操作</span></span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//初始化操作: 给按钮绑定事件</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//找出body下面的子div   </span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"body &gt; div"</span>).css(<span class="string">"background-color"</span>,<span class="string">"palegreen"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//找出body下面的所有div</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"body div"</span>).css(<span class="string">"background-color"</span>,<span class="string">"palegreen"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#btn3"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#one+div"</span>).css(<span class="string">"background-color"</span>,<span class="string">"palegreen"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#btn4"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#two~div"</span>).css(<span class="string">"background-color"</span>,<span class="string">"palegreen"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="JQ中的基本过滤器"><a href="#JQ中的基本过滤器" class="headerlink" title="JQ中的基本过滤器"></a>JQ中的基本过滤器</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        /<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//文档加载事件,页面初始化的操作</span></span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//初始化操作: 给按钮绑定事件</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//过滤出所有div中第一个元素</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"div:first"</span>).css(<span class="string">"background-color"</span>,<span class="string">"palegreen"</span>);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//过滤出所有div中偶数位的div</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"div:even"</span>).css(<span class="string">"background-color"</span>,<span class="string">"palegreen"</span>);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#btn3"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"div:odd"</span>).css(<span class="string">"background-color"</span>,<span class="string">"palegreen"</span>);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#btn4"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"div:gt(2)"</span>).css(<span class="string">"background-color"</span>,<span class="string">"palegreen"</span>);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="JQ中的属性选择器"><a href="#JQ中的属性选择器" class="headerlink" title="JQ中的属性选择器"></a>JQ中的属性选择器</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">//找到有name属性的input</span><br><span class="line">$("#btn1").click(function()&#123;</span><br><span class="line">$("input[name]").attr("checked",true);</span><br><span class="line">&#125;);</span><br><span class="line">$("#btn2").click(function()&#123;</span><br><span class="line">$("input[name='accept']").attr("checked",true);</span><br><span class="line">&#125;);</span><br><span class="line">$("#btn3").click(function()&#123;</span><br><span class="line">$("input[name='newsletter'][value='Hot Fuzz']").attr("checked",true);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="JQ中的表单过滤器"><a href="#JQ中的表单过滤器" class="headerlink" title="JQ中的表单过滤器"></a>JQ中的表单过滤器</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="comment">//1.文档加载事件</span></span></span><br><span class="line"><span class="javascript">  $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">":text"</span>).css(<span class="string">"background-color"</span>,<span class="string">"pink"</span>);</span></span><br><span class="line"><span class="undefined">  &#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用JQ完成表格的隔行换色"><a href="#使用JQ完成表格的隔行换色" class="headerlink" title="使用JQ完成表格的隔行换色"></a>使用JQ完成表格的隔行换色</h3><h4 id="步骤分析"><a href="#步骤分析" class="headerlink" title="步骤分析:"></a>步骤分析:</h4><ol><li>导入JQ的包</li><li>文档加载完成函数: 页面初始化</li><li>获得所有的行 :   元素选择器</li><li>根据行号去修改颜色</li></ol><h4 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现:"></a>代码实现:</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">//获得所有的行 :   元素选择器</span><br><span class="line">$("tbody &gt; tr:even").css("background-color","#CCCCCC");</span><br><span class="line">//修改基数行</span><br><span class="line">$("tbody &gt; tr:odd").css("background-color","#FFF38F");</span><br><span class="line">//$("tbody &gt; tr").css("background-color","#FFF38F");</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="使用JQ完成省市联动效果"><a href="#使用JQ完成省市联动效果" class="headerlink" title="使用JQ完成省市联动效果"></a>使用JQ完成省市联动效果</h3><h4 id="技术分析"><a href="#技术分析" class="headerlink" title="技术分析:"></a>技术分析:</h4><ol><li><p>准备工作 : 城市信息的数据</p></li><li><p>添加节点 :  appendChild (JS)</p><ol><li>append  :  添加子元素到末尾</li><li>appendTo  : 给自己找一个爹,将自己添加到别人家里</li><li>prepend : 在子元素前面添加</li><li>after :   在自己的后面添加一个兄弟</li></ol></li><li><p>遍历的操作:</p></li></ol><h4 id="步骤分析-1"><a href="#步骤分析-1" class="headerlink" title="步骤分析:"></a>步骤分析:</h4><ol><li>导入JQ的文件</li><li>文档加载事件:页面初始化</li><li>进一步确定事件:  change事件</li><li>函数: 得到当前选中省份</li><li>得到城市, 遍历城市数据</li><li>将遍历出来的城市添加到城市的select中</li></ol><h4 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现:"></a>代码实现:</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">"#province"</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//alert(this.value);</span></span><br><span class="line"><span class="comment">//得到城市信息</span></span><br><span class="line"><span class="keyword">var</span> cities = provinces[<span class="keyword">this</span>.value];</span><br><span class="line"><span class="comment">//清空城市select中的option</span></span><br><span class="line"><span class="comment">/*var $city = $("#city");</span></span><br><span class="line"><span class="comment">//将JQ对象转成JS对象</span></span><br><span class="line"><span class="comment">var citySelect = $city.get(0)</span></span><br><span class="line"><span class="comment">citySelect.options.length = 0;*/</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">"#city"</span>).empty();  <span class="comment">//采用JQ的方式清空</span></span><br><span class="line"><span class="comment">//遍历城市数据</span></span><br><span class="line">$(cities).each(<span class="function"><span class="keyword">function</span>(<span class="params">i,n</span>)</span>&#123;</span><br><span class="line">$(<span class="string">"#city"</span>).append(<span class="string">"&lt;option&gt;"</span>+n+<span class="string">"&lt;/option&gt;"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="使用JQ完成下拉列表左右选择"><a href="#使用JQ完成下拉列表左右选择" class="headerlink" title="使用JQ完成下拉列表左右选择"></a>使用JQ完成下拉列表左右选择</h4><h4 id="步骤分析-2"><a href="#步骤分析-2" class="headerlink" title="步骤分析"></a>步骤分析</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 导入JQ的文件</span><br><span class="line">2. 文档加载函数 :页面初始化</span><br><span class="line">3.确定事件 :　点击事件　onclick</span><br><span class="line">4. 事件触发函数</span><br><span class="line">1. 移动被选中的那一项到右边</span><br></pre></td></tr></table></figure><h4 id="代码实现-3"><a href="#代码实现-3" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"../js/jquery-1.11.0.js"</span> &gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">"#a1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//找到被选中的那一项</span></span><br><span class="line"><span class="comment">//将被选中项添加到右边</span></span><br><span class="line">$(<span class="string">"#rightSelect"</span>).append($(<span class="string">"#leftSelect option:selected"</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将左边所有商品移动到右边</span></span><br><span class="line">$(<span class="string">"#a2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">"#rightSelect"</span>).append($(<span class="string">"#leftSelect option"</span>));</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="使用JQ完成表单的校验-扩展"><a href="#使用JQ完成表单的校验-扩展" class="headerlink" title="使用JQ完成表单的校验(扩展)"></a>使用JQ完成表单的校验(扩展)</h4><h4 id="技术分析-1"><a href="#技术分析-1" class="headerlink" title="技术分析"></a>技术分析</h4><ul><li>trigger</li><li>triggerHandler</li><li>is()</li></ul><h4 id="步骤分析-3"><a href="#步骤分析-3" class="headerlink" title="步骤分析"></a>步骤分析</h4><ol><li>首先给必填项,添加尾部添加一个小红点</li><li>获取用户输入的信息,做相应的校验</li><li>事件: 获得焦点, 失去焦点, 按键抬起</li><li>表单提交的事件</li></ol><h4 id="代码实现-4"><a href="#代码实现-4" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"../css/style.css"</span> /&gt;</span><br><span class="line">&lt;title&gt;<span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line">&lt;!--</span><br><span class="line"><span class="number">1.</span> 首先给必填项,添加尾部添加一个小红点</span><br><span class="line"><span class="number">2.</span> 获取用户输入的信息,做相应的校验</span><br><span class="line"><span class="number">3.</span> 事件: 获得焦点, 失去焦点, 按键抬起</span><br><span class="line"><span class="number">4.</span> 表单提交的事件</span><br><span class="line"></span><br><span class="line">Jq的方式来实现:</span><br><span class="line"><span class="number">1.</span> 导入JQ的文件</span><br><span class="line"><span class="number">2.</span> 文档加载事件: 在必填项后天加一个小红点</span><br><span class="line"><span class="number">3.</span> 表单校验确定事件: blur focus keyup</span><br><span class="line"><span class="number">4.</span> 提交表单 submit</span><br><span class="line">--&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"../js/jquery-1.11.0.js"</span> &gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  <span class="comment">//默认做一些页面初始化</span></span><br><span class="line"><span class="comment">//动态在必填项后面添加小红点</span></span><br><span class="line">$(<span class="string">".bitian"</span>).after(<span class="string">"&lt;font class='high'&gt;*&lt;/font&gt;"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//给必填项绑定事件</span></span><br><span class="line">$(<span class="string">".bitian"</span>).blur(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//首先获取用户当前输入的值</span></span><br><span class="line"><span class="keyword">var</span> value = <span class="keyword">this</span>.value; <span class="comment">//123</span></span><br><span class="line"><span class="comment">//清空上一次提示的信息</span></span><br><span class="line">$(<span class="keyword">this</span>).parent().find(<span class="string">".formtips"</span>).remove();</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断当前的值是哪一项输入的值</span></span><br><span class="line"><span class="keyword">if</span>($(<span class="keyword">this</span>).is(<span class="string">"#username"</span>))&#123;  <span class="comment">//判断是否是用户名输入项</span></span><br><span class="line"><span class="keyword">if</span>(value.length &lt; <span class="number">6</span>)&#123;</span><br><span class="line">$(<span class="keyword">this</span>).parent().append(<span class="string">"&lt;span class='formtips onError'&gt;用户名太短了&lt;/span&gt;"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$(<span class="keyword">this</span>).parent().append(<span class="string">"&lt;span class='formtips onSuccess'&gt;用户名够用&lt;/span&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($(<span class="keyword">this</span>).is(<span class="string">"#password"</span>))&#123;  <span class="comment">//判断是否是密码输入项</span></span><br><span class="line"><span class="keyword">if</span>(value.length &lt; <span class="number">6</span>)&#123;</span><br><span class="line">$(<span class="keyword">this</span>).parent().append(<span class="string">"&lt;span class='formtips onError'&gt;,密码太短了&lt;/span&gt;"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$(<span class="keyword">this</span>).parent().append(<span class="string">"&lt;span class='formtips onSuccess'&gt;密码够用&lt;/span&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;).focus(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="keyword">this</span>).triggerHandler(<span class="string">"blur"</span>);</span><br><span class="line">&#125;).keyup(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="keyword">this</span>).triggerHandler(<span class="string">"blur"</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//给表单提交绑定事件</span></span><br><span class="line">$(<span class="string">"form"</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//触发所有必填项的校验</span></span><br><span class="line">$(<span class="string">".bitian"</span>).trigger(<span class="string">"focus"</span>);</span><br><span class="line"><span class="comment">//找到错误信息的个数</span></span><br><span class="line"><span class="keyword">if</span>($(<span class="string">".onError"</span>).length &gt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">$(function()&#123;</span></span><br><span class="line"><span class="comment">// 在所有必填项后天加一个小红点 *</span></span><br><span class="line"><span class="comment">$(".bitian").after("&lt;font class='high'&gt;*&lt;/font&gt;");</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">//事件绑定</span></span><br><span class="line"><span class="comment">$(".bitian").blur(function()&#123;</span></span><br><span class="line"><span class="comment">//var value = this.value;</span></span><br><span class="line"><span class="comment">var value = $(this).val();</span></span><br><span class="line"><span class="comment">//清空当前必填项后面的span </span></span><br><span class="line"><span class="comment">//$(".formtips").remove();</span></span><br><span class="line"><span class="comment">$(this).parent().find(".formtips").remove();</span></span><br><span class="line"><span class="comment">//获得当前事件是谁的</span></span><br><span class="line"><span class="comment">if($(this).is("#username"))&#123;</span></span><br><span class="line"><span class="comment">//校验用户名</span></span><br><span class="line"><span class="comment">if(value.length &lt; 6)&#123;</span></span><br><span class="line"><span class="comment">$(this).parent().append("&lt;span class='formtips onError'&gt;用户名太短了&lt;/span&gt;");</span></span><br><span class="line"><span class="comment">&#125;else&#123;</span></span><br><span class="line"><span class="comment">$(this).parent().append("&lt;span class='formtips onSuccess'&gt;用户名够用&lt;/span&gt;");</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if($(this).is("#password"))&#123;</span></span><br><span class="line"><span class="comment">//校验密码</span></span><br><span class="line"><span class="comment">if(value.length &lt; 3)&#123;</span></span><br><span class="line"><span class="comment">$(this).parent().append("&lt;span class='formtips onError'&gt;密码太短了&lt;/span&gt;");</span></span><br><span class="line"><span class="comment">&#125;else&#123;</span></span><br><span class="line"><span class="comment">$(this).parent().append("&lt;span class='formtips onSuccess'&gt;密码够用&lt;/span&gt;");</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;).focus(function()&#123;</span></span><br><span class="line"><span class="comment">$(this).triggerHandler("blur");</span></span><br><span class="line"><span class="comment">&#125;).keyup(function()&#123;</span></span><br><span class="line"><span class="comment">$(this).triggerHandler("blur");</span></span><br><span class="line"><span class="comment">&#125;);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">//$(".bitian").blur(function()&#123;&#125;).focus(function()&#123;&#125;).keyup(function()&#123;&#125;)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">//给表单绑定提交事件</span></span><br><span class="line"><span class="comment">$("form").submit(function()&#123;</span></span><br><span class="line"><span class="comment">//触发必填项的校验逻辑</span></span><br><span class="line"><span class="comment">$(".bitian").trigger("focus");</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">var length = $(".onError").length</span></span><br><span class="line"><span class="comment">if(length &gt; 0)&#123;</span></span><br><span class="line"><span class="comment">return false;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">return true;</span></span><br><span class="line"><span class="comment">&#125;);</span></span><br><span class="line"><span class="comment">&#125;);*/</span></span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">"../index.html"</span>&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">用户名:<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"bitian"</span> <span class="attr">id</span>=<span class="string">"username"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;div&gt;</span><br><span class="line">密码:<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span>  <span class="attr">class</span>=<span class="string">"bitian"</span> <span class="attr">id</span>=<span class="string">"password"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;div&gt;</span><br><span class="line">手机号:<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"tel"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span> /&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>form&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><h3 id="使用JQuery发送请求局部刷新页面"><a href="#使用JQuery发送请求局部刷新页面" class="headerlink" title="使用JQuery发送请求局部刷新页面"></a>使用JQuery发送请求局部刷新页面</h3><p>数据交换格式:</p><pre><code>jsonxml</code></pre><ul><li><p>什么是JSON</p><p><a href="http://baike.baidu.com/view/136475.htm" target="_blank" rel="noopener">JSON</a>(<a href="http://baike.baidu.com/view/16168.htm" target="_blank" rel="noopener">JavaScript</a> Object Notation) 是一种轻量级的数据交换格式。它基于<a href="http://baike.baidu.com/view/810176.htm" target="_blank" rel="noopener">ECMAScript</a>的一个子集。 JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯（包括<a href="http://baike.baidu.com/subview/10075/6770152.htm" target="_blank" rel="noopener">C</a>、C++、<a href="http://baike.baidu.com/view/6590.htm" target="_blank" rel="noopener">C#</a>、<a href="http://baike.baidu.com/subview/29/12654100.htm" target="_blank" rel="noopener">Java</a>、JavaScript、<a href="http://baike.baidu.com/view/46614.htm" target="_blank" rel="noopener">Perl</a>、<a href="http://baike.baidu.com/view/21087.htm" target="_blank" rel="noopener">Python</a>等）。这些特性使JSON成为理想的数据交换语言。 易于人阅读和编写，同时也易于机器解析和生成(一般用于提升网络传输速率)。</p></li><li><p>JSON格式</p><pre><code>JSON对象</code></pre><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123; key1:value&#125;   </span><br><span class="line">&#123;<span class="attr">"username"</span>:<span class="string">"zhangsan"</span>,<span class="attr">"password"</span>:<span class="string">"123"</span>&#125;</span><br></pre></td></tr></table></figure><pre><code>JSON数组</code></pre><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123; key1:value&#125;,&#123; key1:value&#125;,&#123; key1:value&#125;]</span><br></pre></td></tr></table></figure></li></ul><h4 id="内容总结"><a href="#内容总结" class="headerlink" title="内容总结:"></a>内容总结:</h4><p>定时器</p><p>动画效果: show  hide  slideDown  slideUp fadeIn  fadeOut  animate</p><p>基本选择器:</p><pre><code>ID选择器: #ID名称类选择器: .类名元素选择器: 元素/标签名称通配符选择器:  *  找出所有页面元素 包含页面上所有的标签选择器分组 :   选择器1, 选择器2      [选择器1,选择器2]</code></pre><p>层级选择器:</p><pre><code>后代选择器:  选择器1 选择器2  找出所有的后代,儿子孙子曾孙子元素选择器: 选择器1 &gt;选择器2  找出所有儿子相邻兄弟选择器:  选择器1+选择器2  : 找出紧挨着自己那个弟弟兄弟选择器 :　　　选择器1~选择器2  :  找出所有的弟弟</code></pre><p>属性选择器:</p><pre><code>选择器[属性名称]</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">选择器[属性名称][属性名名]</span><br><span class="line">选择器[属性名称='属性值'][属性名称='属性值'][属性名称='属性值']</span><br></pre></td></tr></table></figure><p>表单选择器:</p><pre><code>:input   找出所有的输入项 : 不单单找出input  textarea select :text  找出type类型为 text:password</code></pre><p>基本过滤器:</p><pre><code>:even:odd:gt:lt:eq:first:last</code></pre><p>表单对象属性:</p><pre><code>:selected:checked</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$(function)  : 文档加载完成的事件</span><br><span class="line">css()  : 修改css样式</span><br><span class="line">prop() :    修改属性/ 获取属性</span><br><span class="line">html() :    修改innerHTML</span><br><span class="line"></span><br><span class="line">append : 给自己添加子节点</span><br><span class="line">appendTo :  将自己添加到别人家,给自己找一个爹</span><br><span class="line">prepend :   在自己最前面添加子节点</span><br><span class="line">after:   在自己后面添加一个兄弟</span><br><span class="line">empty:   清空所有子节点</span><br><span class="line"></span><br><span class="line">$(cities).each(function(i,n)&#123;</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">$.each(arr,function(i,n)&#123;</span><br><span class="line">  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;jQuery基础知识学习总结&quot;&gt;&lt;a href=&quot;#jQuery基础知识学习总结&quot; class=&quot;headerlink&quot; title=&quot;jQuery基础知识学习总结&quot;&gt;&lt;/a&gt;jQuery基础知识学习总结&lt;/h1&gt;&lt;p&gt;什么JQuery:&lt;/p&gt;
&lt;p&gt;jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（&lt;em&gt;或JavaScript框架&lt;/em&gt;）。jQuery设计的宗旨是“write Less，Do More”，即倡导写更少的代码，做更多的事情。它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。&lt;/p&gt;
    
    </summary>
    
      <category term="前端基础总结" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="jQuery" scheme="http://yoursite.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript基础知识学习</title>
    <link href="http://yoursite.com/2018/08/16/javaScript/"/>
    <id>http://yoursite.com/2018/08/16/javaScript/</id>
    <published>2018-08-16T09:42:59.000Z</published>
    <updated>2018-08-19T09:48:24.478Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript基础知识学习"><a href="#JavaScript基础知识学习" class="headerlink" title="JavaScript基础知识学习"></a>JavaScript基础知识学习</h1><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><h5 id="JavaScript概述"><a href="#JavaScript概述" class="headerlink" title="JavaScript概述"></a>JavaScript概述</h5><p>什么是javascript: JavaScript一种直译式脚本语言，</p><a id="more"></a><p>什么是脚本语言?</p><pre><code>java源代码 ----&gt; 编译成.class文件 -----&gt; java虚拟机中才能执行脚本语言:   源码  -------- &gt; 解释执行js由我们的浏览器来解释执行</code></pre><p>HTML: 决定了页面的框架  </p><p>CSS: 用来美化我们的页面</p><p>JS:    提供用户的交互的</p><h5 id="JS的组成"><a href="#JS的组成" class="headerlink" title="JS的组成:"></a>JS的组成:</h5><p>ECMAScript : 核心部分 ,定义js的语法规范</p><p>DOM: document Object Model 文档对象模型 , 主要是用来管理页面的</p><p>BOM : Browser Object Model  浏览器对象模型, 前进,后退,页面刷新, 地址栏, 历史记录, 屏幕宽高</p><h5 id="JS的语法"><a href="#JS的语法" class="headerlink" title="JS的语法:"></a>JS的语法:</h5><p>变量弱类型: var i = true</p><p>区分大小写</p><p>语句结束之后的分号 ,可以有,也可以没有</p><p>写在script标签</p><h5 id="JS的数据类型"><a href="#JS的数据类型" class="headerlink" title="JS的数据类型:"></a>JS的数据类型:</h5><ul><li>基本类型<ul><li>string</li><li>number</li><li>boolean </li><li>undefine</li><li>null</li></ul></li><li>引用类型<ul><li>对象, 内置对象</li></ul></li><li>类型转换<ul><li>js内部自动转换 </li></ul></li></ul><h5 id="JS的运算符和语句"><a href="#JS的运算符和语句" class="headerlink" title="JS的运算符和语句:"></a>JS的运算符和语句:</h5><ul><li>运算符和java 一样<ul><li>“===” 全等号: 值和类型都必须相等</li><li>== 值相等就可以了</li></ul></li><li>语句和java 一样</li></ul><h5 id="JS的输出"><a href="#JS的输出" class="headerlink" title="JS的输出"></a>JS的输出</h5><ul><li>alert()  直接弹框</li><li>document.write()  向页面输出</li><li>console.log() 向控制台输出</li><li>innerHTML:  向页面输出</li><li>获取页面元素: document.getElementById(“id的名称”);</li></ul><p>JS声明变量:</p><pre><code>var 变量的名称 = 变量的值</code></pre><p>JS声明函数:</p><pre><code>var 函数的名称 = function(){    }function 函数的名称(){}</code></pre><h4 id="JS开发步骤"><a href="#JS开发步骤" class="headerlink" title="JS开发步骤"></a>JS开发步骤</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 确定事件</span><br><span class="line">2. 事件要触发函数,所以我们是要声明函数</span><br><span class="line">3. 函数里面通常是去做一些交互才操作,  弹框, 修改页面内容,动态去添加一些东西</span><br></pre></td></tr></table></figure><h3 id="使用JS完成简单的数据校验"><a href="#使用JS完成简单的数据校验" class="headerlink" title="使用JS完成简单的数据校验"></a>使用JS完成简单的数据校验</h3><p>使用JS完成对注册页面的简单数据校验,不允许出现用户名或密码为空的情况</p><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">/*</span></span><br><span class="line"><span class="undefined">1. 确认事件: 表单提交事件 onsubmit事件 </span></span><br><span class="line"><span class="undefined">2. 事件所要触发的函数: checkForm</span></span><br><span class="line"><span class="undefined">3. 函数中要干点事情</span></span><br><span class="line"><span class="undefined">1. 校验用户名, 用户不能为空, 长度不能小于6位</span></span><br><span class="line"><span class="undefined">1.获取到用户输入的值</span></span><br><span class="line"><span class="undefined">*/</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">checkForm</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//获取用户名输入项</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> inputObj = <span class="built_in">document</span>.getElementById(<span class="string">"username"</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">//获取输入项的值</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> uValue = inputObj.value;</span></span><br><span class="line"><span class="javascript"><span class="comment">//alert(uValue);</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//用户名长度不能6位 ""</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(uValue.length &lt; <span class="number">6</span> )&#123;</span></span><br><span class="line"><span class="javascript">alert(<span class="string">"对不起,您的长度太短!"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript"><span class="comment">//密码长度大于6 和确认必须一致</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//获取密码框输入的值</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> input_password = <span class="built_in">document</span>.getElementById(<span class="string">"password"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> uPass = input_password.value;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(uPass.length &lt; <span class="number">6</span>)&#123;</span></span><br><span class="line"><span class="javascript">alert(<span class="string">"对不起,您还是太短啦!"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//获取确认密码框的值</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> input_repassword = <span class="built_in">document</span>.getElementById(<span class="string">"repassword"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> uRePass = input_repassword.value;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(uPass != uRePass)&#123;</span></span><br><span class="line"><span class="javascript">alert(<span class="string">"对不起,两次密码不一致!"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//校验手机号</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> input_mobile = <span class="built_in">document</span>.getElementById(<span class="string">"mobile"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> uMobile = input_mobile.value;</span></span><br><span class="line"><span class="javascript"><span class="comment">//</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(!<span class="regexp">/^[1][3578][0-9]&#123;9&#125;$/</span>.test(uMobile))&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">alert(<span class="string">"对不起,您的手机号无法识别!"</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//校验邮箱: /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\.[a-zA-Z0-9_-])+/</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> inputEmail = <span class="built_in">document</span>.getElementById(<span class="string">"email"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> uEmail = inputEmail.value;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(!<span class="regexp">/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\.[a-zA-Z0-9_-])+/</span>.test(uEmail))&#123;</span></span><br><span class="line"><span class="javascript">alert(<span class="string">"对不起,邮箱不合法"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"JS开发步骤.html"</span> <span class="attr">onsubmit</span>=<span class="string">"return checkForm()"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">type</span>=<span class="string">"text"</span>  /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"password"</span> <span class="attr">type</span>=<span class="string">"password"</span>  /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>确认密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"repassword"</span> <span class="attr">type</span>=<span class="string">"password"</span>  /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>手机号码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"mobile"</span>  <span class="attr">type</span>=<span class="string">"number"</span>  /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>邮箱:<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">type</span>=<span class="string">"text"</span>  /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>  /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用JS完成图片的轮播效果"><a href="#使用JS完成图片的轮播效果" class="headerlink" title="使用JS完成图片的轮播效果"></a>使用JS完成图片的轮播效果</h3><h4 id="步骤分析"><a href="#步骤分析" class="headerlink" title="步骤分析:"></a>步骤分析:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 确定事件: 文档加载完成的事件 onload</span><br><span class="line">2. 事件要触发 : init()</span><br><span class="line">3. 函数里面要做一些事情:(通常会去操作元素,提供交互)</span><br><span class="line"> 1. 开启定时器: 执行切换图片的函数 changeImg()</span><br><span class="line">4.  changeImg()</span><br><span class="line"> 1. 获得要切换图片的那个元素</span><br></pre></td></tr></table></figure><h4 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现:"></a>代码实现:</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">/* 当页面加载完成的时候, 动态切换图片</span></span><br><span class="line"><span class="undefined"> 1.确定事件:</span></span><br><span class="line"><span class="undefined"> 2.事件所要触发的函数</span></span><br><span class="line"><span class="undefined"> */</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> index = <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript"><span class="comment">//切换图片的函数</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">changeAd</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//获取要操作的img</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> img = <span class="built_in">document</span>.getElementById(<span class="string">"imgAd"</span>);</span></span><br><span class="line"><span class="javascript">img.src = <span class="string">"../img/"</span>+(index%<span class="number">3</span>+<span class="number">1</span>)+<span class="string">".jpg"</span>;  <span class="comment">//0,1,2    //1,2,3</span></span></span><br><span class="line"><span class="undefined">index++;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//启动定时器</span></span></span><br><span class="line"><span class="javascript">setInterval(<span class="string">"changeAd()"</span>,<span class="number">3000</span>);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">"init()"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/1.jpg"</span> <span class="attr">id</span>=<span class="string">"imgAd"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="完成页面定时弹出图片"><a href="#完成页面定时弹出图片" class="headerlink" title="完成页面定时弹出图片"></a>完成页面定时弹出图片</h3><h4 id="技术分析"><a href="#技术分析" class="headerlink" title="技术分析"></a>技术分析</h4><ul><li>定时器<ul><li>setInterval : 每隔多少毫秒执行一次函数</li><li>setTimeout: 多少毫秒之后执行一次函数</li><li>clearInterval</li><li>clearTimeout</li></ul></li><li>显示广告 img.style.display  = “block”</li><li>隐藏广告 img.style.display  = “none”</li></ul><h4 id="步骤分析-1"><a href="#步骤分析-1" class="headerlink" title="步骤分析"></a>步骤分析</h4><ol><li>确定事件: 页面加载完成的事件 onload</li><li>事件要触发函数:  init()</li><li>init函数里面做一件事: <ol><li>启动一个定时器 : setTimeout() </li><li>显示一个广告<ol><li>再去开启一个定时5秒钟之后,关闭广告</li></ol></li></ol></li></ol><h4 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">setTimeout(<span class="string">"showAD()"</span>,<span class="number">3000</span>);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">showAD</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//首先要获取要操作的img</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> img = <span class="built_in">document</span>.getElementById(<span class="string">"img1"</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">//显示广告</span></span></span><br><span class="line"><span class="javascript">img.style.display = <span class="string">"block"</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//再开启定时器,关闭广告</span></span></span><br><span class="line"><span class="javascript">setTimeout(<span class="string">"hideAD()"</span>,<span class="number">3000</span>);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">hideAD</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//首先要获取要操作的img</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> img = <span class="built_in">document</span>.getElementById(<span class="string">"img1"</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">//隐藏广告</span></span></span><br><span class="line"><span class="javascript">img.style.display = <span class="string">"none"</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="完成完成表单的校验"><a href="#完成完成表单的校验" class="headerlink" title="完成完成表单的校验"></a>完成完成表单的校验</h3><p>【JS中的常用事件】</p><p>onfocus 事件: 获得焦点事件</p><p>onblur : 失去焦点</p><p>onkeyup : 按键抬起事件</p><h4 id="代码实现-3"><a href="#代码实现-3" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">&lt;meta charset="UTF-8"&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;!<span class="selector-tag">--</span></span><br><span class="line">引入外部的<span class="selector-tag">js</span>文件</span><br><span class="line"><span class="selector-tag">--</span>&gt;</span><br><span class="line">&lt;script type="text/javascript" src="../js/regutils.js" &gt;&lt;/script&gt;</span><br><span class="line">&lt;<span class="selector-tag">script</span>&gt;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1. 确定事件 : onfocus</span></span><br><span class="line"><span class="comment">2. 事件要驱动函数</span></span><br><span class="line"><span class="comment">3. 函数要干一些事情: 修改span的内容</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">showTips</span>(<span class="selector-tag">spanID</span>,<span class="selector-tag">msg</span>)&#123;</span><br><span class="line">//首先要获得要操作元素 span</span><br><span class="line">var span = document.getElementById(spanID);</span><br><span class="line">span.innerHTML = msg;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">校验用户名:</span></span><br><span class="line"><span class="comment">1.事件: onblur  失去焦点</span></span><br><span class="line"><span class="comment">2.函数: checkUsername()</span></span><br><span class="line"><span class="comment">3.函数去显示校验结果</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">checkUsername</span>()&#123;</span><br><span class="line">//获取用户输入的内容</span><br><span class="line">var uValue = document.getElementById("username").value;</span><br><span class="line">//对输入的内容进行校验</span><br><span class="line">//获得要显示结果的span</span><br><span class="line">var span = document.getElementById("span_username");</span><br><span class="line"><span class="selector-tag">if</span>(<span class="selector-tag">uValue</span><span class="selector-class">.length</span> &lt; 6)&#123;</span><br><span class="line">//显示校验结果</span><br><span class="line">span.innerHTML = "&lt;font color='red' size='2'&gt;对不起,太短&lt;/font&gt;";</span><br><span class="line"><span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span><br><span class="line">&#125;<span class="selector-tag">else</span>&#123;</span><br><span class="line">span.innerHTML = "&lt;font color='red' size='2'&gt;恭喜您,可用&lt;/font&gt;";</span><br><span class="line"><span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 密码校验</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">checkPassword</span>()&#123;</span><br><span class="line">//获取密码输入</span><br><span class="line">var uPass = document.getElementById("password").value;</span><br><span class="line">var span = document.getElementById("span_password");</span><br><span class="line">//对密码输入进行校验</span><br><span class="line"><span class="selector-tag">if</span>(<span class="selector-tag">uPass</span><span class="selector-class">.length</span> &lt; 6)&#123;</span><br><span class="line">span.innerHTML = "&lt;font color='red' size='2'&gt;对不起,太短&lt;/font&gt;";</span><br><span class="line"><span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span><br><span class="line">&#125;<span class="selector-tag">else</span>&#123;</span><br><span class="line">span.innerHTML = "&lt;font color='red' size='2'&gt;恭喜您,够用&lt;/font&gt;";</span><br><span class="line"><span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 确认密码校验</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">checkRePassword</span>()&#123;</span><br><span class="line">//获取密码输入</span><br><span class="line">var uPass = document.getElementById("password").value;</span><br><span class="line"></span><br><span class="line">//获取确认密码输入</span><br><span class="line">var uRePass = document.getElementById("repassword").value;</span><br><span class="line">var span = document.getElementById("span_repassword");</span><br><span class="line"></span><br><span class="line">//对密码输入进行校验</span><br><span class="line">if(uPass != uRePass)&#123;</span><br><span class="line">span.innerHTML = "&lt;font color='red' size='2'&gt;对不起,两次密码不一致&lt;/font&gt;";</span><br><span class="line"><span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span><br><span class="line">&#125;<span class="selector-tag">else</span>&#123;</span><br><span class="line">span.innerHTML = "";</span><br><span class="line"><span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 校验邮箱</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">checkMail</span>()&#123;</span><br><span class="line">var umail = document.getElementById("email").value;</span><br><span class="line">var flag = checkEmail(umail);</span><br><span class="line"></span><br><span class="line">var span = document.getElementById("span_email");</span><br><span class="line">//对邮箱输入进行校验</span><br><span class="line"><span class="selector-tag">if</span>(<span class="selector-tag">flag</span>)&#123;</span><br><span class="line">span.innerHTML = "&lt;font color='red' size='2'&gt;恭喜您,可用&lt;/font&gt;";</span><br><span class="line"><span class="selector-tag">return</span> <span class="selector-tag">true</span>;</span><br><span class="line">&#125;<span class="selector-tag">else</span>&#123;</span><br><span class="line">span.innerHTML = "&lt;font color='red' size='2'&gt;对不起,邮箱格式貌似有问题&lt;/font&gt;";</span><br><span class="line"><span class="selector-tag">return</span> <span class="selector-tag">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">checkForm</span>()&#123;</span><br><span class="line">var flag = checkUsername() &amp;&amp; checkPassword() &amp;&amp; checkRePassword() &amp;&amp; checkMail();</span><br><span class="line"><span class="selector-tag">return</span> <span class="selector-tag">flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;form action="../01-自动轮播图片/图片自动轮播.html" onsubmit="return checkForm()" &gt;</span><br><span class="line">用户名:&lt;input type="text" id="username" onfocus="showTips('span_username','用户名长度不能小于6')" onblur="checkUsername()" onkeyup="checkUsername()" /&gt;&lt;span id="span_username"&gt;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">密码:&lt;input type="password" id="password" onfocus="showTips('span_password','密码长度不能小于6')" onblur="checkPassword()" onkeyup="checkPassword()"/&gt;&lt;span id="span_password"&gt;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">确认密码:&lt;input type="password" id="repassword" onfocus="showTips('span_repassword','两次密码必须一致')" onblur="checkRePassword()" onkeyup="checkRePassword()" /&gt;&lt;span id="span_repassword"&gt;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">邮箱:&lt;input type="text" id="email" onfocus="showTips('span_email','邮箱格式必须正确')" onblur="checkMail()" /&gt;&lt;span id="span_email"&gt;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">手机号:&lt;input type="text" id="text" /&gt;&lt;br /&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type="submit" value="提交" /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>定时器:</p><pre><code>setInterval(&quot;test()&quot;,3000)   每隔多少毫秒执行一次函数setTimeout(&quot;test()&quot;,3000)  多少毫秒之后执行一次函数timerID 上面定时器调用之后clearInterval()clearTimeout()</code></pre><p>切换图片</p><pre><code>img.src = &quot;图片路径&quot;</code></pre><p>事件: 文档加载完成的事件 onload事件</p><p>显示广告  :   img.style.display = “block”</p><p>隐藏广告:    img.style.display =”none”</p><p>引入一个外部js文件  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js文件的路径"</span>  <span class="attr">type</span>=<span class="string">"text/javascript"</span>/&gt;</span><span class="undefined"></span></span><br></pre></td></tr></table></figure><p>表单校验中常用的事件:</p><pre><code>获得焦点事件: onfocus失去焦点事件  onblur按键抬起事件:  onkeyup</code></pre><p>JS开发步骤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 确定事件</span><br><span class="line">2. 事件要触发函数: 定义函数</span><br><span class="line">3. 函数通常都要去做一些交互:  点击, 修改图片,  动态修改innerHTML属性...  innerTEXT</span><br></pre></td></tr></table></figure><h3 id="表格隔行换色"><a href="#表格隔行换色" class="headerlink" title="表格隔行换色"></a>表格隔行换色</h3><h4 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h4><ol><li>确定事件: 文档加载完成 onload<ol><li>事件要触发函数: init()<ol><li>函数:操作页面的元素<br>要操作表格中每一行<pre><code>动态的修改行的背景颜色</code></pre></li></ol></li></ol></li></ol><h4 id="代码实现-4"><a href="#代码实现-4" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> &gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//得到表格</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> tab = <span class="built_in">document</span>.getElementById(<span class="string">"tab"</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">//得到表格中每一行</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> rows = tab.rows;</span></span><br><span class="line"><span class="javascript"><span class="comment">//便利所有的行,然后根据奇数 偶数</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>; i &lt; rows.length; i++)&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> row = rows[i];  <span class="comment">//得到其中的某一行</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="javascript">row.bgColor = <span class="string">"yellow"</span>;</span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">row.bgColor = <span class="string">"red"</span></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="复选框的全选和全不选"><a href="#复选框的全选和全不选" class="headerlink" title="复选框的全选和全不选"></a>复选框的全选和全不选</h3><p>使用事件 : onclick点击事件</p><h4 id="实现步骤-1"><a href="#实现步骤-1" class="headerlink" title="实现步骤"></a>实现步骤</h4><p>全选和全不选步骤分析:</p><p>1.确定事件: onclick 单机事件<br>2.事件触发函数: checkAll()<br>3.函数要去做一些事情:<br>      获得当前第一个checkbox的状态<br>       获得所有分类项的checkbox<br>      修改每一个checkbox的状态</p><h4 id="代码实现-5"><a href="#代码实现-5" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function checkAll()&#123;</span><br><span class="line">//获得当前第一个checkbox的状态</span><br><span class="line">var check1 = document.getElementById("check1");</span><br><span class="line">//得到当前checked状态</span><br><span class="line">var checked = check1.checked;</span><br><span class="line">// 获得所有分类项的checkbox</span><br><span class="line">//var checks = document.getElementsByTagName("input");</span><br><span class="line">var checks = document.getElementsByName("checkone");</span><br><span class="line">//alert(checks.length);</span><br><span class="line">for(var i = 0; i <span class="tag">&lt; <span class="attr">checks.length</span>; <span class="attr">i</span>++)&#123;</span></span><br><span class="line"><span class="tag">// 修改每一个<span class="attr">checkbox</span>的状态</span></span><br><span class="line"><span class="tag"><span class="attr">var</span> <span class="attr">checkone</span> = <span class="string">checks[i];</span></span></span><br><span class="line"><span class="tag"><span class="attr">checkone.checked</span> = <span class="string">checked;</span></span></span><br><span class="line"><span class="tag">&#125;</span></span><br><span class="line"><span class="tag">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="DOM操作"><a href="#DOM操作" class="headerlink" title="DOM操作"></a>DOM操作</h3><p>什么是DOM: Document Object Model : 管理我们的文档   增删改查规则 </p><p>【HTML中的DOM操作】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">一些常用的 HTML DOM 方法：</span><br><span class="line">  getElementById(id) - 获取带有指定 id 的节点（元素） </span><br><span class="line">  appendChild(node) - 插入新的子节点（元素） </span><br><span class="line">  removeChild(node) - 删除子节点（元素） </span><br><span class="line"></span><br><span class="line">  一些常用的 HTML DOM 属性：</span><br><span class="line">  innerHTML - 节点（元素）的文本值 </span><br><span class="line">  parentNode - 节点（元素）的父节点 </span><br><span class="line">  childNodes - 节点（元素）的子节点 </span><br><span class="line">  attributes - 节点（元素）的属性节点 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查找节点：</span><br><span class="line">getElementById() 返回带有指定 ID 的元素。 </span><br><span class="line">getElementsByTagName() 返回包含带有指定标签名称的所有元素的节点列表（集合/节点数组）。 </span><br><span class="line">getElementsByClassName() 返回包含带有指定类名的所有元素的节点列表。 </span><br><span class="line"></span><br><span class="line">增加节点：</span><br><span class="line">createAttribute() 创建属性节点。 </span><br><span class="line">createElement() 创建元素节点。 </span><br><span class="line">createTextNode() 创建文本节点。 </span><br><span class="line">insertBefore() 在指定的子节点前面插入新的子节点。 </span><br><span class="line">appendChild() 把新的子节点添加到指定节点。 </span><br><span class="line"></span><br><span class="line">删除节点：</span><br><span class="line">removeChild() 删除子节点。 </span><br><span class="line">replaceChild() 替换子节点。 </span><br><span class="line"></span><br><span class="line">修改节点：</span><br><span class="line">setAttribute()  修改属性</span><br><span class="line">setAttributeNode()  修改属性节点</span><br></pre></td></tr></table></figure><p>简答的实例:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">/*</span></span><br><span class="line"><span class="undefined">准备工作 : 准备数据</span></span><br><span class="line"><span class="undefined">*/</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> provinces = [</span></span><br><span class="line"><span class="javascript">[<span class="string">"深圳市"</span>,<span class="string">"东莞市"</span>,<span class="string">"惠州市"</span>,<span class="string">"广州市"</span>],</span></span><br><span class="line"><span class="javascript">[<span class="string">"长沙市"</span>,<span class="string">"岳阳市"</span>,<span class="string">"株洲市"</span>,<span class="string">"湘潭市"</span>],</span></span><br><span class="line"><span class="javascript">[<span class="string">"厦门市"</span>,<span class="string">"福州市"</span>,<span class="string">"漳州市"</span>,<span class="string">"泉州市"</span>]</span></span><br><span class="line"><span class="undefined">];</span></span><br><span class="line"><span class="undefined">/*</span></span><br><span class="line"><span class="undefined">1. 确定事件:  onchange</span></span><br><span class="line"><span class="undefined">2. 函数: selectProvince()</span></span><br><span class="line"><span class="undefined">3. 函数里面要搞事情了</span></span><br><span class="line"><span class="undefined">得到当前操作元素</span></span><br><span class="line"><span class="undefined">得到当前选中的是那一个省份</span></span><br><span class="line"><span class="undefined">从数组中取出对应的城市信息</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">动态创建城市元素节点</span></span><br><span class="line"><span class="undefined">添加到城市select中</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">*/</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">selectProvince</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> province = <span class="built_in">document</span>.getElementById(<span class="string">"province"</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">//得到当前选中的是哪个省份</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//alert(province.value);</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> value = province.value;</span></span><br><span class="line"><span class="javascript"><span class="comment">//从数组中取出对应的城市信息</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> cities = provinces[value];</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> citySelect = <span class="built_in">document</span>.getElementById(<span class="string">"city"</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">//清空select中的option</span></span></span><br><span class="line"><span class="undefined">citySelect.options.length = 0;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i &lt; cities.length; i++) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//alert(cities[i]);</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> cityText = cities[i]; </span></span><br><span class="line"><span class="xml">//动态创建城市元素节点   <span class="tag">&lt;<span class="name">option</span>&gt;</span>东莞市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//创建option节点</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> option1 = <span class="built_in">document</span>.createElement(<span class="string">"option"</span>); <span class="comment">// &lt;option&gt;&lt;/option&gt;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//创建城市文本节点</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> textNode = <span class="built_in">document</span>.createTextNode(cityText) ;<span class="comment">// 东莞市</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//将option节点和文本内容关联起来</span></span></span><br><span class="line"><span class="xml">option1.appendChild(textNode);  //<span class="tag">&lt;<span class="name">option</span>&gt;</span>东莞市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//添加到城市select中</span></span></span><br><span class="line"><span class="undefined">citySelect.appendChild(option1);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--选择省份--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">onchange</span>=<span class="string">"selectProvince()"</span> <span class="attr">id</span>=<span class="string">"province"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"-1"</span>&gt;</span>--请选择--<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>广东省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>湖南省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>福建省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--选择城市--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"city"</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用JS控制下拉列表左右选择"><a href="#使用JS控制下拉列表左右选择" class="headerlink" title="使用JS控制下拉列表左右选择"></a>使用JS控制下拉列表左右选择</h3><h4 id="代码实现-6"><a href="#代码实现-6" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">步骤分析</span></span><br><span class="line"><span class="comment">1. 确定事件: 点击事件 :onclick事件</span></span><br><span class="line"><span class="comment">2. 事件要触发函数 selectOne</span></span><br><span class="line"><span class="comment">3. selectOne要做一些操作</span></span><br><span class="line"><span class="comment">(将左边选中的元素移动到右边的select中)</span></span><br><span class="line"><span class="comment">1. 获取左边Select中被选中的元素</span></span><br><span class="line"><span class="comment">2. 将选中的元素添加到右边的Select中就可以</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">selectOne</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//1. 获取左边Select中被选中的元素</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> leftSelect = <span class="built_in">document</span>.getElementById(<span class="string">"leftSelect"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> options = leftSelect.options;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//找到右侧的Select</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> rightSelect = <span class="built_in">document</span>.getElementById(<span class="string">"rightSelect"</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">//遍历找出被选中的option</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i &lt; options.length; i++)&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> option1 = options[i];</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(option1.selected)&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//2. 将选中的元素添加到右边的Select中就可以</span></span></span><br><span class="line"><span class="undefined">rightSelect.appendChild(option1);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//将左边所有的商品移动到右边</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">selectAll</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//1. 获取左边Select中被选中的元素</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> leftSelect = <span class="built_in">document</span>.getElementById(<span class="string">"leftSelect"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> options = leftSelect.options;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//找到右侧的Select</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> rightSelect = <span class="built_in">document</span>.getElementById(<span class="string">"rightSelect"</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">//遍历找出被选中的option</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">for</span>(<span class="keyword">var</span> i=options.length - <span class="number">1</span>; i &gt;=<span class="number">0</span>; i--)&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> option1 = options[i];</span></span><br><span class="line"><span class="undefined">rightSelect.appendChild(option1);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1px"</span> <span class="attr">width</span>=<span class="string">"400px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>分类名称<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"手机数码"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>分类描述<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"这里面都是手机数码"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>分类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--左边--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: left;"</span>&gt;</span></span><br><span class="line">已有商品<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>=<span class="string">"multiple"</span> <span class="attr">id</span>=<span class="string">"leftSelect"</span> <span class="attr">ondblclick</span>=<span class="string">"selectOne()"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>华为<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>小米<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>锤子<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>oppo<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">onclick</span>=<span class="string">"selectOne()"</span>&gt;</span> &amp;gt;&amp;gt; <span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">onclick</span>=<span class="string">"selectAll()"</span>&gt;</span> &amp;gt;&amp;gt;&amp;gt; <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--右边--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: right;"</span>&gt;</span> </span><br><span class="line">未有商品<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>=<span class="string">"multiple"</span> <span class="attr">id</span>=<span class="string">"rightSelect"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>苹果6<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>肾7<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>诺基亚<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>波导<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span> &amp;lt;&amp;lt; <span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span> &amp;lt;&amp;lt;&amp;lt; <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结:"></a>知识点总结:</h3><p>定时器: </p><pre><code>setIntervalsetTimeoutclearIntervalclearTimeout</code></pre><p>控制图片显示隐藏</p><pre><code>img.style.display = &quot;block&quot;img.style.display = &quot;none&quot;</code></pre><p>表单中常用的事件:</p><pre><code>onfocus: 获取焦点事件onblur : 失去焦点的事件onkeyup: 按键抬起的事件onclick:  单击事件ondblclick:  双击事件 </code></pre><p>表格隔行换色,鼠标移入和移除要变色:</p><pre><code>onmouseenter:  鼠标移入onmouseout:  鼠标移出onload:  文档加载完成事件onsubmit:  提交onchange:   下拉列表内容改变</code></pre><p>checkbox.checked  选中状态</p><p>DOM的文档操作:</p><pre><code>添加节点: appendChild创建节点: document.createElement创建文本节点: document.createTextNode()</code></pre><p>JS开发步骤:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 确认事件</span><br><span class="line">2. 事件触发函数</span><br><span class="line">3. 函数里面要做一些交互</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JavaScript基础知识学习&quot;&gt;&lt;a href=&quot;#JavaScript基础知识学习&quot; class=&quot;headerlink&quot; title=&quot;JavaScript基础知识学习&quot;&gt;&lt;/a&gt;JavaScript基础知识学习&lt;/h1&gt;&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;h5 id=&quot;JavaScript概述&quot;&gt;&lt;a href=&quot;#JavaScript概述&quot; class=&quot;headerlink&quot; title=&quot;JavaScript概述&quot;&gt;&lt;/a&gt;JavaScript概述&lt;/h5&gt;&lt;p&gt;什么是javascript: JavaScript一种直译式脚本语言，&lt;/p&gt;
    
    </summary>
    
      <category term="前端基础总结" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>CSS与简单的js基础知识学习</title>
    <link href="http://yoursite.com/2018/08/15/CSS/"/>
    <id>http://yoursite.com/2018/08/15/CSS/</id>
    <published>2018-08-15T11:41:23.000Z</published>
    <updated>2018-08-18T11:44:33.874Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS与简单的js基础知识学习"><a href="#CSS与简单的js基础知识学习" class="headerlink" title="CSS与简单的js基础知识学习"></a>CSS与简单的js基础知识学习</h1><p>学习了一段时间的后端的知识，在开发项目的时候对于前端慢慢的学看的也七七八八，现在就重新系统的学习下基础知识,也能减少查手册的时间。</p><a id="more"></a><h2 id="CSS简单语法"><a href="#CSS简单语法" class="headerlink" title="CSS简单语法"></a>CSS简单语法</h2><p>CSS的简单语法:</p><p>在一个style标签中,去编写CSS内容,最好将style标签写在这个head标签中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  选择器&#123;</span></span><br><span class="line"><span class="undefined">    属性名称:属性的值;</span></span><br><span class="line"><span class="undefined">    属性名称2: 属性的值2;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>CSS选择器: 帮助我们找到我们要修饰的标签或者元素</p><p>元素选择:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">元素的名称&#123;</span><br><span class="line">  属性名称:属性的值;</span><br><span class="line">  属性名称:属性的值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">span&#123;</span><br><span class="line">color:blue;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;span&gt;简单的demo&lt;/span&gt;</span><br><span class="line">&lt;span&gt;简单的demo&lt;/span&gt;</span><br><span class="line">&lt;span&gt;简单的demo&lt;/span&gt;</span><br><span class="line">&lt;span&gt;简单的demo&lt;/span&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>ID选择器:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">以#号开头  ID在整个页面中必须是唯一的s</span><br><span class="line">#ID的名称&#123;</span><br><span class="line">  属性名称:属性的值;</span><br><span class="line">  属性名称:属性的值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">#div1&#123;</span><br><span class="line">color: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--请将JAVAEE颜色改成红色--&gt;</span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;JAVAEE&lt;/div&gt;</span><br><span class="line">&lt;div&gt;IOS&lt;/div&gt;</span><br><span class="line">&lt;div&gt;ANDROID&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>类选择器:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">以 . 开头 </span><br><span class="line">.类的名称&#123;</span><br><span class="line">   属性名称:属性的值;</span><br><span class="line">  属性名称:属性的值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.shuiguo&#123;</span><br><span class="line">color: yellow;</span><br><span class="line">&#125;</span><br><span class="line">.shucai&#123;</span><br><span class="line">color: green;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;shuiguo&quot;&gt;香蕉&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;shucai&quot;&gt;黄瓜&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;shuiguo&quot;&gt;苹果&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;shucai&quot;&gt;茄子&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;shuiguo&quot;&gt;橘子&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>后代选择器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">h1 &gt; em&#123;</span><br><span class="line">color: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;</span><br><span class="line">This is a </span><br><span class="line">&lt;em&gt;儿子&lt;/em&gt;</span><br><span class="line">&lt;strong&gt;</span><br><span class="line">&lt;em&gt;孙子&lt;/em&gt;</span><br><span class="line">&lt;/strong&gt;</span><br><span class="line"> heading</span><br><span class="line">&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>CSS的引入方式:</p><p>​    外部样式: 通过link标签引入一个外部的css文件</p><p>​    内部样式: 直接在style标签内编写CSS代码 <code>&lt;div class=&quot;shuiguo&quot; style=&quot;color:yellow&quot;&gt;香蕉&lt;/div&gt;</code></p><p>​    行内样式: 直接在标签中添加一个style属性, 编写CSS样式</p><p>CSS浮动 : 浮动的元素会脱离正常的文档流,在正常的文档流中不占空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">float属性:</span><br><span class="line">    left</span><br><span class="line">    right</span><br><span class="line"></span><br><span class="line">clear属性: 清除浮动</span><br><span class="line">    both : 两边都不允许浮动</span><br><span class="line">    left: 左边不允许浮动</span><br><span class="line">    right : 右边不允许浮动</span><br><span class="line">流式布局</span><br></pre></td></tr></table></figure><h4 id="简单例子"><a href="#简单例子" class="headerlink" title="简单例子:"></a>简单例子:</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.logo&#123;</span></span><br><span class="line"><span class="undefined">float: left;</span></span><br><span class="line"><span class="undefined">width: 33%;</span></span><br><span class="line"><span class="undefined">/*border-width: 1px;</span></span><br><span class="line"><span class="undefined">border-style: solid;</span></span><br><span class="line"><span class="undefined">border-color: red;*/</span></span><br><span class="line"><span class="undefined">height: 60px;</span></span><br><span class="line"><span class="undefined">line-height: 60px;</span></span><br><span class="line"><span class="undefined">/*border: 1px solid red;*/</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.amenu&#123;</span></span><br><span class="line"><span class="undefined">color: white;</span></span><br><span class="line"><span class="undefined">text-decoration: none;</span></span><br><span class="line"><span class="undefined">height: 50px;</span></span><br><span class="line"><span class="undefined">line-height: 50px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">.product&#123;</span></span><br><span class="line"><span class="undefined">float: left; text-align: center; width: 16%; height: 240px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1. 创一个最外层div</span></span><br><span class="line"><span class="comment">2. 第一部份: LOGO部分: 嵌套三个div</span></span><br><span class="line"><span class="comment">3. 第二部分: 导航栏部分 : 放置5个超链接</span></span><br><span class="line"><span class="comment">4. 第三部分: 轮播图 </span></span><br><span class="line"><span class="comment">5. 第四部分: </span></span><br><span class="line"><span class="comment">6. 第五部分: 直接放一张图片</span></span><br><span class="line"><span class="comment">7. 第六部分: 抄第四部分的</span></span><br><span class="line"><span class="comment">8. 第七部分: 放置一张图片</span></span><br><span class="line"><span class="comment">9. 第八部分: 放一堆超链接</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--2. 第一部份: LOGO部分: 嵌套三个div--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/logo2.png"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/header.png"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--清除浮动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"clear: both;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--3. 第二部分: 导航栏部分 : 放置5个超链接--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color: black; height: 50px;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span>手机数码<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span>电脑办公<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span>鞋靴箱包<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span>香烟酒水<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--4. 第三部分: 轮播图--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/1.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--5. 第四部分:--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>最新商品<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/title2.jpg"</span>/&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--左侧广告图--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 15%; height: 480px;  float: left;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/big01.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                右侧商品</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 84%; height: 480px;float: left;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 240px; width: 50%; float: left;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/middle01.jpg"</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">width</span>=<span class="string">"100%"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--6. 第五部分: 直接放一张图片--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/ad.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--7. 第六部分: 抄第四部分的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>最新商品<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/title2.jpg"</span>/&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--左侧广告图--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 15%; height: 480px;  float: left;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/big01.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                右侧商品</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 84%; height: 480px;float: left;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 240px; width: 50%; float: left;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/middle01.jpg"</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">width</span>=<span class="string">"100%"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small08.jpg"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>高压锅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--8. 第七部分: 放置一张图片--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/footer.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--9. 第八部分: 放一堆超链接--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: center;"</span>&gt;</span></span><br><span class="line">        </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>招贤纳士<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>法律声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>支付方式<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>配送方式<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>服务声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>广告声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="扩展"><a href="#扩展" class="headerlink" title="扩展:"></a>扩展:</h4><ul><li><p>CSS的优先级</p><p>按照选择器搜索精确度来编写:行内样式 &gt; ID选择器 &gt; 类选择器  &gt; 元素选择器</p><p>就近原则: 哪个离得近,就选用哪个的样式</p><p>CSS: 层叠样式表</p><p>主要作用:</p></li></ul><ol><li>美化页面<pre><code>2. 将页面美化和HTML代码进行分离,提高代码的服用型</code></pre></li></ol><ul><li><p>选择器:</p><ul><li>元素选择器: 标签的名称{}</li><li>类选择器:   以. 开头  .类的名称</li><li>ID选择器:  以#开头 ,   #ID的名称  (ID必须是页面上面唯一) </li></ul></li><li><p>CSS浮动:</p><ul><li><p>float : left, right  不再占有正常文档流中的空间 , 流式布局</p></li><li><p>clear : both  left right</p><p>​</p></li></ul></li><li><p>CSS中的其它选择器</p><ul><li><p>选择器分组: 选择器1,选择器2{ 属性的名称:属性的值}</p></li><li><p>属性选择器:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a[title]</span><br><span class="line">a[titile='aaa']</span><br><span class="line">a[href][title]</span><br><span class="line">a[href][title='aaa']</span><br></pre></td></tr></table></figure></li><li><p>后代选择器: 爷爷选择器  孙子选择器   找出所有的后代</p></li><li><p>子元素选择器:  父选择器  &gt; 儿子选择器</p></li><li><p>伪类选择器: 通常都是用在A标签上</p></li></ul></li></ul><h3 id="使用DIV-CSS完成页面的优化"><a href="#使用DIV-CSS完成页面的优化" class="headerlink" title="使用DIV+CSS完成页面的优化"></a>使用DIV+CSS完成页面的优化</h3><p>CSS的盒子模型: 万物皆盒子</p><p>内边距:  </p><p>padding-top:</p><p>padding-right:</p><p>padding-bottom:</p><p>padding-left:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">padding:10px;  上下左右都是10px</span><br><span class="line">padding:10px 20px;  上下是10px 左右是20px</span><br><span class="line">padding: 10px 20px 30px;  上 10px 右20px  下30px  左20px</span><br><span class="line">padding: 10px 20px 30px 40px;  上右下左, 顺时针的方向</span><br></pre></td></tr></table></figure><p>外边距:</p><p>margin-top:</p><p>margin-right:</p><p>margin-bottom:</p><p>margin-left: </p><p>CSS绝对定位:</p><p>​    position: absolute</p><p>​    top: 控制距离顶部的位置</p><p>​    left: 控制距离左边的位置</p><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现:"></a>代码实现:</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"../css/main.css"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1. 总共是5部分</span></span><br><span class="line"><span class="comment">2. 第一部分是LOGO部分</span></span><br><span class="line"><span class="comment">3. 第二部分是导航菜单</span></span><br><span class="line"><span class="comment">4. 第三部分是注册部分</span></span><br><span class="line"><span class="comment">5. 第四部分是FOOTER图片</span></span><br><span class="line"><span class="comment">6. 第五部分是一堆超链接</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--2. 第一部分是LOGO部分--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/logo2.png"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/header.png"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--清除浮动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"clear: both;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--3. 第二部分是导航菜单--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color: black; height: 50px;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span>手机数码<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span>电脑办公<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span>鞋靴箱包<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"amenu"</span>&gt;</span>香烟酒水<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--4. 第三部分是注册部分--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: url(../image/regist_bg.jpg);height: 500px;"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:absolute;top:200px;left:350px;border: 5px solid darkgray;width: 50%;height: 50%;background-color: white;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"60%"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"blue"</span> <span class="attr">size</span>=<span class="string">"6"</span>&gt;</span>会员注册<span class="tag">&lt;/<span class="name">font</span>&gt;</span>USER REGISTER<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>确认密码:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>email:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>性别:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span>/&gt;</span> 男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span>/&gt;</span> 女</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span>/&gt;</span> 妖</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>出生日期:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>验证码:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--5. 第四部分是FOOTER图片--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/footer.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--9. 第四部分: 放一堆超链接--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: center;"</span>&gt;</span></span><br><span class="line">        </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>招贤纳士<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>法律声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>支付方式<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>配送方式<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>服务声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>广告声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="上面用到的CSS部分的技术"><a href="#上面用到的CSS部分的技术" class="headerlink" title="上面用到的CSS部分的技术:"></a>上面用到的CSS部分的技术:</h3><p>​    CSS: 层叠样式表.</p><p>​    CSS作用: 美化页面,提高代码的复用性</p><p>​    选择器:</p><p>​        需要掌握的:</p><p>​            元素选择器: 标签的名称</p><p>​            类选择器:  以 . 开头</p><p>​            ID选择器: 以#开头,  #ID的名称  ID必须是唯一的</p><p>​        优先级: 按照选择精确度: 行内样式  &gt; ID选择器 &gt; 类选择器 &gt; 元素选择器</p><p>​                就近原则</p><p>​        扩展选择器:</p><p>​            选择器分组:  选择器1,选择器2   以逗号隔开</p><p>​            后代选择器:  爷爷 孙子   中间以空格隔开</p><p>​            子元素选择器:  爸爸 &gt; 儿子 </p><p>​            属性选择器:   选择器[属性的名称=’’]</p><p>​            伪类选择器:  超链接标签上使用  </p><p>​     浮动: float属性  left right</p><p>​     清除浮动: clear: both left right</p><p>​    盒子模型:  顺时针 : 上右下左</p><p>​        padding : 内边距 ,控制的是盒子内容的距离</p><p>​        margin : 外边距 控制盒子与盒子之间的距离</p><p>​    绝对定位:</p><p>​        position: absolute</p><p>​        top:</p><p>​        left:</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CSS与简单的js基础知识学习&quot;&gt;&lt;a href=&quot;#CSS与简单的js基础知识学习&quot; class=&quot;headerlink&quot; title=&quot;CSS与简单的js基础知识学习&quot;&gt;&lt;/a&gt;CSS与简单的js基础知识学习&lt;/h1&gt;&lt;p&gt;学习了一段时间的后端的知识，在开发项目的时候对于前端慢慢的学看的也七七八八，现在就重新系统的学习下基础知识,也能减少查手册的时间。&lt;/p&gt;
    
    </summary>
    
      <category term="前端基础总结" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Linux下重启网卡报错</title>
    <link href="http://yoursite.com/2018/08/09/LinuxNetworkRestartError/"/>
    <id>http://yoursite.com/2018/08/09/LinuxNetworkRestartError/</id>
    <published>2018-08-09T07:56:20.000Z</published>
    <updated>2018-08-16T12:14:56.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="重启网卡报Job-for-network-service-failed-because-the-control-process-exited-with-error-code-错误"><a href="#重启网卡报Job-for-network-service-failed-because-the-control-process-exited-with-error-code-错误" class="headerlink" title="重启网卡报Job for network.service failed because the control process exited with error code. 错误"></a>重启网卡报Job for network.service failed because the control process exited with error code. 错误</h1><p>centos7下重启网卡</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>然后报错</p><p>Job for network.service failed because the control process exited with error code. See “systemctl status network.service” and “journalctl -xe” for details.</p><a id="more"></a><p>解决方法：</p><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop NetworkManager</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable NetworkManager</span><br></pre></td></tr></table></figure><p>然后重启网卡</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>看一下网卡的状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>如图：</p><p><img src="/2018/08/09/LinuxNetworkRestartError/1533801886960.png" alt="1533801886960"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;重启网卡报Job-for-network-service-failed-because-the-control-process-exited-with-error-code-错误&quot;&gt;&lt;a href=&quot;#重启网卡报Job-for-network-service-failed-because-the-control-process-exited-with-error-code-错误&quot; class=&quot;headerlink&quot; title=&quot;重启网卡报Job for network.service failed because the control process exited with error code. 错误&quot;&gt;&lt;/a&gt;重启网卡报Job for network.service failed because the control process exited with error code. 错误&lt;/h1&gt;&lt;p&gt;centos7下重启网卡&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl restart network&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后报错&lt;/p&gt;
&lt;p&gt;Job for network.service failed because the control process exited with error code. See “systemctl status network.service” and “journalctl -xe” for details.&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="NetWork" scheme="http://yoursite.com/tags/NetWork/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot学习之高并发接口优化</title>
    <link href="http://yoursite.com/2018/08/09/SecurityOptimise/"/>
    <id>http://yoursite.com/2018/08/09/SecurityOptimise/</id>
    <published>2018-08-09T06:41:38.000Z</published>
    <updated>2018-08-16T12:13:28.419Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot学习之高并发接口优化—–秒杀接口地址隐藏-验证码-接口限流防刷"><a href="#SpringBoot学习之高并发接口优化—–秒杀接口地址隐藏-验证码-接口限流防刷" class="headerlink" title="SpringBoot学习之高并发接口优化—–秒杀接口地址隐藏(验证码)+接口限流防刷"></a>SpringBoot学习之高并发接口优化—–秒杀接口地址隐藏(验证码)+接口限流防刷</h1><h2 id="秒杀接口地址隐藏"><a href="#秒杀接口地址隐藏" class="headerlink" title="秒杀接口地址隐藏"></a>秒杀接口地址隐藏</h2><p>思路：秒杀开始之前，先去请求接口获取秒杀地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 接口改造，带上PathVariable参数</span><br><span class="line">- 添加生成地址的接口</span><br><span class="line">- 秒杀收到请求，先验证PathVariable</span><br></pre></td></tr></table></figure><a id="more"></a><p>随机生成一个字符串，作为地址加在url上，然后生成的时候，存入 redis缓存中，根据前端请求的url获取path。 判断与缓存中的字符串是否一致，一致就认为对的。就可以执行秒杀操作，否则失败。</p><p>对于秒杀接口，不是直接去请求秒杀的这个接口了， 而是先请求下获取path。之后拼接成秒杀地址。</p><p>前端代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMiaoshaPath</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    goodsId:$(<span class="string">"#goodsId"</span>).val(),</span><br><span class="line">    g_showLoading();</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"/miaosha/path"</span>,</span><br><span class="line">        type:<span class="string">"GET"</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            goodsId:$(<span class="string">"#goodsId"</span>).val(),</span><br><span class="line">            verifyCode:$(<span class="string">"#verifyCode"</span>).val()</span><br><span class="line">        &#125;,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(data.code == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> path = data.data;</span><br><span class="line">                doMiaosha(path);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                layer.msg(data.msg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            layer.msg(<span class="string">"客户端请求错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对应的后端代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AccessLimit</span>(seconds = <span class="number">5</span>,maxCount = <span class="number">5</span>, needLogin = <span class="keyword">true</span>)</span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/path"</span>,method = RequestMethod.GET)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result&lt;String&gt; <span class="title">getSecKillPath</span><span class="params">(HttpServletRequest request, SecKillUser user,</span></span></span><br><span class="line"><span class="function"><span class="params">                                     @RequestParam(<span class="string">"goodsId"</span>)</span> <span class="keyword">long</span> goodsId,</span></span><br><span class="line"><span class="function">                                     @<span class="title">RequestParam</span><span class="params">(value = <span class="string">"verifyCode"</span>, defaultValue = <span class="string">"0"</span>)</span> <span class="keyword">int</span> verifyCode)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(CodeMsg.SESSION_ERROR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//验证码的校验</span></span><br><span class="line">    <span class="keyword">boolean</span> check = secKillService.checkVerifyCode(user,goodsId,verifyCode);</span><br><span class="line">    <span class="keyword">if</span> (!check)&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(CodeMsg.REQUEST_ILLEGAL);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//生成path</span></span><br><span class="line">    String path = secKillService.createSecKillPath(user,goodsId);</span><br><span class="line">    <span class="keyword">return</span> Result.success(path);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成path，存入redis中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span>  String <span class="title">createSecKillPath</span><span class="params">(SecKillUser user, Long goodsId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span> || goodsId &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String str = MD5Util.md5(UUIDUtil.uuid() + <span class="string">"123456"</span>);</span><br><span class="line">        redisService.set(SecKillKey.getPath,user.getId()+<span class="string">"_"</span>+goodsId,str);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>秒杀接口，先拿到这个path验证一下是否正确，正确再进入下面的逻辑： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//验证path</span></span><br><span class="line"><span class="keyword">boolean</span> check = secKillService.checkPath(user,goodsId,path);</span><br><span class="line"><span class="keyword">if</span> (!check)&#123;</span><br><span class="line">    <span class="keyword">return</span> Result.error(CodeMsg.REQUEST_ILLEGAL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体的验证，就是取出缓存中的path，与前端传来的path进行对比，相等，说明是这个用户发来的请求： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 验证秒杀接口参数</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> goodsId</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span>  <span class="keyword">boolean</span> <span class="title">checkPath</span><span class="params">(SecKillUser user, <span class="keyword">long</span> goodsId, String path)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="keyword">null</span> || path == <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    String pathOld = redisService.get(SecKillKey.getPath,<span class="string">""</span>+user.getId()+<span class="string">"_"</span>+goodsId,String.class);</span><br><span class="line">    <span class="keyword">return</span> path.equals(pathOld);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后前端拼接出秒杀的地址</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doMiaosha</span>(<span class="params">path</span>)</span>&#123;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url:<span class="string">"/miaosha/"</span>+path+<span class="string">"/do_miaosha"</span>,</span><br><span class="line">type:<span class="string">"POST"</span>,</span><br><span class="line">data:&#123;</span><br><span class="line">goodsId:$(<span class="string">"#goodsId"</span>).val()</span><br><span class="line">&#125;,</span><br><span class="line">success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(data.code == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">// window.location.href="/order_detail.htm?orderId="+data.data.id;</span></span><br><span class="line">                getMiaoShaResult($(<span class="string">"#goodsId"</span>).val());</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">layer.msg(data.msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">layer.msg(<span class="string">"客户端请求有误"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="公式验证码"><a href="#公式验证码" class="headerlink" title="公式验证码"></a>公式验证码</h2><p>思路：点击秒杀之前，先输入验证码，分散用户的请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>前端增加获取验证码显示验证码输入验证码上传。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-inline"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"verifyCodeImg"</span> <span class="attr">width</span>=<span class="string">"80"</span> <span class="attr">height</span>=<span class="string">"32"</span> <span class="attr">style</span>=<span class="string">"display: none"</span> <span class="attr">onclick</span>=<span class="string">"refreshVerifyCode()"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"verifyCode"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">style</span>=<span class="string">"display: none"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">type</span>=<span class="string">"button"</span>    <span class="attr">id</span>=<span class="string">"buyButton"</span><span class="attr">onclick</span>=<span class="string">"getMiaoshaPath()"</span>&gt;</span>立即秒杀<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>增加返回验证码的接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> goodsId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/verifyCode"</span>,method = RequestMethod.GET)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;String&gt; <span class="title">getMiaoshaVerifyCode</span><span class="params">(HttpServletResponse response, SecKillUser user, @RequestParam(<span class="string">"goodsId"</span>)</span> <span class="keyword">long</span> goodsId)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(CodeMsg.SESSION_ERROR);</span><br><span class="line">        &#125;</span><br><span class="line">        BufferedImage  image = secKillService.createSecKillVerifyCode(user,goodsId);</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            OutputStream out = response.getOutputStream();  <span class="comment">//输出流</span></span><br><span class="line">            ImageIO.write(image,<span class="string">"JPEG"</span>,out);  <span class="comment">//图片写入输出流</span></span><br><span class="line">            out.flush();</span><br><span class="line">            out.close();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> Result.error(CodeMsg.SECKILL_FAILED);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在每次秒杀的时候，要先判断这个验证码是否正确</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//验证码的校验</span></span><br><span class="line"><span class="keyword">boolean</span> check = secKillService.checkVerifyCode(user,goodsId,verifyCode);</span><br><span class="line"><span class="keyword">if</span> (!check)&#123;</span><br><span class="line"><span class="keyword">return</span> Result.error(CodeMsg.REQUEST_ILLEGAL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成数字验证码并存入redis中，判断也是从redis中取出来判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> BufferedImage <span class="title">createSecKillVerifyCode</span><span class="params">(SecKillUser user, <span class="keyword">long</span> goodsId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span> || goodsId &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> width = <span class="number">80</span>;</span><br><span class="line">        <span class="keyword">int</span> height = <span class="number">32</span>;</span><br><span class="line">        <span class="comment">//生成图片</span></span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        Graphics g = image.getGraphics();</span><br><span class="line">        <span class="comment">// 背景</span></span><br><span class="line">        g.setColor(<span class="keyword">new</span> Color(<span class="number">0xDCDCDC</span>));</span><br><span class="line">        g.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        <span class="comment">// 背景上生成矩形框</span></span><br><span class="line">        g.setColor(Color.black);</span><br><span class="line">        g.drawRect(<span class="number">0</span>, <span class="number">0</span>, width - <span class="number">1</span>, height - <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 随机数</span></span><br><span class="line">        Random rdm = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="comment">// 生成干扰点</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = rdm.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> y = rdm.nextInt(height);</span><br><span class="line">            g.drawOval(x, y, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 生成验证码</span></span><br><span class="line">        String verifyCode = generateVerifyCode(rdm);</span><br><span class="line">        g.setColor(<span class="keyword">new</span> Color(<span class="number">0</span>, <span class="number">100</span>, <span class="number">0</span>));</span><br><span class="line">        g.setFont(<span class="keyword">new</span> Font(<span class="string">"Candara"</span>, Font.BOLD, <span class="number">24</span>));</span><br><span class="line">        g.drawString(verifyCode, <span class="number">8</span>, <span class="number">24</span>);</span><br><span class="line">        g.dispose();</span><br><span class="line">        <span class="comment">//把验证码存到redis中</span></span><br><span class="line">        <span class="keyword">int</span> rnd = calc(verifyCode);</span><br><span class="line">        redisService.set(SecKillKey.getSecKillVerifyCode, user.getId()+<span class="string">","</span>+goodsId, rnd);</span><br><span class="line">        <span class="comment">//输出图片</span></span><br><span class="line">        <span class="keyword">return</span> image;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">char</span>[] ops = <span class="keyword">new</span> <span class="keyword">char</span>[] &#123;<span class="string">'+'</span>, <span class="string">'-'</span>, <span class="string">'*'</span>&#125;;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成验证码公式</span></span><br><span class="line"><span class="comment">     * + - *</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">generateVerifyCode</span><span class="params">(Random rdm)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> num1 = rdm.nextInt(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">int</span> num2 = rdm.nextInt(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">int</span> num3 = rdm.nextInt(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">char</span> op1 = ops[rdm.nextInt(<span class="number">3</span>)];</span><br><span class="line">        <span class="keyword">char</span> op2 = ops[rdm.nextInt(<span class="number">3</span>)];</span><br><span class="line">        String exp = <span class="string">""</span>+ num1 + op1 + num2 + op2 + num3;</span><br><span class="line">        <span class="keyword">return</span> exp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Java ScriptEngine 解析js计算验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> exp 验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">calc</span><span class="params">(String exp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ScriptEngineManager manager = <span class="keyword">new</span> ScriptEngineManager();</span><br><span class="line">            ScriptEngine engine = manager.getEngineByName(<span class="string">"JavaScript"</span>);</span><br><span class="line">            <span class="keyword">return</span> (Integer)engine.eval(exp);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>前端在function getMiaoshaPath()这个函数中将结果传到后端，后端在这个获取真正秒杀链接的时候进行判断是否正确：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">verifyCode:$(<span class="string">"#verifyCode"</span>).val()</span><br></pre></td></tr></table></figure><p>后端接收验证码验证</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AccessLimit</span>(seconds = <span class="number">5</span>,maxCount = <span class="number">5</span>, needLogin = <span class="keyword">true</span>)</span><br><span class="line">   <span class="meta">@RequestMapping</span>(value = <span class="string">"/path"</span>,method = RequestMethod.GET)</span><br><span class="line">   <span class="meta">@ResponseBody</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Result&lt;String&gt; <span class="title">getMiaoshaPath</span><span class="params">(HttpServletRequest request, SecKillUser user,</span></span></span><br><span class="line"><span class="function"><span class="params">                                        @RequestParam(<span class="string">"goodsId"</span>)</span> <span class="keyword">long</span> goodsId,</span></span><br><span class="line"><span class="function">                                        @<span class="title">RequestParam</span><span class="params">(value = <span class="string">"verifyCode"</span>, defaultValue = <span class="string">"0"</span>)</span> <span class="keyword">int</span> verifyCode)</span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (user == <span class="keyword">null</span>)&#123;</span><br><span class="line">           <span class="keyword">return</span> Result.error(CodeMsg.SESSION_ERROR);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//验证码的校验</span></span><br><span class="line">       <span class="keyword">boolean</span> check = secKillService.checkVerifyCode(user,goodsId,verifyCode);</span><br><span class="line">       <span class="keyword">if</span> (!check)&#123;</span><br><span class="line">           <span class="keyword">return</span> Result.error(CodeMsg.REQUEST_ILLEGAL);</span><br><span class="line">       &#125;</span><br><span class="line">       String path = secKillService.createSecKillPath(user,goodsId);</span><br><span class="line">       <span class="keyword">return</span> Result.success(path);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>redis中取出生成时存入的验证码并与前端传进来的验证码做校验</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">    * 验证码的验证</span><br><span class="line">    * @param user 用户</span><br><span class="line">    * @param goodsId 商品id</span><br><span class="line">    * @param verifyCode 验证码</span><br><span class="line">    * @return</span><br><span class="line">    */</span><br><span class="line">   public boolean checkVerifyCode(SecKillUser user, long goodsId, int verifyCode) &#123;</span><br><span class="line">       if (user == null || goodsId &lt;= 0)&#123;</span><br><span class="line">           return false;</span><br><span class="line">       &#125;</span><br><span class="line">       Integer codeOld = redisService.get(SecKillKey.getSecKillVerifyCode, user.getId()+&quot;,&quot;+goodsId, Integer.class);</span><br><span class="line">       if (codeOld == null || codeOld - verifyCode != 0)&#123;</span><br><span class="line">           return false;</span><br><span class="line">       &#125;</span><br><span class="line">       //把当前的验证码清除</span><br><span class="line">       redisService.delete(SecKillKey.getSecKillVerifyCode, user.getId()+&quot;,&quot;+goodsId);</span><br><span class="line">       return true;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="接口限流防刷"><a href="#接口限流防刷" class="headerlink" title="接口限流防刷"></a>接口限流防刷</h2><p>思路：对接口做限流</p><p>可以使用拦截器减少对业务的侵入</p><p>点击秒杀之后，首先是生成path，那假如我们对这个接口进行限制：5秒之内用户只能点击5次。</p><p>这放在redis中是非常好实现的，因为redis有个自增(自减)和缓存时间，可以很好地实现这个效果。</p><p>这里使用注解的方式来实现接口的限流防刷，使用注解的话就可以做成通用的方法，在你想使用限流防刷的接口就可以添加上该注解</p><p>假设，我想在5秒内最多请求5次，并且必须要登陆：相应的注解就是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@AccessLimit(seconds = 5,maxCount = 5,needLogin = true)</span><br></pre></td></tr></table></figure><p>首先是实现这个注解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.SecKill.access;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.annotation.ElementType.METHOD;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 注解</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> WilsonSong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/9/009</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Target</span>(METHOD)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> AccessLimit &#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">seconds</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxCount</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">needLogin</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">true</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 要想这个注解能够生效，必须要配置拦截器AccessInterceptor： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.SecKill.access;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.springboot.SecKill.domain.SecKillUser;</span><br><span class="line"><span class="keyword">import</span> com.springboot.SecKill.redis.AccessKey;</span><br><span class="line"><span class="keyword">import</span> com.springboot.SecKill.redis.RedisService;</span><br><span class="line"><span class="keyword">import</span> com.springboot.SecKill.result.CodeMsg;</span><br><span class="line"><span class="keyword">import</span> com.springboot.SecKill.result.Result;</span><br><span class="line"><span class="keyword">import</span> com.springboot.SecKill.service.SecKillUserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.method.HandlerMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.handler.HandlerInterceptorAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拦截器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> WilsonSong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/9/009</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccessInterceptor</span> <span class="keyword">extends</span> <span class="title">HandlerInterceptorAdapter</span></span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SecKillUserService secKillUserService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RedisService redisService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法执行前执行</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(handler <span class="keyword">instanceof</span> HandlerMethod)&#123;</span><br><span class="line">            SecKillUser user = getUser(request,response);</span><br><span class="line">            UserContext.setUser(user);       <span class="comment">//把用户保存在本地线程变量中,并且该user与线程绑定一直执行到结束</span></span><br><span class="line"></span><br><span class="line">            HandlerMethod handlerMethod = (HandlerMethod)handler;</span><br><span class="line">            AccessLimit accessLimit = handlerMethod.getMethodAnnotation(AccessLimit.class);     <span class="comment">//取方法上的注解</span></span><br><span class="line">            <span class="keyword">if</span> (accessLimit == <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> seconds = accessLimit.seconds();</span><br><span class="line">            <span class="keyword">int</span> maxCount = accessLimit.maxCount();</span><br><span class="line">            <span class="keyword">boolean</span> needLogin = accessLimit.needLogin();</span><br><span class="line">            String key = request.getRequestURI();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (needLogin)&#123;</span><br><span class="line">                <span class="keyword">if</span> (user == <span class="keyword">null</span>)&#123;</span><br><span class="line">                    render(response,CodeMsg.SESSION_ERROR);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                key +=<span class="string">"_"</span> + user.getId();</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//da nothing</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//访问次数限制 访问次数存入内存</span></span><br><span class="line">            AccessKey accessKey = AccessKey.withExpires(seconds);</span><br><span class="line">            Integer count = redisService.get(accessKey,key, Integer.class);</span><br><span class="line">            <span class="keyword">if</span> (count == <span class="keyword">null</span>)&#123;</span><br><span class="line">                redisService.set(accessKey,key, <span class="number">1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (count &lt; maxCount)&#123;</span><br><span class="line">                redisService.incr(accessKey,key);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                render(response,CodeMsg.ACCESS_LIMIT_REACHED);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回客户端的错误信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cm</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">render</span><span class="params">(HttpServletResponse response,CodeMsg cm)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        response.setContentType(<span class="string">"application/json;charset=UTF-8"</span>);   <span class="comment">//返回的数据的编码方式</span></span><br><span class="line">        OutputStream outputStream = response.getOutputStream();</span><br><span class="line">        String str = JSON.toJSONString(Result.error(cm));</span><br><span class="line">        outputStream.write(str.getBytes(<span class="string">"UTF-8"</span>));</span><br><span class="line">        outputStream.flush();</span><br><span class="line">        outputStream.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过cookie获取用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> SecKillUser <span class="title">getUser</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span>&#123;</span><br><span class="line">        String paramToken = request.getParameter(SecKillUserService.COOKIE_NAME_TOKEN);</span><br><span class="line">        String cookieToken = getCookieValue(request,SecKillUserService.COOKIE_NAME_TOKEN);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(cookieToken) &amp;&amp; StringUtils.isEmpty(paramToken))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String token = StringUtils.isEmpty(paramToken)?cookieToken:paramToken;</span><br><span class="line">        <span class="keyword">return</span> secKillUserService.getByToken(response,token);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取cookie</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cookieName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getCookieValue</span><span class="params">(HttpServletRequest request,String cookieName)</span></span>&#123;</span><br><span class="line">        Cookie[] cookies = request.getCookies();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(cookies == <span class="keyword">null</span> || cookies.length &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (Cookie cookie : cookies)&#123;</span><br><span class="line">            <span class="keyword">if</span> (cookie.getName().equals(cookieName))&#123;</span><br><span class="line">                <span class="keyword">return</span> cookie.getValue();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要想这个拦截器工作，我们要重写WebMvcConfigurerAdapter中的addInterceptors方法，将我们的拦截器添加进去就可以了：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">    registry.addInterceptor(accessInterceptor);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 这样，利用注解和拦截器就实现了接口通用的限流功能。 </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SpringBoot学习之高并发接口优化—–秒杀接口地址隐藏-验证码-接口限流防刷&quot;&gt;&lt;a href=&quot;#SpringBoot学习之高并发接口优化—–秒杀接口地址隐藏-验证码-接口限流防刷&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot学习之高并发接口优化—–秒杀接口地址隐藏(验证码)+接口限流防刷&quot;&gt;&lt;/a&gt;SpringBoot学习之高并发接口优化—–秒杀接口地址隐藏(验证码)+接口限流防刷&lt;/h1&gt;&lt;h2 id=&quot;秒杀接口地址隐藏&quot;&gt;&lt;a href=&quot;#秒杀接口地址隐藏&quot; class=&quot;headerlink&quot; title=&quot;秒杀接口地址隐藏&quot;&gt;&lt;/a&gt;秒杀接口地址隐藏&lt;/h2&gt;&lt;p&gt;思路：秒杀开始之前，先去请求接口获取秒杀地址。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- 接口改造，带上PathVariable参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 添加生成地址的接口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 秒杀收到请求，先验证PathVariable&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://yoursite.com/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="接口优化，秒杀" scheme="http://yoursite.com/tags/%E6%8E%A5%E5%8F%A3%E4%BC%98%E5%8C%96%EF%BC%8C%E7%A7%92%E6%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot学习之秒杀接口优化</title>
    <link href="http://yoursite.com/2018/08/08/APIIOptimise/"/>
    <id>http://yoursite.com/2018/08/08/APIIOptimise/</id>
    <published>2018-08-08T12:13:48.000Z</published>
    <updated>2018-08-16T12:14:37.051Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用RabbitMQ改写秒杀功能"><a href="#使用RabbitMQ改写秒杀功能" class="headerlink" title="使用RabbitMQ改写秒杀功能"></a>使用RabbitMQ改写秒杀功能</h1><h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>思路：减少数据库访问 </p><a id="more"></a><p>具体的实现流程就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.系统初始化，把商品库存数量加载到Redis</span><br><span class="line"></span><br><span class="line">2.收到请求，Redis预减库存，库存不足，直接返回，否则3</span><br><span class="line"></span><br><span class="line">3.请求入队，立即返回排队中</span><br><span class="line"></span><br><span class="line">4.请求出队，生成订单，减少库存</span><br><span class="line"></span><br><span class="line">5.客户端轮询，是否秒杀成功</span><br></pre></td></tr></table></figure><p>其中4和5是同时并发处理的。</p><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><h4 id="系统初始化，把商品库存数量加载到Redis"><a href="#系统初始化，把商品库存数量加载到Redis" class="headerlink" title="系统初始化，把商品库存数量加载到Redis"></a><strong>系统初始化，把商品库存数量加载到Redis</strong></h4><p>如何在初始化的时候就将库存数据存入缓存中</p><p>通过实现InitializingBean接口中的一个方法:afterPropertiesSet()</p><p>系统初始化会首先调用该函数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 系统初始化会调用该函数</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterPropertiesSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       List&lt;GoodsVo&gt; goodsVoList = goodsService.listGoodsVo();</span><br><span class="line">       <span class="keyword">if</span> (goodsVoList == <span class="keyword">null</span>)&#123;</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span> (GoodsVo goodsVo:goodsVoList)&#123;</span><br><span class="line">           <span class="comment">//预先把商品库存加载到redis中</span></span><br><span class="line">           redisService.set(GoodsKey.getSeckillGoodsStock,<span class="string">""</span>+goodsVo.getId(),goodsVo.getStockCount());</span><br><span class="line">           localOverMap.put(goodsVo.getId(),<span class="keyword">false</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="收到请求，Redis预减库存，库存不足，直接返回，否则请求入队，立即返回排队中"><a href="#收到请求，Redis预减库存，库存不足，直接返回，否则请求入队，立即返回排队中" class="headerlink" title="收到请求，Redis预减库存，库存不足，直接返回，否则请求入队，立即返回排队中"></a>收到请求，Redis预减库存，库存不足，直接返回，否则请求入队，立即返回排队中</h4><p>首先需要一个RabbitMQ的队列</p><p>使用Direct交换机模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Direct 交换机模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">//队列</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">secKill_QUEUE</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(SECKILL_QUEUE,<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>队列消息的发送</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public void sendSecKillMessage(SecKillMessage secKillMessage) &#123;</span><br><span class="line">       String msg = RedisService.Bean2String(secKillMessage);</span><br><span class="line">       logger.info(&quot;send SecKill message: &quot; + msg);</span><br><span class="line">       amqpTemplate.convertAndSend(MQConfig.SECKILL_QUEUE, msg);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>秒杀的实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//预先减库存</span></span><br><span class="line"><span class="keyword">long</span> stock = redisService.decr(GoodsKey.getSeckillGoodsStock,<span class="string">""</span>+goodsId);</span><br><span class="line"><span class="keyword">if</span> (stock &lt; <span class="number">0</span>)&#123;</span><br><span class="line">localOverMap.put(goodsId,<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> Result.error(CodeMsg.SECKILL_OVER);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断是否已经秒杀到了</span></span><br><span class="line">SecKillOrder order = orderService.getOrderByUserIdGoodsId(user.getId(),goodsId);</span><br><span class="line"><span class="keyword">if</span> (order != <span class="keyword">null</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> Result.error( CodeMsg.SECKILL_REPEATE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//压入RabbitMQ队列</span></span><br><span class="line">SecKillMessage secKillMessage = <span class="keyword">new</span> SecKillMessage();</span><br><span class="line">secKillMessage.setUser(user);</span><br><span class="line">secKillMessage.setGoodsId(goodsId);</span><br><span class="line">mqSender.sendSecKillMessage(secKillMessage);</span><br><span class="line"><span class="keyword">return</span> Result.success(<span class="number">0</span>);    <span class="comment">//排队中</span></span><br></pre></td></tr></table></figure><h4 id="请求出队，生成订单，减少库存"><a href="#请求出队，生成订单，减少库存" class="headerlink" title="请求出队，生成订单，减少库存"></a>请求出队，生成订单，减少库存</h4><p>其实就是RabbitMQ的队列出队去处理相关的业务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RabbitListener</span>(queues = MQConfig.SECKILL_QUEUE)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">       logger.info(<span class="string">"receive message"</span> + message);</span><br><span class="line">       SecKillMessage secKillMessage = RedisService.String2Bean(message,SecKillMessage.class);</span><br><span class="line">       SecKillUser user = secKillMessage.getUser();</span><br><span class="line">       <span class="keyword">long</span> goodsId = secKillMessage.getGoodsId();</span><br><span class="line"></span><br><span class="line">       <span class="comment">//判断库存</span></span><br><span class="line">       GoodsVo goods = goodsService.getGoodsVoByGoodsId(goodsId);</span><br><span class="line">       <span class="keyword">int</span> stock = goods.getStockCount();</span><br><span class="line">       <span class="keyword">if</span> (stock &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//判断是否已经秒杀到了</span></span><br><span class="line">       SecKillOrder order = orderService.getOrderByUserIdGoodsId(user.getId(),goodsId);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (order != <span class="keyword">null</span>)&#123;</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//减库存 下订单 写入秒杀订单</span></span><br><span class="line">       <span class="comment">//订单的详细信息</span></span><br><span class="line">       OrderInfo orderInfo = secKillService.secKill(user, goods);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="客户端轮询，是否秒杀成功"><a href="#客户端轮询，是否秒杀成功" class="headerlink" title="客户端轮询，是否秒杀成功"></a>客户端轮询，是否秒杀成功</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//秒杀的结果</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * orderId:秒杀成功</span></span><br><span class="line"><span class="comment">     * -1： 秒杀失败</span></span><br><span class="line"><span class="comment">     * 0：排队中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> goodsId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/result"</span>,method = RequestMethod.GET)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;Long&gt; <span class="title">miaoshaResult</span><span class="params">(Model model, SecKillUser user, @RequestParam(<span class="string">"goodsId"</span>)</span> <span class="keyword">long</span> goodsId)</span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(CodeMsg.SESSION_ERROR);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> result = secKillService.getSecKillResult(user.getId(),goodsId);</span><br><span class="line">        <span class="keyword">return</span> Result.success(result);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>secKillService.getSecKillResult():</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取结果</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * orderId :成功</span></span><br><span class="line"><span class="comment">     * -1:失败</span></span><br><span class="line"><span class="comment">     * 0： 排队中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> goodsId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">long</span> <span class="title">getSecKillResult</span><span class="params">(Long userId, <span class="keyword">long</span> goodsId)</span> </span>&#123;</span><br><span class="line">        SecKillOrder order = orderService.getOrderByUserIdGoodsId(userId,goodsId);</span><br><span class="line">        <span class="keyword">if</span> (order != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> order.getOrderId();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">boolean</span> isOver = getGoodsOver(goodsId);</span><br><span class="line">            <span class="keyword">if</span> (isOver)&#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里涉及到了redis的访问，就是redis中有商品的数量，通过该参数判断卖没卖完，当一次性来了多于商品数目的请求的时候，redis预减库存，减为负数，其实在这个时候在来商品购买请求的时候就不需要在访问redis了。因为商品已经卖完了，这个时候就做一个标记，先判断内存这个标记，如果库存已经小于0了，就不再访问redis，这样就减少了redis的访问次数。</p><p>没有订单有两种情况，卖完了失败，和排队中,</p><p>在上面的秒杀那做个标记。这个商品是否秒杀完了。存入redis中。 </p><p>之后去判断是否存在这个key就知道是哪种情况,这样</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//事务，原子性操作</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OrderInfo <span class="title">secKill</span><span class="params">(SecKillUser user, GoodsVo goods)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//减库存 下订单 写入秒杀订单 必须是同时完成的</span></span><br><span class="line">        <span class="keyword">boolean</span> success = goodsService.reduceStock(goods);</span><br><span class="line">        <span class="comment">//减库存成功了才进行下订单</span></span><br><span class="line">        <span class="keyword">if</span> (success) &#123;</span><br><span class="line">            <span class="keyword">return</span> orderService.createOrder(user, goods);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123; <span class="comment">//说明商品秒杀完了。做一个标记</span></span><br><span class="line">            setGoodsOver(goods.getId());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取结果</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * orderId :成功</span></span><br><span class="line"><span class="comment">     * -1:失败</span></span><br><span class="line"><span class="comment">     * 0： 排队中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> goodsId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">long</span> <span class="title">getSecKillResult</span><span class="params">(Long userId, <span class="keyword">long</span> goodsId)</span> </span>&#123;</span><br><span class="line">        SecKillOrder order = orderService.getOrderByUserIdGoodsId(userId,goodsId);</span><br><span class="line">        <span class="keyword">if</span> (order != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> order.getOrderId();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">boolean</span> isOver = getGoodsOver(goodsId);</span><br><span class="line">            <span class="keyword">if</span> (isOver)&#123;</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGoodsOver</span><span class="params">(Long goodsId)</span> </span>&#123;</span><br><span class="line">        redisService.set(SecKillKey.isGoodsOver,<span class="string">""</span>+goodsId,<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">getGoodsOver</span><span class="params">(Long goodsId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisService.exists(SecKillKey.isGoodsOver,<span class="string">""</span>+goodsId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相对应的前端的修改</p><p>原来的detail页面中秒杀事件函数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doMiaosha</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"/miaosha/do_miaosha"</span>,</span><br><span class="line">        type:<span class="string">"POST"</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            goodsId:$(<span class="string">"#goodsId"</span>).val(),</span><br><span class="line">        &#125;,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(data.code == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">window</span>.location.href=<span class="string">"/order_detail.htm?orderId="</span>+data.data.id;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                layer.msg(data.msg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            layer.msg(<span class="string">"客户端请求有误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>秒杀到商品就直接返回，现在后端改为消息队列，所以需要增加函数进行判断，必要时需要轮询：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(data.code == <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="built_in">window</span>.location.href=<span class="string">"/order_detail.htm?orderId="</span>+data.data.id;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    layer.msg(data.msg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以将其改为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//其他的部分省略</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">if</span>(data.code == <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="comment">//window.location.href="/order_detail.htm?orderId="+data.data.id;</span></span><br><span class="line">    <span class="comment">//秒杀到商品的时候，这个时候不是直接返回成功，后端是进入消息队列，所以前端是轮询结果，显示排队中</span></span><br><span class="line">    getMiaoshaResult($(<span class="string">"#goodsId"</span>).val());</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    layer.msg(data.msg);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMiaoshaResult</span>(<span class="params">goodsId</span>) </span>&#123;</span><br><span class="line">    g_showLoading();</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"/miaosha/result"</span>,</span><br><span class="line">        type:<span class="string">"GET"</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            goodsId:$(<span class="string">"#goodsId"</span>).val(),</span><br><span class="line">        &#125;,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(data.code == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> result = data.data;</span><br><span class="line">                <span class="comment">//失败---    -1</span></span><br><span class="line">                <span class="keyword">if</span>(result &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">                    layer.msg(<span class="string">"对不起，秒杀失败！"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//排队等待，轮询---   0</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(result == <span class="number">0</span>)&#123;<span class="comment">//继续轮询</span></span><br><span class="line">                    setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        getMiaoshaResult(goodsId);</span><br><span class="line">                    &#125;,<span class="number">50</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//成功----   1</span></span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    layer.msg(<span class="string">"恭喜你，秒杀成功，查看订单?"</span>,&#123;<span class="attr">btn</span>:[<span class="string">"确定"</span>,<span class="string">"取消"</span>]&#125;,</span><br><span class="line">                        <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            <span class="built_in">window</span>.location.href=<span class="string">"/order_detail.htm?orderId="</span>+result;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            layer.closeAll();</span><br><span class="line">                        &#125;</span><br><span class="line">                    );</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                layer.msg(data.msg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            layer.msg(<span class="string">"客户端请求有误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="压测"><a href="#压测" class="headerlink" title="压测"></a>压测</h3><p>测试环境 1g + 4核 + 50000个请求</p><p><img src="/2018/08/08/APIIOptimise/1533781770583.png" alt="1533781770583"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用RabbitMQ改写秒杀功能&quot;&gt;&lt;a href=&quot;#使用RabbitMQ改写秒杀功能&quot; class=&quot;headerlink&quot; title=&quot;使用RabbitMQ改写秒杀功能&quot;&gt;&lt;/a&gt;使用RabbitMQ改写秒杀功能&lt;/h1&gt;&lt;h2 id=&quot;实现思路&quot;&gt;&lt;a href=&quot;#实现思路&quot; class=&quot;headerlink&quot; title=&quot;实现思路&quot;&gt;&lt;/a&gt;实现思路&lt;/h2&gt;&lt;p&gt;思路：减少数据库访问 &lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://yoursite.com/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="秒杀" scheme="http://yoursite.com/tags/%E7%A7%92%E6%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot之安装RabbitMQ（踩坑）及RabbitMQ原理和使用详解</title>
    <link href="http://yoursite.com/2018/08/08/RabbitMQ/"/>
    <id>http://yoursite.com/2018/08/08/RabbitMQ/</id>
    <published>2018-08-08T02:37:14.000Z</published>
    <updated>2018-08-16T12:13:49.418Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot之安装RabbitMQ（踩坑）及RabbitMQ原理和使用详解"><a href="#SpringBoot之安装RabbitMQ（踩坑）及RabbitMQ原理和使用详解" class="headerlink" title="SpringBoot之安装RabbitMQ（踩坑）及RabbitMQ原理和使用详解"></a>SpringBoot之安装RabbitMQ（踩坑）及RabbitMQ原理和使用详解</h1><h2 id="安装RabbitMQ"><a href="#安装RabbitMQ" class="headerlink" title="安装RabbitMQ"></a>安装RabbitMQ</h2><p>安装环境centos7 + <a href="http://www.rabbitmq.com/news.html#2018-07-05T17:00:00+00:00" target="_blank" rel="noopener">RabbitMQ 3.7.7 </a>  + <a href="http://erlang.org/download/otp_src_21.0.tar.gz" target="_blank" rel="noopener">OTP 21.0 Source File</a> </p><a id="more"></a><p><strong>1.安装erlang:</strong></p><p>（1）.下载: <a href="http://www.erlang.org/downloads" target="_blank" rel="noopener">http://www.erlang.org/downloads</a></p><p>（2）.安装依赖<code>yum install ncurses-devel</code><br>        （3）.解压<code>tar xf otp_src_21.0.tar.gz</code><br>    （4）.安装目录./configure –prefix=/usr/local/erlang –without-javac</p><p>（5）编译<code>make</code></p><p>（6）安装<code>make install</code><br>    （7）验证安装是否成功  </p><p>​         <code>cd /usr/local/erlang/bin/</code><br>          执行<code>./erl</code></p><p><strong>2.安装rabbitmq</strong></p><p>rabbitmq解压即可用</p><p>（1）解压<code>xz -d rabbitmq-server-generic-unix-3.7.7.tar.xz</code><br>                       <code>tar xf rabbitmq-server-generic-unix-3.7.7.tar</code><br>    （2）安装依赖:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install python -y</span><br><span class="line">yum install xmlto -y</span><br><span class="line">yum install python-simplejson -y</span><br></pre></td></tr></table></figure><p>（3）启动:</p><p><code>cd rabbitmq/sbin/</code></p><p><code>./rabbitmq-server</code></p><p>正常到这里就完成安装了，但是我的并没有，报错了</p><h2 id="踩坑（报错四部曲）"><a href="#踩坑（报错四部曲）" class="headerlink" title="踩坑（报错四部曲）"></a>踩坑（报错四部曲）</h2><p><strong>（1）启动报错啊</strong></p><p>显示<code>./rabbitmq-server:行85: erl: 未找到命令</code></p><p>解决办法执行</p><p><code>vim /etc/profile</code></p><p>在文件中添加:<br>        <code>ERL_HOME=/usr/local/erlang</code></p><p><code>export PATH=$PATH:$ERL_HOME/bin</code></p><p><strong>（2）再启动还报错</strong></p><p>显示错误如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Error description:</span><br><span class="line">    init:do_boot/<span class="number">3</span></span><br><span class="line">    init:start_em/<span class="number">1</span></span><br><span class="line">    rabbit:start_it/<span class="number">1</span> line <span class="number">450</span></span><br><span class="line">    rabbit:broker_start/<span class="number">0</span> line <span class="number">324</span></span><br><span class="line">    rabbit_plugins:prepare_plugins/<span class="number">1</span> line <span class="number">289</span></span><br><span class="line">    rabbit_plugins:ensure_dependencies/<span class="number">1</span> line <span class="number">263</span></span><br><span class="line"><span class="keyword">throw</span>:&#123;error,&#123;missing_dependencies,[crypto,ssl],</span><br><span class="line">                                   [amqp10_client,cowboy,cowlib,rabbitmq_aws,</span><br><span class="line">                                    rabbitmq_management,</span><br><span class="line">                                    rabbitmq_management_agent,rabbitmq_shovel,</span><br><span class="line">                                    rabbitmq_trust_store]&#125;&#125;</span><br></pre></td></tr></table></figure><p>解决方法：</p><p>应该是缺少依赖，openssl的两个包</p><p>看一下自己的Linux下有没有</p><p><code>which openssl</code></p><p>我的里面是有的，显示</p><p><code>/usr/bin/openssl</code></p><p>看一下版本</p><p><code>openssl version</code></p><p>版本有点老，可能是这个原因。</p><p>重新安装spenssl</p><p><a href="https://www.openssl.org/source/" target="_blank" rel="noopener">https://www.openssl.org/source/</a><br>    安装的话就找个教程就完事了</p><p><strong>（3）安装完再启动还报错</strong></p><p>错误信息：</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/openssl/bin/openssl: error <span class="keyword">while</span> loading shared libraries: libssl.so<span class="number">.1</span><span class="number">.1</span>: cannot open shared object file: No such file <span class="keyword">or</span> directory</span><br></pre></td></tr></table></figure><p>其实就是找不到libssl.so.1.1</p><p>可以做一个软连接</p><p>假如你的libssl.so.1.1 文件在/usr/local/openssl/lib/下面，可以这样做</p><p><code>ln -s /usr/local/openssl/lib/libssl.so.1.1 /usr/lib64/libssl.so.1.1</code></p><p><code>ln -s /usr/local/openssl/lib/libcrypto.so.1.1 /usr/lib64/libcrypto.so.1.1</code></p><p>完成后看一下当前版本<br>     <code>openssl version</code></p><p>显示<code>OpenSSL 1.1.0g  2 Nov 2017</code></p><p>然后重启一般就可以了</p><p><strong>（4）还报错，和2一样的错误</strong></p><p>然而我的还是还是不行，怎么办，重装erlang,<br>    然后启动rabbitmq就好使了。<br>    会看到log</p><p>tail -f <a href="mailto:/usr/local/rabbitmq/var/log/rabbitmq/rabbit@localhost.log" target="_blank" rel="noopener">/usr/local/rabbitmq/var/log/rabbitmq/rabbit@localhost.log</a><br>    看一下启动起来没有,一般是在5672端口启动的，可以看一下5672端口有没有在监听</p><p><code>netstat -nap | grep 5672</code></p><p>也可以执行</p><p><code>ps -ef | gerp rabbitmq</code></p><p>看RabbitMQ相关的服务有没有启动</p><p>关闭RabbitMQ</p><p><code>./rabbitmqctl stop</code></p><p>把rabbitmq-server 写到环境变量中</p><p><code>vim /etc/profile</code></p><p>在文件中写入</p><p><code>export PATH=$PATH:/usr/local/ruby/bin:/usr/local/erlang/bin:/usr/local/rabbitmq/sbin</code></p><p>怎么让RabbitMQ在后台运行:</p><p><code>./rabbitmq-server  -detached</code></p><h2 id="RabbitMQ基本原理"><a href="#RabbitMQ基本原理" class="headerlink" title="RabbitMQ基本原理"></a>RabbitMQ基本原理</h2><p>讲解基础概念的前面，我们先来整体构造一个结构图，这样会方便们更好地去理解RabbitMQ的基本原理。</p><p><img src="/2018/08/08/RabbitMQ/458325-20160107091118450-1592424097.png" alt="img"></p><p>   通过上面这张应用相结合的结构图既能够清晰的看清楚整体的send Message到Receive Message的一个大致的流程。当然上面有很多名词都相比还没有介绍到，不要着急接下来我们就开始对其进行详细的讲解。</p><h4 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a><strong>Queue</strong></h4><p>Queue（队列）RabbitMQ的作用是存储消息，队列的特性是先进先出。上图可以清晰地看到Client A和Client B是生产者，生产者生产消息最终被送到RabbitMQ的内部对象Queue中去，而消费者则是从Queue队列中取出数据。可以简化成表示为：</p><p><img src="/2018/08/08/RabbitMQ/458325-20160107091219153-26270174.png" alt="img"></p><p>生产者Send Message “A”被传送到Queue中，消费者发现消息队列Queue中有订阅的消息，就会将这条消息A读取出来进行一些列的业务操作。这里只是一个消费正对应一个队列Queue，也可以多个消费者订阅同一个队列Queue，当然这里就会将Queue里面的消息平分给其他的消费者，但是会存在一个一个问题就是如果每个消息的处理时间不同，就会导致某些消费者一直在忙碌中，而有的消费者处理完了消息后一直处于空闲状态，因为前面已经提及到了Queue会平分这些消息给相应的消费者。这里我们就可以使用prefetchCount来限制每次发送给消费者消息的个数。详情见下图所示：</p><p><img src="/2018/08/08/RabbitMQ/458325-20160107091257496-665638720.png" alt="img"></p><p>这里的prefetchCount=1是指每次从Queue中发送一条消息来。等消费者处理完这条消息后Queue会再发送一条消息给消费者。</p><h4 id="Exchange"><a href="#Exchange" class="headerlink" title="Exchange"></a><strong>Exchange</strong></h4><p>我们在开篇的时候就留了一个坑，就是那个应用结构图里面，消费者Client A和消费者Client B是如何知道我发送的消息是给Queue1还是给Queue2，有没有过这个问题，那么我们就来解开这个面纱，看看到底是个什么构造。首先明确一点就是生产者产生的消息并不是直接发送给消息队列Queue的，而是要经过Exchange（交换器），由Exchange再将消息路由到一个或多个Queue，当然这里还会对不符合路由规则的消息进行丢弃掉，这里指的是后续要谈到的Exchange Type。那么Exchange是怎样将消息准确的推送到对应的Queue的呢？那么这里的功劳最大的当属Binding，RabbitMQ是通过Binding将Exchange和Queue链接在一起，这样Exchange就知道如何将消息准确的推送到Queue中去。简单示意图如下所示：</p><p><img src="/2018/08/08/RabbitMQ/458325-20160107091338246-1623413505.png" alt="img"></p><p>在绑定（Binding）Exchange和Queue的同时，一般会指定一个Binding Key，生产者将消息发送给Exchange的时候，一般会产生一个Routing Key，当Routing Key和Binding Key对应上的时候，消息就会发送到对应的Queue中去。那么Exchange有四种类型，不同的类型有着不同的策略。也就是表明不同的类型将决定绑定的Queue不同，换言之就是说生产者发送了一个消息，Routing Key的规则是A，那么生产者会将Routing Key=A的消息推送到Exchange中，这时候Exchange中会有自己的规则，对应的规则去筛选生产者发来的消息，如果能够对应上Exchange的内部规则就将消息推送到对应的Queue中去。那么接下来就来详细讲解下Exchange里面类型。</p><h4 id="Exchange-Type"><a href="#Exchange-Type" class="headerlink" title="Exchange Type"></a><strong>Exchange Type</strong></h4><p><strong>fanout</strong></p><p>fanout类型的Exchange路由规则非常简单，它会把所有发送到该Exchange的消息路由到所有与它绑定的Queue中。</p><p><img src="/2018/08/08/RabbitMQ/458325-20160107091426887-423066137.png" alt="img"></p><p>上图所示，生产者（P）生产消息1将消息1推送到Exchange，由于Exchange Type=fanout这时候会遵循fanout的规则将消息推送到所有与它绑定Queue，也就是图上的两个Queue最后两个消费者消费。</p><p><strong>direct</strong></p><p>direct类型的Exchange路由规则也很简单，它会把消息路由到那些binding key与routing key完全匹配的Queue中</p><p><img src="/2018/08/08/RabbitMQ/458325-20160107091457637-428564110.png" alt="img"></p><p>当生产者（P）发送消息时Rotuing key=booking时，这时候将消息传送给Exchange，Exchange获取到生产者发送过来消息后，会根据自身的规则进行与匹配相应的Queue，这时发现Queue1和Queue2都符合，就会将消息传送给这两个队列，如果我们以Rotuing key=create和Rotuing key=confirm发送消息时，这时消息只会被推送到Queue2队列中，其他Routing Key的消息将会被丢弃。</p><p><strong>topic</strong></p><p>前面提到的direct规则是严格意义上的匹配，换言之Routing Key必须与Binding Key相匹配的时候才将消息传送给Queue，那么topic这个规则就是模糊匹配，可以通过通配符满足一部分规则就可以传送。它的约定是：</p><ol><li>routing key为一个句点号“. ”分隔的字符串（我们将被句点号“. ”分隔开的每一段独立的字符串称为一个单词），如“stock.usd.nyse”、“nyse.vmw”、“quick.orange.rabbit”</li><li>binding key与routing key一样也是句点号“. ”分隔的字符串</li><li>binding key中可以存在两种特殊字符“<em>”与“#”，用于做模糊匹配，其中“</em>”用于匹配一个单词，“#”用于匹配多个单词（可以是零个）</li></ol><p><img src="/2018/08/08/RabbitMQ/458325-20160107091636856-880162406.png" alt="img"></p><p>当生产者发送消息Routing Key=F.C.E的时候，这时候只满足Queue1，所以会被路由到Queue中，如果Routing Key=A.C.E这时候会被同是路由到Queue1和Queue2中，如果Routing Key=A.F.B时，这里只会发送一条消息到Queue2中。</p><p><strong>headers</strong></p><p>headers类型的Exchange不依赖于routing key与binding key的匹配规则来路由消息，而是根据发送的消息内容中的headers属性进行匹配。<br>在绑定Queue与Exchange时指定一组键值对；当消息发送到Exchange时，RabbitMQ会取到该消息的headers（也是一个键值对的形式），对比其中的键值对是否完全匹配Queue与Exchange绑定时指定的键值对；如果完全匹配则消息会路由到该Queue，否则不会路由到该Queue。<br>该类型的Exchange没有用到过（不过也应该很有用武之地），所以不做介绍。</p><p>总结成表格：</p><table><thead><tr><th>类型名称</th><th>类型描述</th></tr></thead><tbody><tr><td>Fandout</td><td>把所有发送到该Exchange的消息路由到所有与它绑定的Queue中</td></tr><tr><td>Direct</td><td>Routing Key==Binding Key</td></tr><tr><td>Topic</td><td>模糊匹配</td></tr><tr><td>Headers</td><td>Exchange不依赖于routing key与binding key的匹配规则来路由消息，而是根据发送的消息内容中的headers属性进行匹配。</td></tr></tbody></table><h4 id="Binding"><a href="#Binding" class="headerlink" title="Binding"></a>Binding</h4><p>所谓绑定就是将一个特定的 Exchange 和一个特定的 Queue 绑定起来。Exchange 和Queue的绑定可以是多对多的关系。</p><h4 id="通信过程"><a href="#通信过程" class="headerlink" title="通信过程"></a>通信过程</h4><p>假设P1和C1注册了相同的Broker，Exchange和Queue。P1发送的消息最终会被C1消费。基本的通信流程大概如下所示：</p><ol><li>P1生产消息，发送给服务器端的Exchange</li><li>Exchange收到消息，根据ROUTINKEY，将消息转发给匹配的Queue1</li><li>Queue1收到消息，将消息发送给订阅者C1</li><li>C1收到消息，发送ACK给队列确认收到消息</li><li>Queue1收到ACK，删除队列中缓存的此条消息</li></ol><p>Consumer收到消息时需要显式的向rabbit broker发送basic.ack消息或者consumer订阅消息时设置auto_ack参数为true。在通信过程中，队列对ACK的处理有以下几种情况：</p><ol><li>如果consumer接收了消息，发送ack,rabbitmq会删除队列中这个消息，发送另一条消息给consumer。</li><li>如果cosumer接受了消息, 但在发送ack之前断开连接，rabbitmq会认为这条消息没有被deliver,在consumer在次连接的时候，这条消息会被redeliver。</li><li>如果consumer接受了消息，但是程序中有bug,忘记了ack,rabbitmq不会重复发送消息。</li><li>rabbitmq2.0.0和之后的版本支持consumer reject某条（类）消息，可以通过设置requeue参数中的reject为true达到目地，那么rabbitmq将会把消息发送给下一个注册的consumer。</li></ol><h2 id="SpringBoot集成RabbitMQ"><a href="#SpringBoot集成RabbitMQ" class="headerlink" title="SpringBoot集成RabbitMQ"></a>SpringBoot集成RabbitMQ</h2><p><strong>(1)添加依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--rabbitmq--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>(2)添加配置</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#rabbitmq</span><br><span class="line">spring.rabbitmq.host=192.168.78.133</span><br><span class="line">spring.rabbitmq.port=5672</span><br><span class="line">spring.rabbitmq.username=guest</span><br><span class="line">spring.rabbitmq.password=guest</span><br><span class="line">spring.rabbitmq.virtual-host=/</span><br><span class="line">#消费者数量</span><br><span class="line">#消费者队列的数量</span><br><span class="line">spring.rabbitmq.listener.simple.concurrency= 10</span><br><span class="line">spring.rabbitmq.listener.simple.max-concurrency= 10</span><br><span class="line">#消费者每次从队列获取的消息数量</span><br><span class="line">spring.rabbitmq.listener.simple.prefetch= 1</span><br><span class="line">#消费者自动启动</span><br><span class="line">spring.rabbitmq.listener.simple.auto-startup=true</span><br><span class="line">#消费失败，自动重新入队</span><br><span class="line">spring.rabbitmq.listener.simple.default-requeue-rejected= true</span><br><span class="line">#启用发送重试</span><br><span class="line">#队列的发送者，队列满了就重置</span><br><span class="line">spring.rabbitmq.template.retry.enabled=true</span><br><span class="line">spring.rabbitmq.template.retry.initial-interval=1000 </span><br><span class="line">spring.rabbitmq.template.retry.max-attempts=3</span><br><span class="line">spring.rabbitmq.template.retry.max-interval=10000</span><br><span class="line">spring.rabbitmq.template.retry.multiplier=1.0</span><br></pre></td></tr></table></figure><p>配置去这里找：<br>       <a href="https://docs.spring.io/spring-boot/docs/2.0.4.RELEASE/reference/htmlsingle/" target="_blank" rel="noopener">https://docs.spring.io/spring-boot/docs/2.0.4.RELEASE/reference/htmlsingle/</a></p><p>每个配置的详细信息是什么：<br>       <a href="https://github.com/spring-projects/spring-boot/blob/v2.0.4.RELEASE/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java" target="_blank" rel="noopener">https://github.com/spring-projects/spring-boot/blob/v2.0.4.RELEASE/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java</a></p><p>配置完成之后，RabbitMQ有4种交换机模式，下面分别实现下。</p><h2 id="4种交换机模式实现"><a href="#4种交换机模式实现" class="headerlink" title="4种交换机模式实现"></a>4种交换机模式实现</h2><p>Direct、Topic、Fanout和Headers模式的实现如下：</p><p>（1）初始化队列</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.SecKill.rabbitmq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.retry.annotation.Backoff;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * rabbitMQ配置初始化</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> WilsonSong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/8</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MQConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String QUEUE = <span class="string">"queue"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TOPIC_QUEUE1 = <span class="string">"topic.queue1"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TOPIC_QUEUE2 = <span class="string">"topic.queue2"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FANOUT_QUEUE1 = <span class="string">"fanout.queue1"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FANOUT_QUEUE2 = <span class="string">"fanout.queue2"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String HEADERS_QUEUE = <span class="string">"headers.queue"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TOPIC_EXCHANGE = <span class="string">"topicExchange"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FANOUT_EXCHANGE = <span class="string">"fanoutExchange"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String HEADERS_EXCHANGE = <span class="string">"headersExchange"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Direct 交换机模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">//队列</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">queue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(QUEUE,<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Topic 交换机模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">topicQueue1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(TOPIC_QUEUE1,<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">topicQueue2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(TOPIC_QUEUE2,<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TopicExchange <span class="title">topicExchange</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> TopicExchange(TOPIC_EXCHANGE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 绑定Exchange和queue</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">topicBinding1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(topicQueue1()).to(topicExchange()).with(<span class="string">"topic.key1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">topicBinding2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(topicQueue2()).to(topicExchange()).with(<span class="string">"topic.#"</span>); <span class="comment">//# 通配符，代表多个单词</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Fanout模式 交换机Exchange</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">fanoutQueue1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(FANOUT_QUEUE1,<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">fanoutQueue2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(FANOUT_QUEUE2,<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FanoutExchange <span class="title">fanoutExchange</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> FanoutExchange(FANOUT_EXCHANGE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">fanoutBinding1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(fanoutQueue1()).to(fanoutExchange());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">fanoutBinding2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(fanoutQueue2()).to(fanoutExchange());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Header模式 交换机Exchange</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HeadersExchange <span class="title">headersExchange</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> HeadersExchange(HEADERS_EXCHANGE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">headersQueue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(HEADERS_QUEUE,<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">headersBinding</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"header1"</span>,<span class="string">"value1"</span>);</span><br><span class="line">        map.put(<span class="string">"header2"</span>,<span class="string">"value2"</span>);</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(headersQueue()).to(headersExchange()).whereAll(map).match();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(2)消息发送者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.SecKill.rabbitmq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.springboot.SecKill.redis.RedisService;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.AmqpTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.Message;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.MessageProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> WilsonSong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/8</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MQSender</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(MQReceiver.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    AmqpTemplate amqpTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Direct 交换机模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">//消息发送到队列</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">(Object message)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String msg = RedisService.Bean2String(message);</span><br><span class="line">        logger.info(<span class="string">"send topic message: "</span> + msg);</span><br><span class="line">        amqpTemplate.convertAndSend(MQConfig.QUEUE, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Topic 交换机模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendTopic</span><span class="params">(Object message)</span></span>&#123;</span><br><span class="line">        String msg = RedisService.Bean2String(message);</span><br><span class="line">        logger.info(<span class="string">"send topic message: "</span> + msg);</span><br><span class="line">        amqpTemplate.convertAndSend(MQConfig.TOPIC_EXCHANGE,<span class="string">"topic.key1"</span>,msg+<span class="string">"1"</span>);</span><br><span class="line">        amqpTemplate.convertAndSend(MQConfig.TOPIC_EXCHANGE,<span class="string">"topic.key2"</span>,msg+<span class="string">"1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Fanout模式 交换机Exchange</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendFanout</span><span class="params">(Object message)</span></span>&#123;</span><br><span class="line">        String msg = RedisService.Bean2String(message);</span><br><span class="line">        logger.info(<span class="string">"send fanout message: "</span> + msg);</span><br><span class="line">        amqpTemplate.convertAndSend(MQConfig.FANOUT_EXCHANGE,<span class="string">""</span>,msg+<span class="string">"1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Header模式 交换机Exchange</span></span><br><span class="line"><span class="comment">     *"header1","value1"要与队列初始化的时候一样</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendHeaders</span><span class="params">(Object message)</span></span>&#123;</span><br><span class="line">        String msg = RedisService.Bean2String(message);</span><br><span class="line">        logger.info(<span class="string">"send headers message: "</span> + msg);</span><br><span class="line">        MessageProperties properties = <span class="keyword">new</span> MessageProperties();</span><br><span class="line">        properties.setHeader(<span class="string">"header1"</span>,<span class="string">"value1"</span>);</span><br><span class="line">        properties.setHeader(<span class="string">"header2"</span>,<span class="string">"value2"</span>);</span><br><span class="line">        Message obj = <span class="keyword">new</span> Message(msg.getBytes(),properties);</span><br><span class="line">        amqpTemplate.convertAndSend(MQConfig.HEADERS_EXCHANGE,<span class="string">""</span>,obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(3)消息接收</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.SecKill.rabbitmq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> WilsonSong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/8</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MQReceiver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(MQReceiver.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Direct 交换机模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = MQConfig.QUEUE)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        logger.info(<span class="string">"receive message"</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Topic 交换机模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = MQConfig.TOPIC_QUEUE1)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiveTopic1</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        logger.info(<span class="string">"receive topic queue1 message: "</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = MQConfig.TOPIC_QUEUE2)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiveTopic2</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        logger.info(<span class="string">"receive topic queue2 message: "</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Fanout模式 交换机Exchange</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = MQConfig.FANOUT_QUEUE1)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiveFanout1</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        logger.info(<span class="string">"receive fanout queue1 message: "</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = MQConfig.FANOUT_QUEUE2)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiveFanout2</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        logger.info(<span class="string">"receive fanout queue2 message: "</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Header模式 交换机Exchange</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queues = MQConfig.HEADERS_QUEUE)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiveFanout2</span><span class="params">(<span class="keyword">byte</span>[] message)</span></span>&#123;</span><br><span class="line">        logger.info(<span class="string">"receive headers queue message: "</span> + <span class="keyword">new</span> String(message));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 启动程序，报错了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Caused by: com.rabbitmq.client.AuthenticationFailureException: ACCESS_REFUSED - Login was refused <span class="keyword">using</span> authentication mechanism PLAIN. For details see the broker logfile.</span><br></pre></td></tr></table></figure><p>其实就是拒绝我们访问啊，因为我们定义的时候就是默认的用户名和密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spring.rabbitmq.username=guest</span><br><span class="line">spring.rabbitmq.password=guest</span><br></pre></td></tr></table></figure><p>为什么默认的是这俩？</p><p>看一下rabbitMQ的变量定义就知道了:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Login user to authenticate to the broker.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String username = <span class="string">"guest"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Login to authenticate against the broker.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String password = <span class="string">"guest"</span>;</span><br></pre></td></tr></table></figure><p>怎么改呢？</p><p>官网这么说的</p><p> “guest” user can only connect via localhost</p><p>By default, the guest user is prohibited from connecting to the broker remotely; it can only connect over a loopback interface (i.e. localhost). This applies both to AMQP 0-9-1 and to any other protocols enabled via plugins. Any other users you create will not (by default) be restricted in this way.</p><p>The recommended way to address this in production systems is to create a new user or set of users with the permissions to access the necessary virtual hosts. This can be done using CLI tools, HTTP API or definitions import.</p><p>This is configured via the loopback_users item in the configuration file.</p><p>If you wish to allow the guest user to connect from a remote host, you should set the loopback_users configuration to none. A complete RabbitMQ config file which does this would look like:</p><p><code>loopback_users = none</code></p><p>Or, in the classic config file format (rabbitmq.config):</p><p><code>[{rabbit, [{loopback_users, []}]}].</code></p><p>其实第二种就是在usr/local/rabbitmq/etc/rabbitmq下新建rabbitmq.config文件，添加</p><p><code>[{rabbit, [{loopback_users, []}]}].</code></p><p>重启rabbitmq在运行程序就可以了</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SpringBoot之安装RabbitMQ（踩坑）及RabbitMQ原理和使用详解&quot;&gt;&lt;a href=&quot;#SpringBoot之安装RabbitMQ（踩坑）及RabbitMQ原理和使用详解&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot之安装RabbitMQ（踩坑）及RabbitMQ原理和使用详解&quot;&gt;&lt;/a&gt;SpringBoot之安装RabbitMQ（踩坑）及RabbitMQ原理和使用详解&lt;/h1&gt;&lt;h2 id=&quot;安装RabbitMQ&quot;&gt;&lt;a href=&quot;#安装RabbitMQ&quot; class=&quot;headerlink&quot; title=&quot;安装RabbitMQ&quot;&gt;&lt;/a&gt;安装RabbitMQ&lt;/h2&gt;&lt;p&gt;安装环境centos7 + &lt;a href=&quot;http://www.rabbitmq.com/news.html#2018-07-05T17:00:00+00:00&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RabbitMQ 3.7.7 &lt;/a&gt;  + &lt;a href=&quot;http://erlang.org/download/otp_src_21.0.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OTP 21.0 Source File&lt;/a&gt; &lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://yoursite.com/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="RabbitMQ" scheme="http://yoursite.com/tags/RabbitMQ/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot2踩坑之SpringWebContext方法过时</title>
    <link href="http://yoursite.com/2018/08/05/SpringWebContext/"/>
    <id>http://yoursite.com/2018/08/05/SpringWebContext/</id>
    <published>2018-08-05T00:56:48.000Z</published>
    <updated>2018-08-16T12:13:18.496Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringWebContext方法过时"><a href="#SpringWebContext方法过时" class="headerlink" title="SpringWebContext方法过时"></a>SpringWebContext方法过时</h1><p>今天在做项目的时候，为了优化访问速度，应对高并发，想把页面信息全部获取出来存到redis缓存中，这样每次访问就不用客户端进行渲染了，速度能快不少。</p><p>想用<code>thymeleafViewResolver.getTemplateEngine().process(&quot;goodslist.html&quot;,ctx);</code>函数实现，里面有一个ctx参数，这个参数就是WebContext</p><p>然后定义这个变量 <code>SpringWebContext ctx = new SpringWebContext（......）</code></p><a id="more"></a><p>哎，这个方法在SpringBoot1.X的时候还能有，在org.thymeleaf.spring4.context这个package下，在、SpringBoot2.X +thymeleaf3.0.9 中没有，想去找一下用什么来代替，直接去org.thymeleaf.spring4下面去找，没找到相同类型的，然后取找thymeleaf.spring5的API，还找不到，只能找到thymeleaf.spring4的API,。想想还要用，怎么办啊，总不能把版本切换了吧，那有些别的说不定也得改，自己写吧，自力更生艰苦奋斗。</p><p>找了之前的一个项目，然后找到了那里面的SpringWebContext是怎么写的，超过来就完了，</p><p>但是不行SpringWebContext继承的是org.thymeleaf.context下的WebContext方法，在SpringBoot2.0+thymeleaf3.0.9中定义成final类型的，不能继承，想想要不把库的代码改了，还是算了，再往上找，找到这个<code>WebContext extends AbstractContext implements IWebContext</code>，没有final，所以一层一层的找到之后，按照他的源码改了一下，自己重写了SpringWebContext方法，如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.SecKill.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.thymeleaf.context.AbstractContext;</span><br><span class="line"><span class="keyword">import</span> org.thymeleaf.context.IWebContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> WilsonSong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/5</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringWebContextUtil</span>  <span class="keyword">extends</span> <span class="title">AbstractContext</span> <span class="keyword">implements</span> <span class="title">IWebContext</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> HttpServletRequest request;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> HttpServletResponse response;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ServletContext servletContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String BEANS_VARIABLE_NAME = <span class="string">"beans"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ConcurrentHashMap&lt;ApplicationContext, HashMap&lt;String, Object&gt;&gt; variableMapPrototypes = <span class="keyword">new</span> ConcurrentHashMap();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SpringWebContextUtil</span><span class="params">(<span class="keyword">final</span> HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">final</span> HttpServletResponse response,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">final</span> ServletContext servletContext,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">final</span> Locale locale,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">final</span> Map&lt;String, Object&gt; variables,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">final</span> ApplicationContext appctx)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(locale,addSpringSpecificVariables(variables, appctx));</span><br><span class="line">        <span class="keyword">this</span>.request = request;</span><br><span class="line">        <span class="keyword">this</span>.response = response;</span><br><span class="line">        <span class="keyword">this</span>.servletContext = servletContext;</span><br><span class="line">        <span class="keyword">this</span>.applicationContext = appctx;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title">addSpringSpecificVariables</span><span class="params">(Map&lt;String, ?&gt; variables, ApplicationContext appctx)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;String, Object&gt; variableMapPrototype = (HashMap)variableMapPrototypes.get(appctx);</span><br><span class="line">        <span class="keyword">if</span> (variableMapPrototype == <span class="keyword">null</span>) &#123;</span><br><span class="line">            variableMapPrototype = <span class="keyword">new</span> HashMap(<span class="number">20</span>, <span class="number">1.0F</span>);</span><br><span class="line">            ContexBeans beans = <span class="keyword">new</span> ContexBeans(appctx);</span><br><span class="line">            variableMapPrototype.put(<span class="string">"beans"</span>, beans);</span><br><span class="line">            variableMapPrototypes.put(appctx, variableMapPrototype);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Map newVariables;</span><br><span class="line">        <span class="keyword">synchronized</span>(variableMapPrototype) &#123;</span><br><span class="line">            newVariables = (Map)variableMapPrototype.clone();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (variables != <span class="keyword">null</span>) &#123;</span><br><span class="line">            newVariables.putAll(variables);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> newVariables;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ApplicationContext <span class="title">getApplicationContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HttpServletRequest <span class="title">getRequest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.request;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HttpSession <span class="title">getSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.request.getSession(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HttpServletResponse <span class="title">getResponse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.response;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletContext <span class="title">getServletContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.servletContext;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的ContexBeans是自己定义的，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">package com.springboot.SecKill.util;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author WilsonSong</span><br><span class="line"> * @date 2018/8/5</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.Collection;</span><br><span class="line">import java.util.LinkedHashSet;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import java.util.Set;</span><br><span class="line">import java.util.Map.Entry;</span><br><span class="line">import org.springframework.context.ApplicationContext;</span><br><span class="line">import org.thymeleaf.util.Validate;</span><br><span class="line">public class ContexBeans implements Map&lt;String, Object&gt; &#123;</span><br><span class="line">    private final ApplicationContext ctx;</span><br><span class="line"></span><br><span class="line">    public ContexBeans(ApplicationContext ctx) &#123;</span><br><span class="line">        Validate.notNull(ctx, &quot;Application Context cannot be null&quot;);</span><br><span class="line">        this.ctx = ctx;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public boolean containsKey(Object key) &#123;</span><br><span class="line">        Validate.notNull(key, &quot;Key cannot be null&quot;);</span><br><span class="line">        return this.ctx.containsBean(key.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Object get(Object key) &#123;</span><br><span class="line">        Validate.notNull(key, &quot;Key cannot be null&quot;);</span><br><span class="line">        return this.ctx.getBean(key.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Set&lt;String&gt; keySet() &#123;</span><br><span class="line">        return new LinkedHashSet(Arrays.asList(this.ctx.getBeanDefinitionNames()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int size() &#123;</span><br><span class="line">        return this.ctx.getBeanDefinitionCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public boolean isEmpty() &#123;</span><br><span class="line">        return this.ctx.getBeanDefinitionCount() &lt;= 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public boolean containsValue(Object value) &#123;</span><br><span class="line">        throw new UnsupportedOperationException(&quot;Method \&quot;containsValue\&quot; not supported in Beans object&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Object put(String key, Object value) &#123;</span><br><span class="line">        throw new UnsupportedOperationException(&quot;Method \&quot;put\&quot; not supported in Beans object&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void putAll(Map&lt;? extends String, ?&gt; m) &#123;</span><br><span class="line">        throw new UnsupportedOperationException(&quot;Method \&quot;putAll\&quot; not supported in Beans object&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Object remove(Object key) &#123;</span><br><span class="line">        throw new UnsupportedOperationException(&quot;Method \&quot;remove\&quot; not supported in Beans object&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void clear() &#123;</span><br><span class="line">        throw new UnsupportedOperationException(&quot;Method \&quot;clear\&quot; not supported in Beans object&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Collection&lt;Object&gt; values() &#123;</span><br><span class="line">        throw new UnsupportedOperationException(&quot;Method \&quot;values\&quot; not supported in Beans object&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Set&lt;Entry&lt;String, Object&gt;&gt; entrySet() &#123;</span><br><span class="line">        throw new UnsupportedOperationException(&quot;Method \&quot;entrySet\&quot; not supported in Beans object&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就能用了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SpringWebContext方法过时&quot;&gt;&lt;a href=&quot;#SpringWebContext方法过时&quot; class=&quot;headerlink&quot; title=&quot;SpringWebContext方法过时&quot;&gt;&lt;/a&gt;SpringWebContext方法过时&lt;/h1&gt;&lt;p&gt;今天在做项目的时候，为了优化访问速度，应对高并发，想把页面信息全部获取出来存到redis缓存中，这样每次访问就不用客户端进行渲染了，速度能快不少。&lt;/p&gt;
&lt;p&gt;想用&lt;code&gt;thymeleafViewResolver.getTemplateEngine().process(&amp;quot;goodslist.html&amp;quot;,ctx);&lt;/code&gt;函数实现，里面有一个ctx参数，这个参数就是WebContext&lt;/p&gt;
&lt;p&gt;然后定义这个变量 &lt;code&gt;SpringWebContext ctx = new SpringWebContext（......）&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://yoursite.com/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="踩坑" scheme="http://yoursite.com/tags/%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot2之秒杀页面优化及解决超卖问题</title>
    <link href="http://yoursite.com/2018/08/05/SecKillPageOptimise/"/>
    <id>http://yoursite.com/2018/08/05/SecKillPageOptimise/</id>
    <published>2018-08-05T00:56:48.000Z</published>
    <updated>2018-08-16T12:13:35.568Z</updated>
    
    <content type="html"><![CDATA[<h2 id="页面缓存-URL缓存-对象缓存"><a href="#页面缓存-URL缓存-对象缓存" class="headerlink" title="页面缓存+URL缓存+对象缓存"></a>页面缓存+URL缓存+对象缓存</h2><h3 id="页面缓存"><a href="#页面缓存" class="headerlink" title="页面缓存"></a>页面缓存</h3><p>其实系统访问某个页面的时候，并不是直接使用系统渲染，而是先从缓存中获取找到数据之后就然后返回给客户端，要是没有找到就手动渲染这个模板，渲染完成之后再把数据返回给客户端，同时把数据缓存到redis中。</p><p>其实流程很简单：（1）取缓存  （2）手动渲染模板  （3）结果输出</p><p>关于手动渲染，官方的介绍是这么说的;</p><a id="more"></a><p>If you use Thymeleaf, you also have a <code>ThymeleafViewResolver</code> named ‘thymeleafViewResolver’. It looks for resources by surrounding the view name with a prefix and suffix. The prefix is <code>spring.thymeleaf.prefix</code>, and the suffix is <code>spring.thymeleaf.suffix</code>. The values of the prefix and suffix default to ‘classpath:/templates/’ and ‘.html’, respectively. You can override <code>ThymeleafViewResolver</code> by providing a bean of the same name.</p><p>就是 Thymeleaf,的模板引擎的时候需要用<code>ThymeleafViewResolver</code>来实现资源的渲染，用的时候注入就可以了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/商品列表页 不返回页面，直接返回HTML的代码</span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/to_list"</span>, produces = <span class="string">"text/html"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">list</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Model model, SecKillUser user)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">        <span class="comment">//查询商品列表</span></span><br><span class="line">        List&lt;GoodsVo&gt; goodsList = goodsService.listGoodsVo();</span><br><span class="line">        model.addAttribute(<span class="string">"goodsList"</span>, goodsList);</span><br><span class="line">        <span class="comment">//取缓存</span></span><br><span class="line">        String html = redisService.get(GoodsKey.getGoodsList,<span class="string">""</span>,String.class);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(html))&#123;</span><br><span class="line">            <span class="keyword">return</span> html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//缓存中没有数据的时候手动渲染</span></span><br><span class="line">        SpringWebContextUtil ctx  = <span class="keyword">new</span> SpringWebContextUtil(request, response, request.getServletContext(),request.getLocale(),model.asMap(),applicationContext);</span><br><span class="line">        html = thymeleafViewResolver.getTemplateEngine().process(<span class="string">"goodslist.html"</span>,ctx);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(html))&#123;</span><br><span class="line">            redisService.set(GoodsKey.getGoodsList,<span class="string">""</span>,html);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> html;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里还踩到一个小坑，取页面信息的SpringWebContext在org.thymeleaf.spring5.context这个包下面已经没有了，被删除了;在org.thymeleaf.spring4.context下面是有的，自己重写了SpringWebContext这个类。为什么非要要重写，我单独写篇博客写一下，更清晰一些。</p><h2 id="URL缓存"><a href="#URL缓存" class="headerlink" title="URL缓存"></a>URL缓存</h2><p>其实说是URL缓存，真的是有点不太准确哈，其实和页面缓存是一样的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/to_detail/&#123;goodsId&#125;"</span>, produces = <span class="string">"text/html"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">detail</span><span class="params">(HttpServletRequest request, HttpServletResponse response,Model model, SecKillUser user, @PathVariable(<span class="string">"goodsId"</span>)</span> <span class="keyword">long</span> goodsId)</span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"user"</span>,user);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//取缓存</span></span><br><span class="line">        String html = redisService.get(GoodsKey.getGoodsDetail,<span class="string">""</span>+goodsId,String.class);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(html))&#123;</span><br><span class="line">            <span class="keyword">return</span> html;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//手动渲染</span></span><br><span class="line"></span><br><span class="line">       GoodsVo goods = goodsService.getGoodsVoByGoodsId(goodsId);</span><br><span class="line">       model.addAttribute(<span class="string">"goods"</span>,goods);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//秒杀的详细信息</span></span><br><span class="line">        <span class="keyword">long</span> startAt = goods.getStartDate().getTime();</span><br><span class="line">        <span class="keyword">long</span> endAt = goods.getEndDate().getTime();</span><br><span class="line">        <span class="keyword">long</span> now = System.currentTimeMillis(); <span class="comment">//当前的时间</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> SecKillStatus = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> remainSeconds = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (now &lt; startAt)&#123;  <span class="comment">//秒杀未开始</span></span><br><span class="line">            SecKillStatus = <span class="number">0</span>;</span><br><span class="line">            remainSeconds = (<span class="keyword">int</span>)((startAt - now)/<span class="number">1000</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (now &gt; endAt)&#123;  <span class="comment">//秒杀结束</span></span><br><span class="line">            SecKillStatus = <span class="number">2</span>;</span><br><span class="line">            remainSeconds = -<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            SecKillStatus = <span class="number">1</span>;</span><br><span class="line">            remainSeconds = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        model.addAttribute(<span class="string">"miaoshaStatus"</span>,SecKillStatus);</span><br><span class="line">        model.addAttribute(<span class="string">"remainSeconds"</span>,remainSeconds);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//缓存中没有数据的时候手动渲染</span></span><br><span class="line">        SpringWebContextUtil ctx  = <span class="keyword">new</span> SpringWebContextUtil(request, response, request.getServletContext(),</span><br><span class="line">                                                             request.getLocale(),model.asMap(),applicationContext);</span><br><span class="line">        html = thymeleafViewResolver.getTemplateEngine().process(<span class="string">"goods_detail.html"</span>,ctx);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(html))&#123;</span><br><span class="line">            redisService.set(GoodsKey.getGoodsDetail,<span class="string">""</span>+goodsId ,html);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对象缓存"><a href="#对象缓存" class="headerlink" title="对象缓存"></a>对象缓存</h2><p>对象缓存其实就是把缓存数据和对象放在缓存中，这样每次访问的时候从缓存中读取就可以了，就相应的减少了读取数据库的次数，从而提高了网站访问的速度 。</p><p>上面的页面缓存是设置有有效期的，因为页面信息可能随时会变，一直在缓存中中就页面的信息每次读出来就不一样了，但是对象就不一样了，这个不设置有效期，或者把有效期设置的很长。</p><p>这里做个简单的例子，把做秒杀商品的用户对象放在内存中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> SecKillUser  <span class="title">getUserById</span><span class="params">(<span class="keyword">long</span> id)</span></span>&#123;</span><br><span class="line">        <span class="comment">//取缓存</span></span><br><span class="line">        SecKillUser user = redisService.get(SecKillUserKey.getById,<span class="string">""</span>+id, SecKillUser.class);</span><br><span class="line">        <span class="keyword">if</span> (user !=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> user;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//缓存中没有从数据库中取出来放入缓存中</span></span><br><span class="line">        user = secKillUserDao.getUserById(id);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>)&#123;</span><br><span class="line">            redisService.set(SecKillUserKey.getById,<span class="string">""</span>+id, user);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>因为设置缓存中的对象数据永不过期，那有人更新了自己的密码或者用户名或者其他的信息怎么办，缓存也要随着更新,要不然就缓存数据不一致了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">updatePassword</span><span class="params">(String token,<span class="keyword">long</span> id, String formPasswordNew)</span></span>&#123;</span><br><span class="line">        SecKillUser user = getUserById(id);</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span>  <span class="keyword">new</span> GlobalException(CodeMsg.MOBILE_NOT_EXITS);</span><br><span class="line">        &#125;</span><br><span class="line">        SecKillUser user2Update = <span class="keyword">new</span> SecKillUser();</span><br><span class="line">        user2Update.setId(id);</span><br><span class="line">        user2Update.setPassword(MD5Util.fromPass2DBPass(formPasswordNew,user.getSalt()));</span><br><span class="line">        secKillUserDao.update(user2Update);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//修改缓存</span></span><br><span class="line">        redisService.delete(SecKillUserKey.getById,<span class="string">""</span>+id);</span><br><span class="line">        <span class="comment">//更新缓存中的token</span></span><br><span class="line">        user.setPassword(user2Update.getPassword());</span><br><span class="line">        redisService.set(SecKillUserKey.token,token, user);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>做了部分优化，测试一下，测试的Linux服务器为1g+4核。</p><p>没有优化之前</p><p><img src="/2018/08/05/SecKillPageOptimise/1533475002.png" alt="1533475002(1)"></p><p>优化之后</p><p><img src="/2018/08/05/SecKillPageOptimise/1533475274543.png" alt="1533475274543"></p><p>可以看到并发已经上去了，QPS从1267上升到2218了。</p><h2 id="页面静态优化-前后端分离"><a href="#页面静态优化-前后端分离" class="headerlink" title="页面静态优化 前后端分离"></a>页面静态优化 前后端分离</h2><p>先想一下我们在平常的开发中前后端交互的流程：其实服务端为动态页面作用很单一就是提供了网站需要展示的数据而已，服务端是不会创造一个新页面的。服务端提供的数据的类型也是很统一，要不就是服务端语言提供的基本数据类型例如：字符、数字、日期等等，要不就是复杂点的数据类型例如数组、列表、键值对等等，不过归属服务端的动态页面还需要服务端语言帮助做一件事情，那就是把服务端提供的数据整合到页面里，最终产生一个浏览器可以解析的html网页，这个操作无非就是使用服务端语言可以构造文件的能力构建一个符合要求的html文件而已。不过一个页面里需要动态变化的往往只是其中一部分，所以做服务端的动态页面开发时候我们可以直接写html代码，这些html代码就等于在构造页面展示的模板而已，而模板的空白处则是使用服务端数据填充，因此在java的web开发里视图层技术延生出了Thymeleaf，freemark这样的技术，我们将其称之为模板语言的由来。</p><p>由此可见，服务端MVC框架里抢夺的web前端的工作就是抢占了构建html模板的工作，那么我们在设计web前端的MVC框架时候对于和服务端对接这块只需要让服务端保持提供数据的特性即可。从这些论述里我们发现了，其实前端MVC框架要解决的核心问题应该有这两个,它们分别是：</p><p><strong>核心问题一：让模板技术交由浏览器来做，让服务端只提供单纯的数据服务。</strong></p><p><strong>核心问题二：模板技术交由浏览器来承担，那么页面的动态性体现也就是根据不同的服务端数据进行页面部分刷新来完成的。</strong></p><p>而这两个核心问题解决办法那就是使用ajax技术，ajax技术天生就符合解决这些问题的技术手段了。</p><p>简答来讲就是其实就是将页面缓存到客户的浏览器上，当用户访问页面的时候，仅从与服务器取数据，从本地缓存中取页面，节省网络流量。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//商品详情页</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value=<span class="string">"/detail/&#123;goodsId&#125;"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;GoodsDetailVo&gt; <span class="title">detail</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Model model, SecKillUser user, @PathVariable(<span class="string">"goodsId"</span>)</span> <span class="keyword">long</span> goodsId)</span>&#123;</span><br><span class="line">        GoodsVo goods = goodsService.getGoodsVoByGoodsId(goodsId);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//秒杀的详细信息</span></span><br><span class="line">        <span class="keyword">long</span> startAt = goods.getStartDate().getTime();</span><br><span class="line">        <span class="keyword">long</span> endAt = goods.getEndDate().getTime();</span><br><span class="line">        <span class="keyword">long</span> now = System.currentTimeMillis(); <span class="comment">//当前的时间</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> secKillStatus = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> remainSeconds = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (now &lt; startAt)&#123;  <span class="comment">//秒杀未开始</span></span><br><span class="line">            secKillStatus = <span class="number">0</span>;</span><br><span class="line">            remainSeconds = (<span class="keyword">int</span>)((startAt - now)/<span class="number">1000</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (now &gt; endAt)&#123;  <span class="comment">//秒杀结束</span></span><br><span class="line">            secKillStatus = <span class="number">2</span>;</span><br><span class="line">            remainSeconds = -<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            secKillStatus = <span class="number">1</span>;</span><br><span class="line">            remainSeconds = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        GoodsDetailVo vo = <span class="keyword">new</span> GoodsDetailVo();</span><br><span class="line">        vo.setRemainSeconds(remainSeconds);</span><br><span class="line">        vo.setSecKillStatus(secKillStatus);</span><br><span class="line">        vo.setGoods(goods);</span><br><span class="line">        vo.setUser(user);</span><br><span class="line">        <span class="keyword">return</span> Result.success(vo);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>之前我们是把数据通过model.addAttributes()传递给页面的，然后返回的是HTML页面，这里直接就是@ResponseBody，返回的是页面上需要的一些数据，不需要整合把数据整合到页面中。</p><p>对应的前端HTML的代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>商品详情<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jquery --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./js/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"./bootstrap/css/bootstrap.min.css"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./bootstrap/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jquery-validator --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./jquery-validation/jquery.validate.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./jquery-validation/localization/messages_zh.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- layer --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./layer/layer.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- md5.js --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./js/md5.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- common.js --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./js/common.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-default"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span>秒杀商品详情<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"userTip"</span>&gt;</span> 您还没有登录，请登陆后再操作<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>没有收货地址的提示。。。<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table"</span> <span class="attr">id</span>=<span class="string">"goodslist"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>商品名称<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span> <span class="attr">id</span>=<span class="string">"goodsName"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>商品图片<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span>  <span class="attr">id</span>=<span class="string">"goodsImg"</span> <span class="attr">width</span>=<span class="string">"200"</span> <span class="attr">height</span>=<span class="string">"200"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>秒杀开始时间<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"startTime"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">id</span>=<span class="string">"remainSeconds"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"miaoshaTip"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-block"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"buyButton"</span><span class="attr">onclick</span>=<span class="string">"doMiaosha()"</span>&gt;</span>立即秒杀<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"goodsId"</span>  <span class="attr">id</span>=<span class="string">"goodsId"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>商品原价<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span> <span class="attr">id</span>=<span class="string">"goodsPrice"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>秒杀价<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>  <span class="attr">id</span>=<span class="string">"miaoshaPrice"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>库存数量<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>  <span class="attr">id</span>=<span class="string">"stockCount"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">doMiaosha</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">$.ajax(&#123;</span></span><br><span class="line"><span class="javascript">url:<span class="string">"/miaosha/do_miaosha"</span>,</span></span><br><span class="line"><span class="javascript">type:<span class="string">"POST"</span>,</span></span><br><span class="line"><span class="undefined">data:&#123;</span></span><br><span class="line"><span class="javascript">goodsId:$(<span class="string">"#goodsId"</span>).val(),</span></span><br><span class="line"><span class="undefined">&#125;,</span></span><br><span class="line"><span class="javascript">success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(data.code == <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.location.href=<span class="string">"/order_detail.htm?orderId="</span>+data.data.id;</span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="undefined">layer.msg(data.msg);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;,</span></span><br><span class="line"><span class="javascript">error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">layer.msg(<span class="string">"客户端请求有误"</span>);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params">detail</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> miaoshaStatus = detail.secKillStatus;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span>  remainSeconds = detail.remainSeconds;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> goods = detail.goods;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> user = detail.user;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(user)&#123;</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#userTip"</span>).hide();</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#goodsName"</span>).text(goods.goodsName);</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#goodsImg"</span>).attr(<span class="string">"src"</span>, goods.goodsImg);</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#startTime"</span>).text(<span class="keyword">new</span> <span class="built_in">Date</span>(goods.startDate).format(<span class="string">"yyyy-MM-dd hh:mm:ss"</span>));</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#remainSeconds"</span>).val(remainSeconds);</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#goodsId"</span>).val(goods.id);</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#goodsPrice"</span>).text(goods.goodsPrice);</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#miaoshaPrice"</span>).text(goods.miaoshaPrice);</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#stockCount"</span>).text(goods.stockCount);</span></span><br><span class="line"><span class="undefined">countDown();</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//countDown();</span></span></span><br><span class="line"><span class="undefined">getDetail();</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">getDetail</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> goodsId = g_getQueryString(<span class="string">"goodsId"</span>);</span></span><br><span class="line"><span class="javascript">$.ajax(&#123;</span></span><br><span class="line"><span class="javascript">url:<span class="string">"/goods/detail/"</span>+goodsId,</span></span><br><span class="line"><span class="javascript">type:<span class="string">"GET"</span>,</span></span><br><span class="line"><span class="javascript">success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(data.code == <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="undefined">render(data.data);</span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="undefined">layer.msg(data.msg);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;,</span></span><br><span class="line"><span class="javascript">error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">layer.msg(<span class="string">"客户端请求有误"</span>);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">countDown</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> remainSeconds = $(<span class="string">"#remainSeconds"</span>).val();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> timeout;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(remainSeconds &gt; <span class="number">0</span>)&#123;<span class="comment">//秒杀还没开始，倒计时</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">"#buyButton"</span>).attr(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">   $(<span class="string">"#miaoshaTip"</span>).html(<span class="string">"秒杀倒计时："</span>+remainSeconds+<span class="string">"秒"</span>);</span></span><br><span class="line"><span class="javascript">timeout = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#countDown"</span>).text(remainSeconds - <span class="number">1</span>);</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#remainSeconds"</span>).val(remainSeconds - <span class="number">1</span>);</span></span><br><span class="line"><span class="undefined">countDown();</span></span><br><span class="line"><span class="undefined">&#125;,1000);</span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(remainSeconds == <span class="number">0</span>)&#123;<span class="comment">//秒杀进行中</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">"#buyButton"</span>).attr(<span class="string">"disabled"</span>, <span class="literal">false</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(timeout)&#123;</span></span><br><span class="line"><span class="undefined">clearTimeout(timeout);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#miaoshaTip"</span>).html(<span class="string">"秒杀进行中"</span>);</span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span>&#123;<span class="comment">//秒杀已经结束</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">"#buyButton"</span>).attr(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">$(<span class="string">"#miaoshaTip"</span>).html(<span class="string">"秒杀已经结束"</span>);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到这里把html中的原来的依赖于Thymeleaf的部分全部重写，直接从浏览器的缓存中取数据，填充页面。其实还需要做一个配置，就是把application.properties中添加上spring对于静态资源的配置，就是SPRING  RESOURCES HANDLING的配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#static</span><br><span class="line">spring.resources.add-mappings=true</span><br><span class="line">spring.resources.chain.cache=true</span><br><span class="line">spring.resources.cache.period=3600</span><br><span class="line">spring.resources.chain.enabled=true</span><br><span class="line">spring.resources.chain.gzipped=true</span><br><span class="line">spring.resources.chain.html-application-cache=true</span><br><span class="line">spring.resources.static-locations=classpath:/static/</span><br></pre></td></tr></table></figure><p>这样就完成了前后端的分离。</p><h2 id="静态资源优化"><a href="#静态资源优化" class="headerlink" title="静态资源优化"></a>静态资源优化</h2><p><strong>代码压缩</strong> </p><p>最常规的优化手段之一。<br>    我们在平时开发的时候，JS脚本文件和CSS样式文件中的代码，都会依据一定的代码规范（比如javascript-standard-style）来提高项目的可维护性，以及团队之间合作的效率。<br>    但是在项目发布现网后， 这些代码是给客户端（浏览器）识别的，此时代码的命名规范、空格缩进都已没有必要，我们可以使用工具将这些代码进行混淆和压缩，减少静态文件的大小</p><p><strong>文件合并</strong></p><p>在npm流行的今天，前端在进行项目开发的时候，往往会使用很多第三方代码库，比如jQuery，axios，weixin-js-sdk，lodash，bootstrap等等，每个库都有属于自己的脚本或者样式文件。<br>    按照最老的方式的话，我们会用一些标签分别引入这些库文件，导致在打开一个页面的时候会发起几十个请求，这对于移动端来说是不可接受的。<br>在减少文件请求数量方面大致有以下三方面：<br>1、合并js脚本文件<br>2、合并css样式文件<br>3、合并css引用的图片，使用sprite雪碧图。</p><p><strong>GZip</strong></p><p>开启GZip，精简JavaScript，移除重复脚本，图像优化</p><p><strong>CDN优化</strong></p><p>  简介：CDN（内容发布网络）,是一个加速用户获取数据的系统；既可以是静态资源，又可以是动态资源，这取决于我们的决策策略。经常大部分视频加速都依赖于CDN，比如优酷，爱奇艺等，据此加速；</p><p>原理：CDN部署在距离用户最近的网络节点上，用户上网的时候通过网络运营商（电信，长城等）访问距离用户最近的要给城域网网络地址节点上，然后通过城域网跳到主干网上，主干网则根据访问IP找到访问资源所在服务器，但是，很大一部分内容在上一层节点已经找到，此时不用往下继续查找，直接返回所访问的资源即可，减小了服务器的负担。一般互联网公司都会建立自己的CDN机群或者租用CDN。</p><p>这些就了解下原理，毕竟大部分是前端的。</p><p>关于这个还找到了一篇博客啊，仅供参考。</p><p><a href="https://blog.csdn.net/zhangjs712/article/details/51166748" target="_blank" rel="noopener">https://blog.csdn.net/zhangjs712/article/details/51166748</a></p><h1 id="超卖问题"><a href="#超卖问题" class="headerlink" title="超卖问题"></a>超卖问题</h1><h4 id="超发的原因"><a href="#超发的原因" class="headerlink" title="超发的原因"></a>超发的原因</h4><p>假设某个抢购场景中，我们一共只有100个商品，在最后一刻，我们已经消耗了99个商品，仅剩最后一个。这个时候，系统发来多个并发请求，这批请求读取到的商品余量都是99个，然后都通过了这一个余量判断，最终导致超发。（同文章前面说的场景）</p><p><img src="/2018/08/05/SecKillPageOptimise/22492T335.png" alt="img"></p><p>在上面的这个图中，就导致了并发用户B也“抢购成功”，多让一个人获得了商品。这种场景，在高并发的情况下非常容易出现。</p><p><strong>1.数据库唯一索引</strong></p><p>就是分表，秒杀的订单和正常的订单是两张表，在数据库中建立用户id和商品id的唯一索引，防止用户插入重复的记录。</p><p><strong>2. 悲观锁思路</strong></p><p>解决线程安全的思路很多，可以从“悲观锁”的方向开始讨论。</p><p>悲观锁，也就是在修改数据的时候，采用锁定状态，排斥外部请求的修改。遇到加锁的状态，就必须等待。</p><p><img src="/2018/08/05/SecKillPageOptimise/22492R5A.png" alt="img"></p><p>虽然上述的方案的确解决了线程安全的问题，但是，别忘记，我们的场景是“高并发”。也就是说，会很多这样的修改请求，每个请求都需要等待“锁”，某些线程可能永远都没有机会抢到这个“锁”，这种请求就会死在那里。同时，这种请求会很多，瞬间增大系统的平均响应时间，结果是可用连接数被耗尽，系统陷入异常。</p><p><strong>3. FIFO队列思路</strong></p><p>那好，那么我们稍微修改一下上面的场景，我们直接将请求放入队列中的，采用FIFO（First Input First Output，先进先出），这样的话，我们就不会导致某些请求永远获取不到锁。看到这里，是不是有点强行将多线程变成单线程的感觉哈。</p><p><img src="/2018/08/05/SecKillPageOptimise/22492WV1.png" alt="img"></p><p>然后，我们现在解决了锁的问题，全部请求采用“先进先出”的队列方式来处理。那么新的问题来了，高并发的场景下，因为请求很多，很可能一瞬间将队列内存“撑爆”，然后系统又陷入到了异常状态。或者设计一个极大的内存队列，也是一种方案，但是，系统处理完一个队列内请求的速度根本无法和疯狂涌入队列中的数目相比。也就是说，队列内的请求会越积累越多，最终Web系统平均响应时候还是会大幅下降，系统还是陷入异常。</p><p><strong>4. 乐观锁思路</strong></p><p> 这个时候，我们就可以讨论一下“乐观锁”的思路了。乐观锁，是相对于“悲观锁”采用更为宽松的加锁机制，大都是采用带版本号（Version）更新。实现就是，这个数据所有请求都有资格去修改，但会获得一个该数据的版本号，只有版本号符合的才能更新成功，其他的返回抢购失败。这样的话，我们就不需要考虑队列的问题，不过，它会增大CPU的计算开销。但是，综合来说，这是一个比较好的解决方案。</p><p><img src="/2018/08/05/SecKillPageOptimise/22492Q463.png" alt="img"></p><p>有很多软件和服务都“乐观锁”功能的支持，例如Redis中的watch就是其中之一。通过这个实现，我们保证了数据的安全。</p><p>就是采用计数器的方式，用一个集合，存放每个商品以及其对应的数量，如果只是单纯的decr函数或者是incr函数，不能解决秒杀这种问题。因为有可能在并发的情况下，两个请求取到的数都是0，然后都加1，结果为1，实际上应该是2。那么这个时候建议利用乐观锁，实现自己的decr函数。</p><p>乐观锁的机制如同版本控制，如果修改的时候，要修改的value在redis中的值已经跟取出来时不一样，则修改失败。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;页面缓存-URL缓存-对象缓存&quot;&gt;&lt;a href=&quot;#页面缓存-URL缓存-对象缓存&quot; class=&quot;headerlink&quot; title=&quot;页面缓存+URL缓存+对象缓存&quot;&gt;&lt;/a&gt;页面缓存+URL缓存+对象缓存&lt;/h2&gt;&lt;h3 id=&quot;页面缓存&quot;&gt;&lt;a href=&quot;#页面缓存&quot; class=&quot;headerlink&quot; title=&quot;页面缓存&quot;&gt;&lt;/a&gt;页面缓存&lt;/h3&gt;&lt;p&gt;其实系统访问某个页面的时候，并不是直接使用系统渲染，而是先从缓存中获取找到数据之后就然后返回给客户端，要是没有找到就手动渲染这个模板，渲染完成之后再把数据返回给客户端，同时把数据缓存到redis中。&lt;/p&gt;
&lt;p&gt;其实流程很简单：（1）取缓存  （2）手动渲染模板  （3）结果输出&lt;/p&gt;
&lt;p&gt;关于手动渲染，官方的介绍是这么说的;&lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://yoursite.com/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="秒杀， 页面优化" scheme="http://yoursite.com/tags/%E7%A7%92%E6%9D%80%EF%BC%8C-%E9%A1%B5%E9%9D%A2%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot学习之Windows和Linux下的JMeter压测和redis压测</title>
    <link href="http://yoursite.com/2018/08/04/JMeter/"/>
    <id>http://yoursite.com/2018/08/04/JMeter/</id>
    <published>2018-08-04T07:50:05.000Z</published>
    <updated>2018-08-16T12:14:23.098Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot学习之JMeter压测"><a href="#SpringBoot学习之JMeter压测" class="headerlink" title="SpringBoot学习之JMeter压测"></a>SpringBoot学习之JMeter压测</h1><h3 id="JMeter入门"><a href="#JMeter入门" class="headerlink" title="JMeter入门"></a>JMeter入门</h3><p>jmeter是apache公司基于java开发的一款开源压力测试工具，体积小，功能全，使用方便，是一个比较轻量级的测试工具，使用起来非常简单。因为jmeter是java开发的，所以运行的时候必须先要安装jdk才可以。jmeter是免安装的，拿到安装包之后直接解压就可以使用，同时它在linux/windows/macos上都可以使用。 </p><a id="more"></a>   <br><br>jmeter可以做接口测试和压力测试。其中接口测试的简单操作包括做http脚本（发get/post请求、加cookie、加header、加权限认证、上传文件）、做webservice脚本、参数化、断言、关联（正则表达式提取器和处理json-json path extractor）和jmeter操作数据库等等。<br><br>JMeter的官方网站：<a href="http://jmeter.apache.org/" target="_blank" rel="noopener">http://jmeter.apache.org/</a><br><br>JMeter的参考手册：<a href="http://jmeter.apache.org/usermanual/get-started.html" target="_blank" rel="noopener">http://jmeter.apache.org/usermanual/get-started.html</a><br><br>具体的使用参考官网就可以了。<br><br>## Windows下的压测<br><br>### Jmeter-http接口脚本<br><br>一般分五个步骤:（1）添加线程组 （2）添加http请求 （3）在http请求中写入接入url、路径、请求方式和参数 （4）添加聚合报告 （5）调用接口、查看返回值<br><br><strong>（1）添加线程组：</strong><br><br><img src="/2018/08/04/JMeter/1533370431.png" alt="1533370431"><br><br><strong>（2）添加http请求：</strong><br><br><img src="/2018/08/04/JMeter/1533370936.png" alt="1533370936"><br><br><strong>（3）在http请求中写入接入url、路径、请求方式和参数 ：</strong><br><br><img src="/2018/08/04/JMeter/1533371145.png" alt="1533371145"><br><br><strong>（4）添加聚合报告和图形结果或查看结果树：</strong><br><br><img src="/2018/08/04/JMeter/1533371428.png" alt="1533371428"><br><br>聚合报告只是总体的进行解析压测结果。<br><br><strong>（5）调用接口、查看返回值：</strong><br><br>同时启动1000个线程:<br><br><img src="/2018/08/04/JMeter/1533373120.png" alt="1533373120"><br><br>### JMeter 自定义变量<br><br>新建http请求，添加token:<br><br><img src="/2018/08/04/JMeter/1533377588.png" alt="1533377588"><br><br>压测之后能够看到自己添加的token，<br><br><img src="/2018/08/04/JMeter/1533378489.png" alt="1533378489"><br><br>还能看到返回的数据<br><br><img src="/2018/08/04/JMeter/1533378668.png" alt="1533378668"><br><br>## JMeter读取自定义文件模拟多用户<br><br>需要在线程组里面添加配置元件-CSV Data Set Config，添加文件和自定义文件中对应的变量名<br><br>其中遇到文件结束符再次循环（Recycle on EOF）:设置True后，允许循环取值<br><br><img src="/2018/08/04/JMeter/1533380011.png" alt="1533380011"><br><br><img src="/2018/08/04/JMeter/1533380223.png" alt="1533380223"><br><br>引入<code>${userToken}</code>，与你定义的变量名相同。<br><br>## Linux下使用JMeter压测<br><br>首先在Windows下创建一个压测，然后存为.jmx文件。上传至Linux下<br>执行<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./apache-jmeter-4.0/bin/jmeter.sh -n -t goods_list.jmx -l  result.jtl</span><br></pre></td></tr></table></figure><p>这样就可以得到 result.jtl数据了，可以查看结果</p><p>当然也可以直接在Linux下直接测试，我这是为了方便就这么做了。</p><h1 id="redis-压测"><a href="#redis-压测" class="headerlink" title="redis 压测"></a>redis 压测</h1><p>看一下redis服务是否在运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ps -ef | grep redis</span><br></pre></td></tr></table></figure><p>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-benchmark -h 127.0.0.1 -p 6379 -c 100 -n 100000</span><br></pre></td></tr></table></figure><p>-c 100 就是100个并发  -n 100000 就是100000个请求。</p><p>看一下其中的一个结果</p><p><img src="/2018/08/04/JMeter/1533382163.png" alt="1533382163"></p><p>100000个请求在2.38s内完成，有4.12%的请求在1ms内完成，一秒大概完成41963.91个请求。以3字节大小测试。</p><p>再看这条命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-benchmark -h 127.0.0.1 -p 6379 -q -d 100</span><br></pre></td></tr></table></figure><p>-q  就是quiet，输出少一些，-d 100是存取数据包为100字节大小的数据包，上面默认是3 字节存取的。看一下输出</p><p><img src="/2018/08/04/JMeter/1533382655.png" alt="1533382655"></p><p>只测试某些命令的性能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-benchmark -t set,lpush -q -n 10000</span><br></pre></td></tr></table></figure><p>-t set,lpush 是只测试set和lpush命令。</p><p>只测试某些数据存取的性能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-benchmark -q -n 10000 script load &quot;redis.call(&apos;set&apos;,&apos;foo&apos;,&apos;bar&apos;)&quot;</span><br></pre></td></tr></table></figure><p>只对’set’,’foo’,’bar’该命令做压测。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SpringBoot学习之JMeter压测&quot;&gt;&lt;a href=&quot;#SpringBoot学习之JMeter压测&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot学习之JMeter压测&quot;&gt;&lt;/a&gt;SpringBoot学习之JMeter压测&lt;/h1&gt;&lt;h3 id=&quot;JMeter入门&quot;&gt;&lt;a href=&quot;#JMeter入门&quot; class=&quot;headerlink&quot; title=&quot;JMeter入门&quot;&gt;&lt;/a&gt;JMeter入门&lt;/h3&gt;&lt;p&gt;jmeter是apache公司基于java开发的一款开源压力测试工具，体积小，功能全，使用方便，是一个比较轻量级的测试工具，使用起来非常简单。因为jmeter是java开发的，所以运行的时候必须先要安装jdk才可以。jmeter是免安装的，拿到安装包之后直接解压就可以使用，同时它在linux/windows/macos上都可以使用。 &lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://yoursite.com/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="JMeter" scheme="http://yoursite.com/tags/JMeter/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot使用JSR303参数校验并进行全局异常处理</title>
    <link href="http://yoursite.com/2018/08/02/JSR303/"/>
    <id>http://yoursite.com/2018/08/02/JSR303/</id>
    <published>2018-08-02T12:10:25.000Z</published>
    <updated>2018-08-16T12:14:16.685Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot使用JSR303参数校验"><a href="#SpringBoot使用JSR303参数校验" class="headerlink" title="SpringBoot使用JSR303参数校验"></a>SpringBoot使用JSR303参数校验</h1><p>开发web项目有时候我们需要对controller层传过来的参数进行一些基本的校验，比如非空，非null，整数值的范围，字符串的个数，日期，邮箱等等。最常见的就是我们直接写代码校验，这样以后比较繁琐，而且不够灵活。 不能总是写繁琐的代码来实现吧。</p><p>使用JSR303来做参数校验就方便并且整洁很多了。</p><a id="more"></a><h3 id="pop引入依赖"><a href="#pop引入依赖" class="headerlink" title="pop引入依赖"></a>pop引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--JSR303校验的依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Controller中使用"><a href="#Controller中使用" class="headerlink" title="Controller中使用"></a>Controller中使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line"><span class="comment">//@Valid是JSR303校验</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result&lt;Boolean&gt; <span class="title">login</span><span class="params">(@Valid LoginVo loginVo)</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="校验实体"><a href="#校验实体" class="headerlink" title="校验实体"></a>校验实体</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.SecKill.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.springboot.SecKill.validator.IsMobile;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.validator.constraints.Length;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> WilsonSong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/2/002</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="meta">@IsMobile</span></span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="meta">@Length</span>(min=<span class="number">32</span>)</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMobile</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mobile;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMobile</span><span class="params">(String mobile)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mobile = mobile;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"LoginVo&#123;"</span> +</span><br><span class="line">                <span class="string">"mobile='"</span> + mobile + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", password='"</span> + password + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义校验"><a href="#自定义校验" class="headerlink" title="自定义校验"></a>自定义校验</h3><p>JSR303中给我们定义了一些常用的校验注解，如本文最后常用常用注解中所示，但是要是还不能满足学习怎么去自己定义注解呢？</p><p>参照@NotNull这个校验注解的定义方法，@NotNull是这么定义的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> javax.validation.constraints;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Documented;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Repeatable;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Constraint;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Payload;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target</span>(&#123;ElementType.METHOD, ElementType.FIELD, ElementType.ANNOTATION_TYPE, ElementType.CONSTRUCTOR, ElementType.PARAMETER, ElementType.TYPE_USE&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Repeatable</span>(NotNull.List.class)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Constraint</span>(</span><br><span class="line">    validatedBy = &#123;&#125;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> NotNull &#123;</span><br><span class="line">    <span class="function">String <span class="title">message</span><span class="params">()</span> <span class="keyword">default</span> "</span>&#123;javax.validation.constraints.NotNull.message&#125;<span class="string">";</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Class&lt;?&gt;[] groups() default &#123;&#125;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Class&lt;? extends Payload&gt;[] payload() default &#123;&#125;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @Target(&#123;ElementType.METHOD, ElementType.FIELD, ElementType.ANNOTATION_TYPE, ElementType.CONSTRUCTOR, ElementType.PARAMETER, ElementType.TYPE_USE&#125;)</span></span><br><span class="line"><span class="string">    @Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="string">    @Documented</span></span><br><span class="line"><span class="string">    public @interface List &#123;</span></span><br><span class="line"><span class="string">        NotNull[] value();</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>参照上面，我们实现自己的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.SecKill.validator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Constraint;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Payload;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> WilsonSong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/2/002</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Target</span>(&#123;ElementType.METHOD, ElementType.FIELD, ElementType.ANNOTATION_TYPE, ElementType.CONSTRUCTOR, ElementType.PARAMETER, ElementType.TYPE_USE&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Constraint</span>(</span><br><span class="line">        validatedBy = &#123;IsMobileValidator.class&#125;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> IsMobile &#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">required</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">true</span></span>;</span><br><span class="line">    <span class="comment">//校验不通过，提示默认的错误信息</span></span><br><span class="line">    <span class="function">String <span class="title">message</span><span class="params">()</span> <span class="keyword">default</span> "手机号码格式错误"</span>;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    Class&lt;? extends Payload&gt;[] payload() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现具体校验器"><a href="#实现具体校验器" class="headerlink" title="实现具体校验器"></a>实现具体校验器</h3><p>上面只是实现了自己定义的校验器的接口，具体的实现类如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.SecKill.validator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.springboot.SecKill.util.ValidatorUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintValidator;</span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintValidatorContext;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JSR303具体的校验器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> WilsonSong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/2/002</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IsMobileValidator</span>  <span class="keyword">implements</span> <span class="title">ConstraintValidator</span>&lt;<span class="title">IsMobile</span>, <span class="title">String</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">boolean</span> required = <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(IsMobile constraintAnnotation)</span> </span>&#123;</span><br><span class="line">        required = constraintAnnotation.required();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//校验</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(String s, ConstraintValidatorContext constraintValidatorContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(required)&#123;       <span class="comment">//值是必须的就判断是否合法</span></span><br><span class="line">            <span class="keyword">return</span> ValidatorUtil.isMobile(s);     <span class="comment">//不为空就判断格式</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;  <span class="comment">//若不必须就判断是否有值</span></span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(s))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> ValidatorUtil.isMobile(s);     <span class="comment">//不为空就判断格式</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><p>参数校验不通过就会产生错误信息，显示一大串例如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;"timestamp":"2018-08-02T13:07:50.890+0000","status":400,"error":"Bad Request","errors":[&#123;"codes":["IsMobile.loginVo.mobile","IsMobile.mobile","IsMobile.java.lang.String","IsMobile"],"arguments":[&#123;"codes":["loginVo.mobile","mobile"],"arguments":null,"defaultMessage":"mobile","code":"mobile"&#125;,true],"defaultMessage":"手机号码格式错误","objectName":"loginVo","field":"mobile","rejectedValue":"22111111111","bindingFailure":false,"code":"IsMobile"&#125;],"message":"Validation failed for object='loginVo'. Error count: 1","path":"/login/do_login"&#125;</span><br></pre></td></tr></table></figure><p>为了方便查看，统一进行异常处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.SecKill.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.springboot.SecKill.result.CodeMsg;</span><br><span class="line"><span class="keyword">import</span> com.springboot.SecKill.result.Result;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.ObjectError;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> WilsonSong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/2/002</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalExceptionHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = Exception.class)       <span class="comment">//拦截所有的异常</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;String&gt; <span class="title">exceptionHandler</span><span class="params">(HttpServletRequest httpServletRequest, Exception e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 参数校验异常</span></span><br><span class="line">        <span class="keyword">if</span>(e <span class="keyword">instanceof</span> BindException)&#123;</span><br><span class="line">            BindException ex = (BindException)e;</span><br><span class="line">            List&lt;ObjectError&gt; errors = ex.getAllErrors();</span><br><span class="line">            ObjectError error= errors.get(<span class="number">0</span>);</span><br><span class="line">            String msg = error.getDefaultMessage();</span><br><span class="line">            <span class="keyword">return</span> Result.error(CodeMsg.BIND_ERROR.fillArgs(msg));</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//其他异常</span></span><br><span class="line">            <span class="keyword">return</span> Result.error(CodeMsg.SERVER_ERROR);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局的异常处理"><a href="#全局的异常处理" class="headerlink" title="全局的异常处理"></a>全局的异常处理</h3><p>上面的知识参数检验时候的异常处理，但是在工程中很多的异常，用全局的异常处理更加方便维护。</p><p>首先定义一个全局的异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.SecKill.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.springboot.SecKill.result.CodeMsg;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> WilsonSong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/2/002</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> CodeMsg cm;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GlobalException</span> <span class="params">(CodeMsg cm)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(cm.toString());</span><br><span class="line">        <span class="keyword">this</span>.cm = cm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">getSerialVersionUID</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> serialVersionUID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CodeMsg <span class="title">getCm</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCm</span><span class="params">(CodeMsg cm)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cm = cm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在全局异常处理器中添加这个全局的异常，也就是在GlobalExceptionHandler类中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if(e instanceof GlobalException)&#123;</span><br><span class="line">            GlobalException ex = (GlobalException) e;</span><br><span class="line">            return Result.error(ex.getCm());</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>然后在产生异常的地方直接抛出全局异常就可以了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (loginVo == <span class="keyword">null</span>)&#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> GlobalException(CodeMsg.SERVER_ERROR);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>CodeMsg.SERVER_ERROR是自己定义的异常信息。</p><h3 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Null</span>  被注释的元素必须为<span class="keyword">null</span></span><br><span class="line"><span class="meta">@NotNull</span>  被注释的元素不能为<span class="keyword">null</span></span><br><span class="line"><span class="meta">@AssertTrue</span>  被注释的元素必须为<span class="keyword">true</span></span><br><span class="line"><span class="meta">@AssertFalse</span>  被注释的元素必须为<span class="keyword">false</span></span><br><span class="line"><span class="meta">@Min</span>(value)  被注释的元素必须是一个数字，其值必须大于等于指定的最小值</span><br><span class="line"><span class="meta">@Max</span>(value)  被注释的元素必须是一个数字，其值必须小于等于指定的最大值</span><br><span class="line"><span class="meta">@DecimalMin</span>(value)  被注释的元素必须是一个数字，其值必须大于等于指定的最小值</span><br><span class="line"><span class="meta">@DecimalMax</span>(value)  被注释的元素必须是一个数字，其值必须小于等于指定的最大值</span><br><span class="line"><span class="meta">@Size</span>(max,min)  被注释的元素的大小必须在指定的范围内。</span><br><span class="line"><span class="meta">@Digits</span>(integer,fraction)  被注释的元素必须是一个数字，其值必须在可接受的范围内</span><br><span class="line"><span class="meta">@Past</span>  被注释的元素必须是一个过去的日期</span><br><span class="line"><span class="meta">@Future</span>  被注释的元素必须是一个将来的日期</span><br><span class="line"><span class="meta">@Pattern</span>(value) 被注释的元素必须符合指定的正则表达式。</span><br><span class="line"><span class="meta">@Email</span> 被注释的元素必须是电子邮件地址</span><br><span class="line"><span class="meta">@Length</span> 被注释的字符串的大小必须在指定的范围内</span><br><span class="line"><span class="meta">@NotEmpty</span>  被注释的字符串必须非空</span><br><span class="line"><span class="meta">@Range</span>  被注释的元素必须在合适的范围内</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SpringBoot使用JSR303参数校验&quot;&gt;&lt;a href=&quot;#SpringBoot使用JSR303参数校验&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot使用JSR303参数校验&quot;&gt;&lt;/a&gt;SpringBoot使用JSR303参数校验&lt;/h1&gt;&lt;p&gt;开发web项目有时候我们需要对controller层传过来的参数进行一些基本的校验，比如非空，非null，整数值的范围，字符串的个数，日期，邮箱等等。最常见的就是我们直接写代码校验，这样以后比较繁琐，而且不够灵活。 不能总是写繁琐的代码来实现吧。&lt;/p&gt;
&lt;p&gt;使用JSR303来做参数校验就方便并且整洁很多了。&lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://yoursite.com/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="JSR303" scheme="http://yoursite.com/tags/JSR303/"/>
    
      <category term="异常处理" scheme="http://yoursite.com/tags/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot2.0集成Redis详解及踩过的坑（Could not get a resource from the pool）</title>
    <link href="http://yoursite.com/2018/08/02/Redis/"/>
    <id>http://yoursite.com/2018/08/02/Redis/</id>
    <published>2018-08-02T01:12:40.000Z</published>
    <updated>2018-08-16T12:13:42.598Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot2-0集成Redis"><a href="#SpringBoot2-0集成Redis" class="headerlink" title="SpringBoot2.0集成Redis"></a>SpringBoot2.0集成Redis</h1><p>首先安装的过程就不提了。上一个项目的redis是配置在Windows下的，集成很简单，也没有做什么配置。这次为了进行测试，装在了linux下。在SpringBoot集成的过程中遇到了一些小坑，分享一下。</p><a id="more"></a><h3 id="pom文件中添加依赖"><a href="#pom文件中添加依赖" class="headerlink" title="pom文件中添加依赖"></a>pom文件中添加依赖</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/redis.clients/jedis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--引入Json依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到除了Redis我还加入了JSON的依赖，这是因为我之后读取出来的数据要转换成JSON串的格式，数据可读，方便开发。</p><h3 id="application-properties文件中添加配置"><a href="#application-properties文件中添加配置" class="headerlink" title="application.properties文件中添加配置"></a>application.properties文件中添加配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#redis配置</span><br><span class="line">#Linux主机地址</span><br><span class="line">spring.redis.host=192.168.78.131</span><br><span class="line">#端口</span><br><span class="line">spring.redis.port=6379</span><br><span class="line">#超时时间，ms</span><br><span class="line">spring.redis.timeout=3000</span><br><span class="line">#连接池的最大连接数</span><br><span class="line">spring.redis.jedis.pool.max-active=10</span><br><span class="line">#链接的最大等待时间ms</span><br><span class="line">spring.redis.jedis.pool.max-wait=3000</span><br><span class="line">#连接池中的最大的等待数量</span><br><span class="line">spring.redis.jedis.pool.max-idle=10</span><br></pre></td></tr></table></figure><p>在SpringBoot2.0的版本中timeout变成了Duration类型的，从其源码中我们可以看一下是怎么定义的:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTimeout</span><span class="params">(Duration timeout)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.timeout = timeout;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>所以正常的写法应该是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.redis.timeout=3000ms</span><br></pre></td></tr></table></figure><p>但是这样也带来了一个问题，下面再说这个问题是什么，这里先按照初始的定义，不会报错的</p><p>正常的人可能还会在配置文件中添加redis的密码的配置，没有密码的话就不要添加这个配置，就算默认为空也会导致出现错误，不能实现OAuth认证，要是有密码的话就添加上并写上自己的密码。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.redis.password=</span><br></pre></td></tr></table></figure><h3 id="Redis的自定义初始化"><a href="#Redis的自定义初始化" class="headerlink" title="Redis的自定义初始化"></a>Redis的自定义初始化</h3><p>首先写redisConfig的文件，读取application.properties文件中yml的配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.SecKill.redis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Redis的配置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> WilsonSong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/1/001</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//作为组件扫描进来</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="comment">//读取配置文件</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.redis"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfig</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String host;  <span class="comment">//主机</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> port;  <span class="comment">//端口</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> timeout;  <span class="comment">//超时时间</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.redis.jedis.pool.max-active&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxActive;  <span class="comment">//连接池最大线程数</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.redis.jedis.pool.max-wait&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span>  maxWait;  <span class="comment">//等待时间</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.redis.jedis.pool.max-idle&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxIdle;<span class="comment">//最大空闲连接</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHost</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> host;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHost</span><span class="params">(String host)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.host = host;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> port;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPort</span><span class="params">(<span class="keyword">int</span> port)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.port = port;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getTimeout</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> timeout;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTimeout</span><span class="params">(<span class="keyword">int</span> timeout)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.timeout = timeout;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMaxActive</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> maxActive;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMaxActive</span><span class="params">(<span class="keyword">int</span> maxActive)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.maxActive = maxActive;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getMaxWait</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> maxWait;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMaxWait</span><span class="params">(<span class="keyword">long</span> maxWait)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.maxWait = maxWait;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMaxIdle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> maxIdle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMaxIdle</span><span class="params">(<span class="keyword">int</span> maxIdle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.maxIdle = maxIdle;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面用了两种方式来读取application.properties中的配置，一种是直接设置@ConfigurationProperties(prefix = “spring.redis”)，然后变量名与application.properties中的变量名一样，这样就可以读出来了，然后像max-wait这种变量名没法定义啊，所以又用了@Value(“${spring.redis.jedis.pool.max-idle}”)这种注解的方式来读取，当然你可以全部影注解的方式来读取，注意过程中的每一个变量的基本数据类型定义准确。maxWait和timeout这两个本来都是Duration类型的，但是这里分别写成long和int类型的。一会儿再解释这个问题。</p><p>过程中需要从redis连接池中获取redis服务，所以这里初始化jedisPool的配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.SecKill.redis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPool;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPoolConfig;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> WilsonSong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/1/001</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisPoolFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RedisConfig redisConfig;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * redis连接池的一些配置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JedisPool <span class="title">JedisPoolFactory</span><span class="params">()</span></span>&#123;</span><br><span class="line">        JedisPoolConfig poolConfig = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">        poolConfig.setMaxIdle(redisConfig.getMaxIdle());</span><br><span class="line">        poolConfig.setMaxTotal(redisConfig.getMaxActive());</span><br><span class="line">        poolConfig.setMaxWaitMillis((redisConfig.getMaxWait()));</span><br><span class="line"></span><br><span class="line">        JedisPool jedisPool = <span class="keyword">new</span> JedisPool(poolConfig, redisConfig.getHost(),redisConfig.getPort(),redisConfig.getTimeout());</span><br><span class="line">        <span class="keyword">return</span> jedisPool;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里解释下maxWait和timeout这两个数据类型的问题。首先</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poolConfig.setMaxWaitMillis((redisConfig.getMaxWait()));</span><br></pre></td></tr></table></figure><p>用到了maxWait这个变量，看一下setMaxWaitMillis（）函数的源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMaxWaitMillis</span><span class="params">(<span class="keyword">long</span> maxWaitMillis)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.maxWaitMillis = maxWaitMillis;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>maxWaitMillis这个变量是long类型的，所以执勤才那么定义。</p><p>同理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JedisPool jedisPool = new JedisPool(poolConfig, redisConfig.getHost(),redisConfig.getPort(),redisConfig.getTimeout());</span><br></pre></td></tr></table></figure><p>这里面有用到redisConfig.getTimeout()，看一下JedisPool是怎么初始化的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public JedisPool(GenericObjectPoolConfig poolConfig, String host, int port, int timeout) &#123;</span><br><span class="line">        this(poolConfig, host, port, timeout, (String)null, 0, (String)null);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以看到timeout是int类型的，你要一开始定义成Duration类型的，然后可能过程中会涉及到数据类型的强制准换，会不会报错不知道，有兴趣的可以试一下。</p><p>最后就是初始化redis的方法如get,set等等</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.SecKill.redis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPool;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> WilsonSong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/8/1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(RedisService.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JedisPool jedisPool;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">get</span><span class="params">(KeyPrefix prefix, String key, Class&lt;T&gt; clazz)</span></span>&#123;</span><br><span class="line">        Jedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">          jedis = jedisPool.getResource();</span><br><span class="line">          <span class="comment">//生成real  key</span></span><br><span class="line">          String realKey = prefix.getPrefix() + key;</span><br><span class="line">          String str = jedis.get(realKey);</span><br><span class="line">          T t = String2Bean(str, clazz);</span><br><span class="line">          <span class="keyword">return</span> t;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            logger.error(<span class="string">"redis连接池异常"</span>+e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (jedis != <span class="keyword">null</span>)&#123;</span><br><span class="line">               jedis.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function"><span class="keyword">boolean</span> <span class="title">set</span><span class="params">(KeyPrefix prefix,String key, T value)</span></span>&#123;</span><br><span class="line">        Jedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            jedis = jedisPool.getResource();</span><br><span class="line">            String value_new = Bean2String(value);</span><br><span class="line">            <span class="keyword">if</span> (value_new == <span class="keyword">null</span> || value_new.length() &lt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//生成real  key</span></span><br><span class="line">            String realKey = prefix.getPrefix() + key;</span><br><span class="line">            <span class="comment">//过期时间</span></span><br><span class="line">            <span class="keyword">int</span> seconds = prefix.expireSeconds();</span><br><span class="line">            <span class="keyword">if</span> (seconds &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">                jedis.set(realKey, value_new);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                jedis.setex(realKey,seconds,value_new);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            logger.error(<span class="string">"redis连接池异常"</span>+e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (jedis != <span class="keyword">null</span>)&#123;</span><br><span class="line">                jedis.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//key 是否存在</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">Boolean <span class="title">exists</span><span class="params">(KeyPrefix prefix, String key)</span></span>&#123;</span><br><span class="line">        Jedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            jedis = jedisPool.getResource();</span><br><span class="line">            <span class="comment">//生成real  key</span></span><br><span class="line">            String realKey = prefix.getPrefix() + key;</span><br><span class="line">            <span class="keyword">return</span> jedis.exists(realKey);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            logger.error(<span class="string">"redis连接池异常"</span>+e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (jedis != <span class="keyword">null</span>)&#123;</span><br><span class="line">                jedis.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加key对应的值</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">Long <span class="title">incr</span><span class="params">(KeyPrefix prefix, String key)</span></span>&#123;</span><br><span class="line">        Jedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            jedis = jedisPool.getResource();</span><br><span class="line">            <span class="comment">//生成real  key</span></span><br><span class="line">            String realKey = prefix.getPrefix() + key;</span><br><span class="line">            <span class="keyword">return</span> jedis.incr(realKey);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            logger.error(<span class="string">"redis连接池异常"</span>+e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (jedis != <span class="keyword">null</span>)&#123;</span><br><span class="line">                jedis.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//减少key对应的对象的值</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">Long <span class="title">decr</span><span class="params">(KeyPrefix prefix, String key)</span></span>&#123;</span><br><span class="line">        Jedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            jedis = jedisPool.getResource();</span><br><span class="line">            <span class="comment">//生成real  key</span></span><br><span class="line">            String realKey = prefix.getPrefix() + key;</span><br><span class="line">            <span class="keyword">return</span> jedis.decr(realKey);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            logger.error(<span class="string">"redis连接池异常"</span>+e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (jedis != <span class="keyword">null</span>)&#123;</span><br><span class="line">                jedis.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//bean对象准换为String</span></span><br><span class="line">    <span class="keyword">private</span> &lt;T&gt; <span class="function">String <span class="title">Bean2String</span><span class="params">(T value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Class&lt;?&gt; clazz = value.getClass();</span><br><span class="line">        <span class="keyword">if</span> (clazz == <span class="keyword">int</span>.class || clazz == Integer.class)&#123;</span><br><span class="line">            <span class="keyword">return</span>  <span class="string">""</span>+value;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (clazz == String.class)&#123;</span><br><span class="line">            <span class="keyword">return</span> (String)value;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (clazz == <span class="keyword">long</span>.class || clazz == Long.class)&#123;</span><br><span class="line">            <span class="keyword">return</span>  <span class="string">""</span>+value;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> JSON.toJSONString(value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//String转换为bean</span></span><br><span class="line">    <span class="keyword">private</span> &lt;T&gt; <span class="function">T <span class="title">String2Bean</span><span class="params">(String str, Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (str == <span class="keyword">null</span> || str.length() &lt;<span class="number">0</span> || clazz == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (clazz == <span class="keyword">int</span>.class || clazz == Integer.class)&#123;</span><br><span class="line">            <span class="keyword">return</span>  (T)Integer.valueOf(str);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (clazz == String.class)&#123;</span><br><span class="line">            <span class="keyword">return</span> (T)str;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (clazz == <span class="keyword">long</span>.class || clazz == Long.class)&#123;</span><br><span class="line">            <span class="keyword">return</span> (T)Long.valueOf(str);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> JSON.toJavaObject(JSON.parseObject(str),clazz);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后在controller中编写一个方法实现对service层的调用即可，就不赘述了。</p><h3 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h3><p>运行程序发现报出异常</p><p>Could not get a resource from the pool。</p><p>其实也就是在执行</p><p>jedis = jedisPool.getResource();这一步时出错了</p><ol><li>首先第一种可能是你的redis服务没开启，检查下。</li><li>确认开启了之后就修改你的redis.conf文件，把bind  127.0.0.1改成bind  0.0.0.0，</li></ol><p>​       也就是把redis的访问权限有只能本机访问改成所有的都能访问。</p><ol start="3"><li>最后可能的原因有你的Linux的防火墙没有开放Redis的端口，可以配置打开，也可以直接关掉防火墙，我这里直接关掉了Linux的防火墙。</li></ol><p>我用的是centos7</p><p>永久关闭防火墙的方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//临时关闭</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">//禁止开机启动</span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure><p>这样你再测试下，要是还不能用还有别的原因，可以自己上网去看一下具体怎么解决。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SpringBoot2-0集成Redis&quot;&gt;&lt;a href=&quot;#SpringBoot2-0集成Redis&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot2.0集成Redis&quot;&gt;&lt;/a&gt;SpringBoot2.0集成Redis&lt;/h1&gt;&lt;p&gt;首先安装的过程就不提了。上一个项目的redis是配置在Windows下的，集成很简单，也没有做什么配置。这次为了进行测试，装在了linux下。在SpringBoot集成的过程中遇到了一些小坑，分享一下。&lt;/p&gt;
    
    </summary>
    
      <category term="SpringBoot" scheme="http://yoursite.com/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="Redis" scheme="http://yoursite.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>机器学习之逻辑回归（Logistic Regression）与决策边界</title>
    <link href="http://yoursite.com/2018/07/30/LogisticRegression/"/>
    <id>http://yoursite.com/2018/07/30/LogisticRegression/</id>
    <published>2018-07-30T01:57:57.000Z</published>
    <updated>2018-08-16T12:13:56.234Z</updated>
    
    <content type="html"><![CDATA[<h1 id="逻辑回归与决策边界"><a href="#逻辑回归与决策边界" class="headerlink" title="逻辑回归与决策边界"></a>逻辑回归与决策边界</h1><h2 id="what？"><a href="#what？" class="headerlink" title="what？"></a>what？</h2><p>逻辑回归其实是一个分类算法而不是回归算法。通常是利用已知的自变量来预测一个离散型因变量的值（像二进制值0/1，是/否，真/假）。简单来说，它就是通过拟合一个逻辑函数（logit fuction）来预测一个事件发生的概率。所以它预测的是一个概率值，自然，它的输出值应该在0到1之间。</p><p>Logistic回归简单分析:</p><p>优点：计算代价不高，易于理解和实现<br>　　缺点：容易欠拟合，分类精度可能不高<br>　　适用数据类型：数值型和标称型数据</p><a id="more"></a><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>按照我自己的理解，可以简单的描述为这样的过程：</p><ol><li><p>找一个合适的预测函数，一般表示为h函数，该函数就是我们需要找的分类函数，它用来预测输入数据的判断结果。这个过程时非常关键的，需要对数据有一定的了解或分析，知道或者猜测预测函数的“大概”形式，比如是线性函数还是非线性函数。<br>借助sigmoid函数构造出的预测函数形式一般为：<br>$$<br>h_{\theta }(x) = g(\theta ^{_{T}}x) = \frac{1}{1+e^{-\theta ^{T}x}}<br>$$<br>其中sigmoid函数为:<br><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/LR%2FLR1.png" alt="sigmoid"></p></li><li><p>构造一个Cost函数（损失函数），该函数表示预测的输出（h）与训练数据类别（y）之间的偏差，可以是二者之间的差（h-y）或者是其他的形式。cost函数为：<br>$$<br>Cost(h_{\theta }x,y) = \begin{cases} -log(h_{\theta }(x))&amp; \text{ if } y=1 \ -log(1-h_{\theta }(x))&amp; \text{ if } y=0 \end{cases}<br>$$<br>综合考虑所有训练数据的“损失”，将Cost求和或者求平均，记为J(θ)函数，表示所有训练数据预测值与实际类别的偏差。J(θ函数一般为：<br>$$<br>J(\theta ) = -\frac{1}{m}[\sum_{i=1}^{m}(y_{i}logh_{\theta }(x_{i})+(1-y_{i})log(1-h_{\theta }(x_{i})))]<br>$$</p></li><li><p>显然，J(θ)函数的值越小表示预测函数越准确（即h函数越准确），所以这一步需要做的是找到J(θ)函数的最小值。找函数的最小值有不同的方法，Logistic Regression实现时用的是梯度下降法（Gradient Descent）。<br>&emsp;关于详细的公式推导就不介绍了</p><h2 id="伪代码"><a href="#伪代码" class="headerlink" title="伪代码"></a>伪代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">初始化线性函数参数为<span class="number">1</span></span><br><span class="line">构造sigmoid函数</span><br><span class="line">重复循环I次</span><br><span class="line">    计算数据集梯度</span><br><span class="line">    更新线性函数参数</span><br><span class="line">确定最终的sigmoid函数</span><br><span class="line">输入训练（测试）数据集</span><br><span class="line">运用最终sigmoid函数求解分类</span><br></pre></td></tr></table></figure></li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>   逻辑回归的python代码：</p>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">    <span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">LogisticRegression</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""初始化Logistic Regression模型"""</span></span><br><span class="line">        self.coef_ = <span class="keyword">None</span></span><br><span class="line">        self.intercept_ = <span class="keyword">None</span></span><br><span class="line">        self._theta = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_sigmoid</span><span class="params">(self, t)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1.0</span> / (<span class="number">1.0</span> + np.exp(-t))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fit</span><span class="params">(self, X_train, y_train, eta=<span class="number">0.01</span>, n_iters=<span class="number">1e4</span>)</span>:</span></span><br><span class="line">        <span class="string">"""根据训练数据集X_train, y_train, 使用梯度下降法训练Logictic Regression模型"""</span></span><br><span class="line">        <span class="keyword">assert</span> X_train.shape[<span class="number">0</span>] == y_train.shape[<span class="number">0</span>], \</span><br><span class="line">            <span class="string">"the size of X_train must be equal to the size of y_train"</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">J</span><span class="params">(theta, X_b, y)</span>:</span></span><br><span class="line">            y_hat = self._sigmoid(X_b.dot(theta))</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">return</span> -np.sum(y*np.log(y_hat) + (<span class="number">1</span>-y)*np.log(<span class="number">1</span>-y_hat)) / len(y)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">return</span> float(<span class="string">'inf'</span>)</span><br><span class="line">        <span class="string">'''逻辑回归'''</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">dJ</span><span class="params">(theta, X_b, y)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> X_b.T.dot(self._sigmoid(X_b.dot(theta)) - y) / len(X_b)</span><br><span class="line"></span><br><span class="line">        <span class="string">'''梯度下降法'''</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">gradient_descent</span><span class="params">(X_b, y, initial_theta, eta, n_iters=<span class="number">1e4</span>, epsilon=<span class="number">1e-8</span>)</span>:</span></span><br><span class="line"></span><br><span class="line">            theta = initial_theta</span><br><span class="line">            cur_iter = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> cur_iter &lt; n_iters:</span><br><span class="line">                gradient = dJ(theta, X_b, y)</span><br><span class="line">                last_theta = theta</span><br><span class="line">                theta = theta - eta * gradient</span><br><span class="line">                <span class="keyword">if</span> (abs(J(theta, X_b, y) - J(last_theta, X_b, y)) &lt; epsilon):</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">                cur_iter += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> theta</span><br><span class="line"></span><br><span class="line">        X_b = np.hstack([np.ones((len(X_train), <span class="number">1</span>)), X_train])</span><br><span class="line">        initial_theta = np.zeros(X_b.shape[<span class="number">1</span>])</span><br><span class="line">        self._theta = gradient_descent(X_b, y_train, initial_theta, eta, n_iters)</span><br><span class="line"></span><br><span class="line">        self.intercept_ = self._theta[<span class="number">0</span>]</span><br><span class="line">        self.coef_ = self._theta[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict_proba</span><span class="params">(self, X_predict)</span>:</span></span><br><span class="line">        <span class="string">"""给定待预测数据集X_predict，返回表示X_predict的结果概率向量"""</span></span><br><span class="line">        <span class="keyword">assert</span> self.intercept_ <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> self.coef_ <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>, \</span><br><span class="line">            <span class="string">"must fit before predict!"</span></span><br><span class="line">        <span class="keyword">assert</span> X_predict.shape[<span class="number">1</span>] == len(self.coef_), \</span><br><span class="line">            <span class="string">"the feature number of X_predict must be equal to X_train"</span></span><br><span class="line"></span><br><span class="line">        X_b = np.hstack([np.ones((len(X_predict), <span class="number">1</span>)), X_predict])</span><br><span class="line">        <span class="keyword">return</span> self._sigmoid(X_b.dot(self._theta))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(self, X_predict)</span>:</span></span><br><span class="line">        <span class="string">"""给定待预测数据集X_predict，返回表示X_predict的结果向量"""</span></span><br><span class="line">        <span class="keyword">assert</span> self.intercept_ <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> self.coef_ <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>, \</span><br><span class="line">            <span class="string">"must fit before predict!"</span></span><br><span class="line">        <span class="keyword">assert</span> X_predict.shape[<span class="number">1</span>] == len(self.coef_), \</span><br><span class="line">            <span class="string">"the feature number of X_predict must be equal to X_train"</span></span><br><span class="line"></span><br><span class="line">        proba = self.predict_proba(X_predict)</span><br><span class="line">        <span class="keyword">return</span> np.array(proba &gt;= <span class="number">0.5</span>, dtype=<span class="string">'int'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">score</span><span class="params">(self, X_test, y_test)</span>:</span></span><br><span class="line">        <span class="string">"""根据测试数据集 X_test 和 y_test 确定当前模型的准确度"""</span></span><br><span class="line"></span><br><span class="line">        y_predict = self.predict(X_test)</span><br><span class="line">        <span class="string">''''分类的准确度'''</span></span><br><span class="line">        <span class="keyword">return</span> accuracy_score(y_test, y_predict)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"LogisticRegression()</span></span><br></pre></td></tr></table></figure><p><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/LR%2FLR2.png" alt="测试数据"><br>        上述结果为本次测试数据,可以看出来该数据集其实是三维的数据，因为逻辑回归只能解决二分类的问题，因此取数据集中的前两维数据，作为两种类别，因此使用该数据集可以用来判断逻辑回归测试结果的好坏<br>        测试代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> playML.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> playML.LogisticRegression <span class="keyword">import</span> LogisticRegression</span><br><span class="line"></span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(x, y, seed=<span class="number">666</span>)</span><br><span class="line">log_reg = LogisticRegression()</span><br><span class="line">log_reg.fit(x_train, y_train)</span><br><span class="line">log_reg.score(x_test, y_test)</span><br><span class="line">log_reg.predict_proba(x_test)</span><br></pre></td></tr></table></figure><p>输出的测试结果：</p><figure class="highlight plain"><figcaption><span>0.98664939, 0.14852024, 0.17601199, 0.0369836 ,0.0186637 , 0.04936918, 0.99669244, 0.97993941, 0.74524655,0.04473194, 0.00339285, 0.26131273, 0.0369836 , 0.84192923,0.79892262, 0.82890209, 0.32358166, 0.06535323, 0.20735334])```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">对于上述简单的测试数据，输出的array中的数据表示将某个数据分类成某一类别的概率，越接近于0就越趋近于分类成0这个类别，同理越趋近与1，就越趋近于分类成1，最后的分类的测试值输出为1.</span><br><span class="line"></span><br><span class="line">### 决策边界</span><br><span class="line"></span><br><span class="line">怎么对新输入的数据进行预测分类呢？</span><br><span class="line">每输入一个值&lt;a href=&quot;http://www.codecogs.com/eqnedit.php?latex=x^&#123;_&#123;b&#125;&#125;&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://latex.codecogs.com/gif.latex?x^&#123;_&#123;b&#125;&#125;&quot; title=&quot;x^&#123;_&#123;b&#125;&#125;&quot; /&gt;&lt;/a&gt;，与\theta ^&#123;T&#125;点乘，&lt;a href=&quot;http://www.codecogs.com/eqnedit.php?latex=x^&#123;_&#123;b&#125;&#125;&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://latex.codecogs.com/gif.latex?x^&#123;_&#123;b&#125;&#125;&quot; title=&quot;x^&#123;_&#123;b&#125;&#125;&quot; /&gt;&lt;/a&gt;·$\theta ^&#123;T&#125;$&gt;0，p&gt;0.5，&lt;a href=&quot;http://www.codecogs.com/eqnedit.php?latex=x^&#123;_&#123;b&#125;&#125;&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://latex.codecogs.com/gif.latex?x^&#123;_&#123;b&#125;&#125;&quot; title=&quot;x^&#123;_&#123;b&#125;&#125;&quot; /&gt;&lt;/a&gt;·$\theta ^&#123;T&#125;$&lt;0，p&lt;0.5,这样就能实类别的分类。当&lt;a href=&quot;http://www.codecogs.com/eqnedit.php?latex=x^&#123;_&#123;b&#125;&#125;&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://latex.codecogs.com/gif.latex?x^&#123;_&#123;b&#125;&#125;&quot; title=&quot;x^&#123;_&#123;b&#125;&#125;&quot; /&gt;&lt;/a&gt;·$\theta ^&#123;T&#125;$=0就称为该分类的决策边界。</span><br><span class="line">然后使用上面简单的数据集，绘制决策边界，其实也就是分类的边界，当有新的数据的时候骡子坳那边就分类为该类别。</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">def x2(x1):</span><br><span class="line">return (-log_reg.coef_[0] * x1 - log_reg.intercept_) / log_reg.coef_[1]</span><br><span class="line">x1_plot = np.linspace(4, 8, 1000)</span><br><span class="line">x2_plot = x2(x1_plot)</span><br><span class="line">plt.scatter(x[y==0,0], x[y==0,1], color=&apos;red&apos;)</span><br><span class="line">plt.scatter(x[y==1,0], x[y==1,1], color=&apos;blue&apos;)</span><br><span class="line">plt.plot(x1_plot, x2_plot)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>得到的结果如下：</p><p><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/LR%2FLR3.png" alt="决策边界"></p><p>上述的决策边界是一条直线，所以不严格的说还是属于线性分类，当分类数据不线性的时候就需要不规则的决策边界。<br>    举个例子使用KNN算法来对上述数据进行分类：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line"></span><br><span class="line">knn_clf = KNeighborsClassifier()</span><br><span class="line">knn_clf.fit(x_train, y_train)</span><br><span class="line">knn_clf.score(x_test, y_test)</span><br><span class="line">plot_decision_boundary(knn_clf, axis=[<span class="number">4</span>, <span class="number">7.5</span>, <span class="number">1.5</span>, <span class="number">4.5</span>])</span><br><span class="line">plt.scatter(x[y==<span class="number">0</span>,<span class="number">0</span>], x[y==<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line">plt.scatter(x[y==<span class="number">1</span>,<span class="number">0</span>], x[y==<span class="number">1</span>,<span class="number">1</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>结果如下：<br><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/LR%2FLR4.png" alt="KNN"><br>    可以看出通过使用KNN方法对上述数据的决策边界就是不规则的<br>    因为KNN是支持多类别数据的分类的，然后我们的数据集也是3中类别的，所以测试下KNN在三分类中的分类的效果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">knn_clf_all = KNeighborsClassifier()</span><br><span class="line">knn_clf_all.fit(iris.data[:,:<span class="number">2</span>], iris.target)</span><br><span class="line"><span class="comment"># 欠拟合</span></span><br><span class="line">plot_decision_boundary(knn_clf_all, axis=[<span class="number">4</span>, <span class="number">8</span>, <span class="number">1.5</span>, <span class="number">4.5</span>])</span><br><span class="line">plt.scatter(iris.data[iris.target==<span class="number">0</span>,<span class="number">0</span>], iris.data[iris.target==<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line">plt.scatter(iris.data[iris.target==<span class="number">1</span>,<span class="number">0</span>], iris.data[iris.target==<span class="number">1</span>,<span class="number">1</span>])</span><br><span class="line">plt.scatter(iris.data[iris.target==<span class="number">2</span>,<span class="number">0</span>], iris.data[iris.target==<span class="number">2</span>,<span class="number">1</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>得到的结果如下：<br><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/LR%2FLR5.png" alt="KNN-3"></p><p>可以看出分类的结果是非常的不规则的，其实也就是应该是发生了过拟合的问题。<br>    对于KNeighborsClassifier()这个函数其实其中有一个参数是可以调节的,就是n_neighbors这个参数，可以直接运行 knn_clf_all = KNeighborsClassifier()查看其中的参数，n_neighbors这个参数的含义其实就是分类的复杂程度，越小的话越复杂，就容易出现过拟合的问题。这里调节下这个参数看一下效果，设置knn_clf_all = KNeighborsClassifier(n_neighbors = 50)，其余代码相同<br>    得到的结果如下:<br><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/LR%2FLR6.png" alt="KNN-n_50"></p><p>明显能够看出来决策边界规则了许多，但是相应的分类效果弱了一些，所以调参，调参。<br>    上面的数据集是可以线性分类的，当数据的类别线性不可分的时候，逻辑回归的方式怎么去处理呢？举个例子：<br><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/LR%2FLR7.png" alt="非线性数据"></p><p>当数据集是这样的，显然线性不可分，决策边界是不规则类似于圆。其实这个时候就需要类似于使用多项式回归的方式来处理。给逻辑回归中添加多项式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.pipeline <span class="keyword">import</span> Pipeline</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> PolynomialFeatures</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"><span class="keyword">from</span> playML.LogisticRegression <span class="keyword">import</span> LogisticRegression</span><br><span class="line"></span><br><span class="line">log_reg = LogisticRegression()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_decision_boundary</span><span class="params">(model, axis)</span>:</span></span><br><span class="line"></span><br><span class="line">x0, x1 = np.meshgrid(</span><br><span class="line">np.linspace(axis[<span class="number">0</span>], axis[<span class="number">1</span>], int((axis[<span class="number">1</span>]-axis[<span class="number">0</span>])*<span class="number">100</span>)).reshape(<span class="number">-1</span>,<span class="number">1</span>),</span><br><span class="line">np.linspace(axis[<span class="number">2</span>], axis[<span class="number">3</span>], int((axis[<span class="number">3</span>]-axis[<span class="number">2</span>])*<span class="number">100</span>)).reshape(<span class="number">-1</span>,<span class="number">1</span>)</span><br><span class="line">)</span><br><span class="line">X_new = np.c_[x0.ravel(), x1.ravel()]</span><br><span class="line"></span><br><span class="line">y_predict = model.predict(X_new)</span><br><span class="line">zz = y_predict.reshape(x0.shape)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> matplotlib.colors <span class="keyword">import</span> ListedColormap</span><br><span class="line">custom_cmap = ListedColormap([<span class="string">'#EF9A9A'</span>,<span class="string">'#FFF59D'</span>,<span class="string">'#90CAF9'</span>])</span><br><span class="line"></span><br><span class="line">plt.contourf(x0, x1, zz, linewidth=<span class="number">5</span>, cmap=custom_cmap)</span><br><span class="line"></span><br><span class="line"><span class="comment">#多项式</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">PolynomialLogisticRegression</span><span class="params">(degree)</span>:</span></span><br><span class="line"><span class="keyword">return</span> Pipeline([</span><br><span class="line">(<span class="string">'poly'</span>, PolynomialFeatures(degree=degree)),  <span class="comment">#多项式参数</span></span><br><span class="line">(<span class="string">'std_scaler'</span>, StandardScaler()),   <span class="comment">#标准化（归一化）</span></span><br><span class="line">(<span class="string">'log_reg'</span>, LogisticRegression())  <span class="comment">#逻辑回归对象</span></span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">poly_log_reg = PolynomialLogisticRegression(degree=<span class="number">2</span>)</span><br><span class="line">poly_log_reg.fit(X, y)</span><br><span class="line">plot_decision_boundary(poly_log_reg, [<span class="number">-4</span>, <span class="number">4</span>, <span class="number">-4</span>, <span class="number">4</span>])</span><br><span class="line">plt.scatter(X[y==<span class="number">0</span>,<span class="number">0</span>], X[y==<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line">plt.scatter(X[y==<span class="number">1</span>,<span class="number">0</span>], X[y==<span class="number">1</span>,<span class="number">1</span>])</span><br><span class="line">plt.show()</span><br><span class="line">print(<span class="string">"准确度："</span> + str(poly_log_reg.score(X, y)))</span><br></pre></td></tr></table></figure><p>得到如下的结果：<br><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/LR%2FLR8.png" alt="非线性LR"></p><p>可以看出添加了多项式的逻辑回归可以解决非线性可分的问题。</p><h3 id="逻辑回归中使用正则化处理过拟合的问题"><a href="#逻辑回归中使用正则化处理过拟合的问题" class="headerlink" title="逻辑回归中使用正则化处理过拟合的问题"></a>逻辑回归中使用正则化处理过拟合的问题</h3><p>因为数据线性不可分的时候，需要在逻辑回归中引入多项式，这也使得分类变得复杂，容桂产生过拟合的问题，解决方法有两个，一个是调节degree参数，另一种就是正则化。通用的正则化的方式就是在J(θ)函数中加一个正则项，使用J(θ）+aL2作为新的损失函数。a用来调节J(θ)和L2各自所占比重。这里C·J(θ）+L1作为所示函数，其实C也是用来平衡J(θ)和L1，原理是一样的。L1和L2是正则化中的一个重要的参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=<span class="number">666</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">PolynomialLogisticRegression2</span><span class="params">(degree, C, penalty=<span class="string">'l2'</span>)</span>:</span></span><br><span class="line"><span class="keyword">return</span> Pipeline([</span><br><span class="line">(<span class="string">'poly'</span>, PolynomialFeatures(degree=degree)),</span><br><span class="line">(<span class="string">'std_scaler'</span>, StandardScaler()),</span><br><span class="line">(<span class="string">'log_reg'</span>, LogisticRegression(C=C, penalty=penalty))</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">poly_log_reg2 = PolynomialLogisticRegression2(degree=<span class="number">10</span>, C=<span class="number">13</span>, penalty=<span class="string">'l1'</span>)</span><br><span class="line">poly_log_reg2.fit(X_train, y_train)</span><br><span class="line"></span><br><span class="line">plot_decision_boundary(poly_log_reg2, [<span class="number">-4</span>, <span class="number">4</span>, <span class="number">-4</span>, <span class="number">4</span>])</span><br><span class="line">plt.scatter(X[y==<span class="number">0</span>,<span class="number">0</span>], X[y==<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line">plt.scatter(X[y==<span class="number">1</span>,<span class="number">0</span>], X[y==<span class="number">1</span>,<span class="number">1</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/LR%2FLR9.png" alt=""></p><p>说实话这里选取的数据集的代表性不太够，没有太突出正则化的优点，注重点在方法的实现上，但是还是能看出有一点区别的，决策边界更加清楚了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;逻辑回归与决策边界&quot;&gt;&lt;a href=&quot;#逻辑回归与决策边界&quot; class=&quot;headerlink&quot; title=&quot;逻辑回归与决策边界&quot;&gt;&lt;/a&gt;逻辑回归与决策边界&lt;/h1&gt;&lt;h2 id=&quot;what？&quot;&gt;&lt;a href=&quot;#what？&quot; class=&quot;headerlink&quot; title=&quot;what？&quot;&gt;&lt;/a&gt;what？&lt;/h2&gt;&lt;p&gt;逻辑回归其实是一个分类算法而不是回归算法。通常是利用已知的自变量来预测一个离散型因变量的值（像二进制值0/1，是/否，真/假）。简单来说，它就是通过拟合一个逻辑函数（logit fuction）来预测一个事件发生的概率。所以它预测的是一个概率值，自然，它的输出值应该在0到1之间。&lt;/p&gt;
&lt;p&gt;Logistic回归简单分析:&lt;/p&gt;
&lt;p&gt;优点：计算代价不高，易于理解和实现&lt;br&gt;　　缺点：容易欠拟合，分类精度可能不高&lt;br&gt;　　适用数据类型：数值型和标称型数据&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习，逻辑回归" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%EF%BC%8C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>机器学习之线性回归（Linear Regression）</title>
    <link href="http://yoursite.com/2018/07/30/LinearRegression/"/>
    <id>http://yoursite.com/2018/07/30/LinearRegression/</id>
    <published>2018-07-30T01:42:31.000Z</published>
    <updated>2018-08-16T12:14:10.116Z</updated>
    
    <content type="html"><![CDATA[<h1 id="线性回归"><a href="#线性回归" class="headerlink" title="线性回归"></a>线性回归</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>线性回归(Linear Regression)是利用称为线性回归方程的最小平方函数对一个或多个自变量和因变量之间关系进行建模的一种回归分析。这种函数是一个或多个称为回归系数的模型参数的线性组合。</p><p>回归分析中，只包括一个自变量和一个因变量，且二者的关系可用一条直线近似表示，这种回归分析称为一元线性回归分析。如果回归分析中包括两个或两个以上的自变量，且因变量和自变量之间是线性关系，则称为多元线性回归分析。<br>        其特点为：</p><ul><li><p>解决回归问题</p></li><li><p>思想简单，实现容易</p></li><li><p>许多强大的非线性模型的基础</p></li><li><p>结果具有很好的可解释性</p></li><li><p>蕴含机器学习中的很多重要思想</p><a id="more"></a> <h2 id="简单线性回归的实现"><a href="#简单线性回归的实现" class="headerlink" title="简单线性回归的实现"></a>简单线性回归的实现</h2><p>下面我们来举例何为一元线性回归分析:</p><pre><code>首先假设有这样一组数据</code></pre><p><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/LinearRegression%2FLinear1.png" alt="dataset"></p><pre><code>从数据中我们可以看出，可以找到一条直线实现数据的拟合，这条直线设为                            y=ax+b那怎么计算a和b的参数，公式如下:</code></pre><p><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/LinearRegression%2FLinear2.png" alt="ab"></p><p>jupyter notebook中具体的代码实现：</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">x_mean = np.mean(x)</span><br><span class="line">y_mean = np.mean(y)</span><br><span class="line"><span class="comment">#分子</span></span><br><span class="line">num = <span class="number">0.0</span></span><br><span class="line"><span class="comment">#分母</span></span><br><span class="line">d = <span class="number">0.0</span></span><br><span class="line"><span class="keyword">for</span> x_i, y_i <span class="keyword">in</span> zip(x, y):</span><br><span class="line">num += (x_i - x_mean) * (y_i - y_mean)</span><br><span class="line">d += (x_i - x_mean) ** <span class="number">2</span></span><br><span class="line">a = num/d</span><br><span class="line">b = y_mean - a*x_mean</span><br><span class="line">y_hat = a*x + b</span><br><span class="line">plt.scatter(x,y)</span><br><span class="line">plt.plot(x,y_hat,color=<span class="string">"r"</span>)</span><br><span class="line">plt.axis([<span class="number">0</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">6</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>得到了拟合数据的直线：<br><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/LinearRegression%2FLinear3.png" alt="拟合直线"></p><p>这里还可以在底层自己实现线性回归的算法，然后在jupyter notebook中调用，相应的pycharm的代码为：</p><pre><code>import numpy as npfrom sklearn.metrics import r2_scoreclass LinearRegression:def __init__(self):&quot;&quot;&quot;初始化Linear Regression模型&quot;&quot;&quot;self.coef_ = Noneself.intercept_ = Noneself._theta = Nonedef fit_normal(self, X_train, y_train):&quot;&quot;&quot;根据训练数据集X_train, y_train训练Linear Regression模型&quot;&quot;&quot;assert X_train.shape[0] == y_train.shape[0], \&quot;the size of X_train must be equal to the size of y_train&quot;X_b = np.hstack([np.ones((len(X_train), 1)), X_train])self._theta = np.linalg.inv(X_b.T.dot(X_b)).dot(X_b.T).dot(y_train)self.intercept_ = self._theta[0]self.coef_ = self._theta[1:]return selfdef fit_gd(self, X_train, y_train, eta=0.01, n_iters=1e4):&quot;&quot;&quot;根据训练数据集X_train, y_train, 使用梯度下降法训练Linear Regression模型&quot;&quot;&quot;assert X_train.shape[0] == y_train.shape[0], \&quot;the size of X_train must be equal to the size of y_train&quot;def J(theta, X_b, y):try:return np.sum((y - X_b.dot(theta)) ** 2) / len(y)except:return float(&apos;inf&apos;)def dJ(theta, X_b, y):# res = np.empty(len(theta))# res[0] = np.sum(X_b.dot(theta) - y)# for i in range(1, len(theta)):# res[i] = (X_b.dot(theta) - y).dot(X_b[:, i])# return res * 2 / len(X_b)return X_b.T.dot(X_b.dot(theta) - y) * 2. / len(X_b)def gradient_descent(X_b, y, initial_theta, eta, n_iters=1e4, epsilon=1e-8):theta = initial_thetacur_iter = 0while cur_iter &lt; n_iters:gradient = dJ(theta, X_b, y)last_theta = thetatheta = theta - eta * gradientif (abs(J(theta, X_b, y) - J(last_theta, X_b, y)) &lt; epsilon):breakcur_iter += 1return thetaX_b = np.hstack([np.ones((len(X_train), 1)), X_train])initial_theta = np.zeros(X_b.shape[1])self._theta = gradient_descent(X_b, y_train, initial_theta, eta, n_iters)self.intercept_ = self._theta[0]self.coef_ = self._theta[1:]return selfdef fit_sgd(self, X_train, y_train, n_iters=5, t0=5, t1=50):&quot;&quot;&quot;根据训练数据集X_train, y_train, 使用梯度下降法训练Linear Regression模型&quot;&quot;&quot;assert X_train.shape[0] == y_train.shape[0], \&quot;the size of X_train must be equal to the size of y_train&quot;assert n_iters &gt;= 1def dJ_sgd(theta, X_b_i, y_i):return X_b_i * (X_b_i.dot(theta) - y_i) * 2.def sgd(X_b, y, initial_theta, n_iters, t0=5, t1=50):def learning_rate(t):return t0 / (t + t1)theta = initial_thetam = len(X_b)for cur_iter in range(n_iters):indexes = np.random.permutation(m)X_b_new = X_b[indexes]y_new = y[indexes]for i in range(m):gradient = dJ_sgd(theta, X_b_new[i], y_new[i])theta = theta - learning_rate(cur_iter * m + i) * gradientreturn thetaX_b = np.hstack([np.ones((len(X_train), 1)), X_train])initial_theta = np.random.randn(X_b.shape[1])self._theta = sgd(X_b, y_train, initial_theta, n_iters, t0, t1)self.intercept_ = self._theta[0]self.coef_ = self._theta[1:]return selfdef predict(self, X_predict):&quot;&quot;&quot;给定待预测数据集X_predict，返回表示X_predict的结果向量&quot;&quot;&quot;assert self.intercept_ is not None and self.coef_ is not None, \&quot;must fit before predict!&quot;assert X_predict.shape[1] == len(self.coef_), \&quot;the feature number of X_predict must be equal to X_train&quot;X_b = np.hstack([np.ones((len(X_predict), 1)), X_predict])return X_b.dot(self._theta)def score(self, X_test, y_test):&quot;&quot;&quot;根据测试数据集 X_test 和 y_test 确定当前模型的准确度&quot;&quot;&quot;y_predict = self.predict(X_test)return r2_score(y_test, y_predict)def __repr__(self):return &quot;LinearRegression()&quot;</code></pre><p>​<br>    这里其实就是一个简单的一元数据的一个简答线性回归算法。</p><h2 id="线性回归评价指标"><a href="#线性回归评价指标" class="headerlink" title="线性回归评价指标"></a>线性回归评价指标</h2><p>那怎么去评价线性回归算法的指标的好坏呢？<br>    常用得三个指标：均方误差MSE、均方根误差RMSE、平均绝对误差MAE，这三类算法具体公式这些就不再赘述了，这三类指标都存在一个局限性：作用域的使用范围，对不同事物的预测缺乏统一标准，这样就引出了新的一个预测指标R Squared，其实就是R^2,关于R^2的解释如下：<br><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/LinearRegression%2FLinear4.png" alt="R^2"></p><p>从上面的图中我们到关于R^2的公式，公式中上面分子就是我们训练出的模型预测的所有误差。 下面分母就是    不管什么我们猜的结果就是y的平均数。（其实也就是我们瞎猜的误差）<br>    那具体实现下这些评价指标，首先换一个数据集，上面是我们自己构造的的太简单了，<br>    导入sklearn中的datasets</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error, mean_absolute_error</span><br><span class="line"></span><br><span class="line">boston = datasets.load_boston()</span><br><span class="line">x = boston.data[:,<span class="number">5</span>]</span><br><span class="line">y = boston.target</span><br><span class="line">x = x[y&lt;<span class="number">50.0</span>]</span><br><span class="line">y = y[y&lt;<span class="number">50.0</span>]</span><br><span class="line">plt.scatter(x, y)</span><br><span class="line">plt.show()</span><br><span class="line"><span class="comment"># 划分训练集和测试集</span></span><br><span class="line"></span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=<span class="number">0.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 简单线性规划</span></span><br><span class="line">x_mean = np.mean(x_train)</span><br><span class="line">y_mean = np.mean(y_train)</span><br><span class="line"><span class="comment"># 分子</span></span><br><span class="line">num = <span class="number">0.0</span></span><br><span class="line"><span class="comment"># 分母</span></span><br><span class="line">d = <span class="number">0.0</span></span><br><span class="line"><span class="keyword">for</span> x_i, y_i <span class="keyword">in</span> zip(x_train, y_train):</span><br><span class="line">num += (x_i - x_mean) * (y_i - y_mean)</span><br><span class="line">d += (x_i - x_mean) ** <span class="number">2</span></span><br><span class="line">a = num/d</span><br><span class="line">b = y_mean - a*x_mean</span><br><span class="line">y_hat = a*x_train + b <span class="comment"># 回归函数</span></span><br><span class="line">plt.scatter(x_train, y_train)</span><br><span class="line">plt.plot(x_train, y_hat, color=<span class="string">"r"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>y_predict = a*x_test + bmse = mean_squared_error(y_test, y_predict)mae = mean_absolute_error(y_test, y_predict)print(&quot;均方误差为：&quot; + str(mse))print(&quot;平均绝对误差为：&quot; + str(mae))rs = 1 - mse/np.var(y_test)print(&quot;R Square = &quot; + str(rs))</code></pre><p><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/LinearRegression%2FLinear5.png" alt="data"></p><p>这样我们就得到了所有的评价指标。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;线性回归&quot;&gt;&lt;a href=&quot;#线性回归&quot; class=&quot;headerlink&quot; title=&quot;线性回归&quot;&gt;&lt;/a&gt;线性回归&lt;/h1&gt;&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;p&gt;线性回归(Linear Regression)是利用称为线性回归方程的最小平方函数对一个或多个自变量和因变量之间关系进行建模的一种回归分析。这种函数是一个或多个称为回归系数的模型参数的线性组合。&lt;/p&gt;
&lt;p&gt;回归分析中，只包括一个自变量和一个因变量，且二者的关系可用一条直线近似表示，这种回归分析称为一元线性回归分析。如果回归分析中包括两个或两个以上的自变量，且因变量和自变量之间是线性关系，则称为多元线性回归分析。&lt;br&gt;        其特点为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;解决回归问题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;思想简单，实现容易&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;许多强大的非线性模型的基础&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;结果具有很好的可解释性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;蕴含机器学习中的很多重要思想&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习，线性回归" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%EF%BC%8C%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>机器学习之梯度下降法(GradientDescent)</title>
    <link href="http://yoursite.com/2018/07/29/GradientDescent/"/>
    <id>http://yoursite.com/2018/07/29/GradientDescent/</id>
    <published>2018-07-29T13:32:24.000Z</published>
    <updated>2018-08-16T12:14:29.747Z</updated>
    
    <content type="html"><![CDATA[<h1 id="梯度下降法"><a href="#梯度下降法" class="headerlink" title="梯度下降法"></a>梯度下降法</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>梯度下降法是迭代法的一种,其实它不是一种具体的机器学习算法，是一种基于搜索的最优化方法，可以用于求解最小二乘问题(线性和非线性都可以)。在求解机器学习算法的模型参数，即无约束优化问题时，梯度下降（Gradient Descent）是最常采用的方法之一，另一种常用的方法是最小二乘法。在求解损失函数的最小值时，可以通过梯度下降法来一步步的迭代求解，得到最小化的损失函数和模型参数值。相应的还有一个梯度上升法，它的作用是最大化一个效用函数。</p><a id="more"></a> <p>​        用一个图来表示梯度下降法：<br><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/Gradient%20Descent%2FGradientDescent1.png" alt=""></p><p>怎么理解呢？梯度其实是在在多维空间中的概念，在二维的平面上其实就是导数，梯度表示的就是方向，通过求某一个点的梯度，我们就可以知道J(损失函数)增大的方向，然后乘-η就可以找到J(损失函数)减小的方向，不断地求J的导数，直到其变为0，这样就找到J的最小值点。这里的η称为学习率，η的取值影响获得最优解的速度，η取值太小的时候学习速度收敛太慢，η太大有可能直接跳过最小值点然后导致不收敛。</p><p><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/Gradient%20Descent%2FGradientDescent2.png" alt=""></p><p>有可能在某一次取值的过程中找到的是局部最优解，而不是全局最优解。这个时候怎么解决呢？多次运行，随机化初始点，这样的话增加了找到全局最优解的概率。</p><h2 id="模拟实现梯度下降法"><a href="#模拟实现梯度下降法" class="headerlink" title="模拟实现梯度下降法"></a>模拟实现梯度下降法</h2><p>jupyter notebook中实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment">#datasets</span></span><br><span class="line">x = np.linspace(<span class="number">-1</span>, <span class="number">6</span> ,<span class="number">141</span>)</span><br><span class="line">y = (x<span class="number">-2.5</span>)**<span class="number">2</span><span class="number">-1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 求导数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dJ</span><span class="params">(theta)</span>:</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span>*(theta - <span class="number">2.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 损失函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">J</span><span class="params">(theta)</span>:</span></span><br><span class="line"><span class="keyword">return</span> (theta - <span class="number">2.5</span>)**<span class="number">2</span><span class="number">-1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 梯度下降法</span></span><br><span class="line">theta = <span class="number">0.0</span></span><br><span class="line">eta = <span class="number">0.1</span></span><br><span class="line"><span class="comment">#误差精度</span></span><br><span class="line">epsilon = <span class="number">1e-8</span></span><br><span class="line">theta_history = [theta]</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">gradient = dJ(theta)</span><br><span class="line">last_theta = theta</span><br><span class="line">theta = theta - eta * gradient</span><br><span class="line">theta_history.append(theta)</span><br><span class="line"><span class="keyword">if</span>(abs(J(theta) - J(last_theta)) &lt; epsilon):</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">plt.plot(x, y)</span><br><span class="line">plt.plot(np.array(theta_history), J(np.array(theta_history)), color=<span class="string">'R'</span>, marker = <span class="string">'o'</span>)</span><br><span class="line">plt.xlabel(<span class="string">"theta"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"J"</span>)</span><br><span class="line">plt.show()</span><br><span class="line">print(<span class="string">"theta = "</span> + str(theta))</span><br><span class="line">print(<span class="string">"J(theta) = "</span> + str(J(theta)))</span><br></pre></td></tr></table></figure><p>得到的结果如下：<br><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/Gradient%20Descent%2FGradientDescent3.png" alt=""></p><p>然后我们上面讨论过，η取值太小的时候学习速度收敛太慢，η太大有可能直接跳过最小值点然后导致不收敛。下面测试一下。先取η=0.01<br><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/Gradient%20Descent%2FGradientDescent4.png" alt=""></p><p>我们可以看出梯度下降的速度变慢了<br>        然后取η=1<br><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/Gradient%20Descent%2FGradientDescent5.png" alt=""></p><p>当η&gt;1的时候编译器就自动报错，但是这里只是针对这里定义的这个函数，并不是意味着η=1就是极限值，针对不同的函数有不同的取值。</p><h2 id="多元线性回归中使用批量梯度下降"><a href="#多元线性回归中使用批量梯度下降" class="headerlink" title="多元线性回归中使用批量梯度下降"></a>多元线性回归中使用批量梯度下降</h2><p>线性回归中使用梯度下降法，其目标是使得<br>$$<br>\sum_{i=1}^{m}(y^i-\hat{y}^i)^2<br>$$<br>尽可能小，而且线性回归算法的损失函数是具有唯一解的。<br>        其中<br>$$<br>\hat{y}^{i} = \theta _{0} + \theta _{1}X_{1}^{i}+…++ \theta _{n}X_{n}^{i}<br>$$<br>带入因此线性回归中梯度下降的目标就成为了<br>$$<br>\sum_{i=1}^{m}(y^i - \theta _{0} + \theta _{1}X_{1}^{i}+…++ \theta _{n}X_{n}^{i})<br>$$<br>使得其尽可能小。<br>那梯度怎么去求呢？如下：<br><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/Gradient%20Descent%2FGradientDescent6.png" alt=""></p><h3 id="批量梯度下降法具体实现"><a href="#批量梯度下降法具体实现" class="headerlink" title="批量梯度下降法具体实现"></a>批量梯度下降法具体实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">np.random.seed(666)</span><br><span class="line">x = 2 * np.random.random(size = 100)</span><br><span class="line">y = x * 3.0 + 4.0 + np.random.normal(size = 100)</span><br><span class="line">X = x.reshape(-1, 1)</span><br><span class="line"></span><br><span class="line">#损失函数</span><br><span class="line">def J(theta, X_b, y):</span><br><span class="line">try:</span><br><span class="line">return np.sum((y - X_b.dot(theta))**2)/len(X_b)</span><br><span class="line">except:</span><br><span class="line">return float(&apos;inf&apos;)</span><br><span class="line"></span><br><span class="line">#损失函数的梯度</span><br><span class="line">def dJ(theta, X_b, y):</span><br><span class="line">res = np.empty(len(theta))</span><br><span class="line">res[0] = np.sum(X_b.dot(theta) - y)</span><br><span class="line">for i in range(1, len(theta)):</span><br><span class="line">res[i] = (X_b.dot(theta) - y).dot(X_b[:,i])</span><br><span class="line">return res *2 /len(X_b)</span><br><span class="line"></span><br><span class="line">#梯度下降法</span><br><span class="line">def gradient_descent(X_b, y, initial_thata, eta, n_iters = 1e4, epsilon = 1e-8):</span><br><span class="line">theta = initial_theta</span><br><span class="line">i_iter = 0</span><br><span class="line"></span><br><span class="line">while i_iter &lt; n_iters:# n_iters是最大循环次数</span><br><span class="line">gradient = dJ(theta, X_b, y)</span><br><span class="line">last_theta = theta</span><br><span class="line">theta = theta - eta * gradient</span><br><span class="line"></span><br><span class="line">if(abs(J(theta, X_b, y) - J(last_theta, X_b, y)) &lt; epsilon):</span><br><span class="line">break</span><br><span class="line"></span><br><span class="line">i_iter += 1</span><br><span class="line"></span><br><span class="line">return theta</span><br><span class="line"></span><br><span class="line">X_b = np.hstack([np.ones((len(x), 1)), x.reshape(-1, 1)])</span><br><span class="line">initial_theta = np.zeros(X_b.shape[1])</span><br><span class="line">eta = 0.01</span><br><span class="line"></span><br><span class="line">theta = gradient_descent(X_b, y, initial_theta, eta)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plt.scatter(x, y)</span><br><span class="line">Y = X_b.dot(theta)</span><br><span class="line">plt.plot(x, Y, color=<span class="string">"red"</span>)</span><br><span class="line">plt.show()</span><br><span class="line">print(<span class="string">"theta = "</span> + str(theta))</span><br></pre></td></tr></table></figure><p>得到的结果</p><p><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/Gradient%20Descent%2FGradientDescent7.png" alt=""></p><p>在初始化数据的时候，斜率设为3，截距为4，然后我们训练出的结果theta与两值接近，证明训练的模型是准确的：<br>y = x * 3.0 + 4.0 + np.random.normal(size = 100)</p><h2 id="随机梯度下降法"><a href="#随机梯度下降法" class="headerlink" title="随机梯度下降法"></a>随机梯度下降法</h2><p>上面我们用的是批量梯度下降法，这种方法有一个缺点，就是每一项都需要对所有的样本点进行计算，数据量少的时候还可以，但是数据量很大的时候就显得很鸡肋了，计算非常的耗资源。能不能每一次计算的时候只对其中的一个样本进行计算呢？这就衍生出了随机梯度下降法。</p><p><img src="https://pythonimage-1257203698.cos.ap-shanghai.myqcloud.com/Gradient%20Descent%2FGradientDescent8.png" alt=""></p><p>即每读取一条样本，就迭代对Θ进行更新，然后判断其是否收敛，若没收敛，则继续读取样本进行处理，如果所有样本都读取完毕了，则循环重新从头开始读取样本进行处理。但是，相较于批量梯度下降算法而言，随机梯度下降算法使得J(Θ)趋近于最小值的速度更快，但是有可能造成永远不可能收敛于最小值，有可能一直会在最小值周围震荡，但是实践中，大部分值都能够接近于最小值，所以当数据量很大的时候可以用精度来换取时间。</p><p>在随机梯度下降法中为了得到更高的收敛结果，学习率是要随着循环次数的增加而逐渐的减小。这是因为在学习的过程中要是学习率是一个固定值，但是可能由于随机的过程不够好，eta有是一个固定值，那么在学习的过程中随机梯度下降法接近最优解的时候又会慢慢的跳出最优解的范围。气质学习率随着循环次数的增加而逐渐的减小这种思想是模拟退火的思想，去搜了下模拟退火，下面写下自己的理解。</p><h3 id="模拟退火算法"><a href="#模拟退火算法" class="headerlink" title="模拟退火算法"></a>模拟退火算法</h3><p>拟退火其实也是一种贪心算法，但是它的搜索过程引入了随机因素。模拟退火算法以一定的概率来接受一个比当前解要差的解，因此有可能会跳出这个局部的最优解，达到全局的最优解。<br>模拟退火算法描述：</p><p>想象一个高温物体的降温过程。其温度为T时出现能量差为dE的降温概率为<br>P(dE) =  e ^ ( -dE / (k * T) ) 。<br>其实就是温度越高降温的概率越大，温度越低降温概率越小。而模拟退火就是利用这样一种思想去进行搜索。<br>那么在进行搜索的时候首先定义一个初始值( 温度 ) T , 一个系数 r ( 降温速度  0 \&lt; r \&lt; 1 ) , 假设你当前状态为 f i , 你的下一个状态为 f i +1 , 对这两个状态进行评价，如果更接近你想要的结果，就更新到这个状态，否则则以 P ( dE ) 的概率去更新到 这个状态，但是其实在实际题目中，这个概率是不必要的，这一步有时是可以忽略掉的。我们可以想象，随着搜索次数的不断增多，搜索范围将越来越趋近于稳定，也就是随着时间的增长温度降低的概率越来越低，直到趋近于1。对应搜索就是随着你搜索的次数越多，你搜索到的值是你想要的值的概率就越大。</p><p>然后结合模拟退火的思想，在随机梯度下降法中设置学习率为:</p><p>然后结合模拟退火的思想，在随机梯度下降法中设置学习率为:<br>$$<br>\eta = \frac{a}{i_iters + b}<br>$$<br>其中i_iters是循环次数，a,b是两个经验参数，根据实际情况设置。</p><p>看完了梯度下降法，其优缺点如下：</p><p>第一种，遍历全部数据集算一次损失函数，然后算函数对各个参数的梯度，更新梯度。这种方法每更新一次参数都要把数据集里的所有样本都看一遍，计算量开销大，计算速度慢，不支持在线学习，其实这就是批量梯度下降。</p><p>其中i_iters是循环次数，a,b是两个经验参数，根据实际情况设置。</p><p>看完了梯度下降法，其优缺点如下：</p><p>第一种，遍历全部数据集算一次损失函数，然后算函数对各个参数的梯度，更新梯度。这种方法每更新一次参数都要把数据集里的所有样本都看一遍，计算量开销大，计算速度慢，不支持在线学习，其实这就是批量梯度下降。</p><p>其中i_iters是循环次数，a,b是两个经验参数，根据实际情况设置。<br>看完了梯度下降法，其优缺点如下：<br>第一种，遍历全部数据集算一次损失函数，然后算函数对各个参数的梯度，更新梯度。这种方法每更新一次参数都要把数据集里的所有样本都看一遍，计算量开销大，计算速度慢，不支持在线学习，其实这就是批量梯度下降。</p><p>另一种，每看一个数据就算一下损失函数，然后求梯度更新参数，这个其实也就是随机梯度下降，这个方法速度比较快，但是收敛性能不太好，可能在最优点附近晃来晃去，找不到不到最优点。两次参数的更新也有可能互相抵消掉，造成目标函数震荡的比较剧烈。</p><p>为了克服两种方法的缺点，现在一般采用的是一种折中手段，小批的梯度下降，这种方法把数据分为若干个批，按批来更新参数，这样，一个批中的一组数据共同决定了本次梯度的方向，下降起来就不容易跑偏，减少了随机性。另一方面因为批的样本数与整个数据集相比小了很多，计算量也不是很大。</p><p>另一种，每看一个数据就算一下损失函数，然后求梯度更新参数，这个其实也就是随机梯度下降，这个方法速度比较快，但是收敛性能不太好，可能在最优点附近晃来晃去，找不到不到最优点。两次参数的更新也有可能互相抵消掉，造成目标函数震荡的比较剧烈。为了克服两种方法的缺点，现在一般采用的是一种折中手段，小批的梯度下降，这种方法把数据分为若干个批，按批来更新参数，这样，一个批中的一组数据共同决定了本次梯度的方向，下降起来就不容易跑偏，减少了随机性。另一方面因为批的样本数与整个数据集相比小了很多，计算量也不是很大。</p><p>为了克服两种方法的缺点，现在一般采用的是一种折中手段，小批的梯度下降，这种方法把数据分为若干个批，按批来更新参数，这样，一个批中的一组数据共同决定了本次梯度的方向，下降起来就不容易跑偏，减少了随机性。另一方面因为批的样本数与整个数据集相比小了很多，计算量也不是很大。</p><h3 id="随机梯度下降法实现"><a href="#随机梯度下降法实现" class="headerlink" title="随机梯度下降法实现"></a>随机梯度下降法实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">m = 100000</span><br><span class="line">x = np.random.normal(size = m)</span><br><span class="line">X = x.reshape(-1, 1)</span><br><span class="line">y = 4.0 * x + 3.0 + np.random.normal(0 ,3, size = m)</span><br><span class="line"></span><br><span class="line">def J(theta, X_b, y):</span><br><span class="line">try:</span><br><span class="line">return np.sum((y - X_b.dot(theta))**2) / len(y)</span><br><span class="line">except:</span><br><span class="line">return float(&apos;inf&apos;)</span><br><span class="line"></span><br><span class="line">def dJ_sgd(theta, X_b_i, y_i):</span><br><span class="line">return X_b_i.T.dot(X_b_i.dot(theta) - y_i) * 2.0 </span><br><span class="line"></span><br><span class="line">def sgd(X_b, y, initial_theta, n_iters):</span><br><span class="line">t0 = 5</span><br><span class="line">t1 = 50</span><br><span class="line"></span><br><span class="line">def learning_rate(t):</span><br><span class="line">return t0 / (t + t1)</span><br><span class="line"></span><br><span class="line">theta = initial_theta</span><br><span class="line">for cur_iter in range(n_iters):</span><br><span class="line">rand_i = np.random.randint(len(X_b))</span><br><span class="line">gradient = dJ_sgd(theta, X_b[rand_i], y[rand_i])</span><br><span class="line">theta = theta - learning_rate(cur_iter) * gradient</span><br><span class="line"></span><br><span class="line">return theta</span><br><span class="line">X_b = np.hstack([np.ones((len(X), 1)), X])</span><br><span class="line">initial_theta = np.zeros(X_b.shape[1])</span><br><span class="line">theta = sgd(X_b, y, initial_theta, n_iters = len(X_b)//3)</span><br><span class="line">print(&quot;theta = &quot; + str(theta))</span><br></pre></td></tr></table></figure><p>输出的theta = [3.00887864 4.05589554]，与设置的数据相接近。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;梯度下降法&quot;&gt;&lt;a href=&quot;#梯度下降法&quot; class=&quot;headerlink&quot; title=&quot;梯度下降法&quot;&gt;&lt;/a&gt;梯度下降法&lt;/h1&gt;&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;p&gt;梯度下降法是迭代法的一种,其实它不是一种具体的机器学习算法，是一种基于搜索的最优化方法，可以用于求解最小二乘问题(线性和非线性都可以)。在求解机器学习算法的模型参数，即无约束优化问题时，梯度下降（Gradient Descent）是最常采用的方法之一，另一种常用的方法是最小二乘法。在求解损失函数的最小值时，可以通过梯度下降法来一步步的迭代求解，得到最小化的损失函数和模型参数值。相应的还有一个梯度上升法，它的作用是最大化一个效用函数。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习，梯度下降，python3，jupyter notebook" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%EF%BC%8C%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%EF%BC%8Cpython3%EF%BC%8Cjupyter-notebook/"/>
    
  </entry>
  
  <entry>
    <title>哈哈哈，终于把博客搭建起来啦</title>
    <link href="http://yoursite.com/2018/06/21/first-blog/"/>
    <id>http://yoursite.com/2018/06/21/first-blog/</id>
    <published>2018-06-21T13:00:00.000Z</published>
    <updated>2018-08-02T14:08:49.777Z</updated>
    
    <content type="html"><![CDATA[<p>用来几个小时的时间，算是完成了简单的搭建，果然在学习的过程中才是最开心的。为什么要跑到这里搭建博客呢？嗯。。。。<br>       毕竟是要常年混迹在全球最大的同性交友社区了，把博客搭起来写写项目开发经历，记录下自己开踩过的坑，还是很重要的。<br>       希望路能越走越顺吧。啦啦啦……..</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;用来几个小时的时间，算是完成了简单的搭建，果然在学习的过程中才是最开心的。为什么要跑到这里搭建博客呢？嗯。。。。&lt;br&gt;       毕竟是要常年混迹在全球最大的同性交友社区了，把博客搭起来写写项目开发经历，记录下自己开踩过的坑，还是很重要的。&lt;br&gt;       希望路能
      
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
